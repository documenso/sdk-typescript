/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EmbeddingPresignVerifyEmbeddingPresignTokenRequest = {
  /**
   * The presign token to verify
   */
  token: string;
};

/**
 * Successful response
 */
export type EmbeddingPresignVerifyEmbeddingPresignTokenResponse = {
  success: boolean;
};

/** @internal */
export const EmbeddingPresignVerifyEmbeddingPresignTokenRequest$inboundSchema:
  z.ZodType<
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string(),
  });

/** @internal */
export type EmbeddingPresignVerifyEmbeddingPresignTokenRequest$Outbound = {
  token: string;
};

/** @internal */
export const EmbeddingPresignVerifyEmbeddingPresignTokenRequest$outboundSchema:
  z.ZodType<
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest$Outbound,
    z.ZodTypeDef,
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest
  > = z.object({
    token: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmbeddingPresignVerifyEmbeddingPresignTokenRequest$ {
  /** @deprecated use `EmbeddingPresignVerifyEmbeddingPresignTokenRequest$inboundSchema` instead. */
  export const inboundSchema =
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest$inboundSchema;
  /** @deprecated use `EmbeddingPresignVerifyEmbeddingPresignTokenRequest$outboundSchema` instead. */
  export const outboundSchema =
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest$outboundSchema;
  /** @deprecated use `EmbeddingPresignVerifyEmbeddingPresignTokenRequest$Outbound` instead. */
  export type Outbound =
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest$Outbound;
}

export function embeddingPresignVerifyEmbeddingPresignTokenRequestToJSON(
  embeddingPresignVerifyEmbeddingPresignTokenRequest:
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest,
): string {
  return JSON.stringify(
    EmbeddingPresignVerifyEmbeddingPresignTokenRequest$outboundSchema.parse(
      embeddingPresignVerifyEmbeddingPresignTokenRequest,
    ),
  );
}

export function embeddingPresignVerifyEmbeddingPresignTokenRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  EmbeddingPresignVerifyEmbeddingPresignTokenRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EmbeddingPresignVerifyEmbeddingPresignTokenRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EmbeddingPresignVerifyEmbeddingPresignTokenRequest' from JSON`,
  );
}

/** @internal */
export const EmbeddingPresignVerifyEmbeddingPresignTokenResponse$inboundSchema:
  z.ZodType<
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean(),
  });

/** @internal */
export type EmbeddingPresignVerifyEmbeddingPresignTokenResponse$Outbound = {
  success: boolean;
};

/** @internal */
export const EmbeddingPresignVerifyEmbeddingPresignTokenResponse$outboundSchema:
  z.ZodType<
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse$Outbound,
    z.ZodTypeDef,
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse
  > = z.object({
    success: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmbeddingPresignVerifyEmbeddingPresignTokenResponse$ {
  /** @deprecated use `EmbeddingPresignVerifyEmbeddingPresignTokenResponse$inboundSchema` instead. */
  export const inboundSchema =
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse$inboundSchema;
  /** @deprecated use `EmbeddingPresignVerifyEmbeddingPresignTokenResponse$outboundSchema` instead. */
  export const outboundSchema =
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse$outboundSchema;
  /** @deprecated use `EmbeddingPresignVerifyEmbeddingPresignTokenResponse$Outbound` instead. */
  export type Outbound =
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse$Outbound;
}

export function embeddingPresignVerifyEmbeddingPresignTokenResponseToJSON(
  embeddingPresignVerifyEmbeddingPresignTokenResponse:
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse,
): string {
  return JSON.stringify(
    EmbeddingPresignVerifyEmbeddingPresignTokenResponse$outboundSchema.parse(
      embeddingPresignVerifyEmbeddingPresignTokenResponse,
    ),
  );
}

export function embeddingPresignVerifyEmbeddingPresignTokenResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  EmbeddingPresignVerifyEmbeddingPresignTokenResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EmbeddingPresignVerifyEmbeddingPresignTokenResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EmbeddingPresignVerifyEmbeddingPresignTokenResponse' from JSON`,
  );
}
