/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The visibility of the document.
 */
export const Visibility = {
  Everyone: "EVERYONE",
  ManagerAndAbove: "MANAGER_AND_ABOVE",
  Admin: "ADMIN",
} as const;
/**
 * The visibility of the document.
 */
export type Visibility = ClosedEnum<typeof Visibility>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const GlobalAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type GlobalAccessAuth = ClosedEnum<typeof GlobalAccessAuth>;

/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export const GlobalActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export type GlobalActionAuth = ClosedEnum<typeof GlobalActionAuth>;

export type FormValues = string | boolean | number;

export const Role = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type Role = ClosedEnum<typeof Role>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const AccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type AccessAuth = ClosedEnum<typeof AccessAuth>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const ActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type ActionAuth = ClosedEnum<typeof ActionAuth>;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type =
  {
    Dropdown: "DROPDOWN",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType =
  {
    Dropdown: "dropdown",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType
  >;

export type DocumentCreateDocumentTemporaryFieldsValues = {
  value: string;
};

export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType;
    values?: Array<DocumentCreateDocumentTemporaryFieldsValues> | undefined;
    defaultValue?: string | undefined;
  };

export type Eleven = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta
    | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type =
  {
    Checkbox: "CHECKBOX",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType =
  {
    Checkbox: "checkbox",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType
  >;

export type FieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType;
    values?: Array<FieldsValues> | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

export type Ten = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta
    | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type =
  {
    Radio: "RADIO",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType =
  {
    Radio: "radio",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType
  >;

export type Values = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType;
    values?: Array<Values> | undefined;
  };

export type Nine = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta
    | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type =
  {
    Number: "NUMBER",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType =
  {
    Number: "number",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType
  >;

export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

export type Eight = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta
    | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type =
  {
    Text: "TEXT",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType =
  {
    Text: "text",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType
  >;

export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export type Seven = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta
    | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type =
  {
    Date: "DATE",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType =
  {
    Date: "date",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType
  >;

export type DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType;
  fontSize?: number | undefined;
};

export type Six = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta
    | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType =
  {
    Email: "EMAIL",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType
  >;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type =
  {
    Email: "email",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type
  >;

export type DocumentCreateDocumentTemporaryFieldsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type;
  fontSize?: number | undefined;
};

export type Five = {
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType;
  fieldMeta?: DocumentCreateDocumentTemporaryFieldsFieldMeta | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestType = {
  Name: "NAME",
} as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestType =
  ClosedEnum<typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestType>;

export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType =
  {
    Name: "name",
  } as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType
  >;

export type FieldsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType;
  fontSize?: number | undefined;
};

export type Four = {
  type: DocumentCreateDocumentTemporaryFieldsDocumentsRequestType;
  fieldMeta?: FieldsFieldMeta | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const DocumentCreateDocumentTemporaryFieldsType = {
  Initials: "INITIALS",
} as const;
export type DocumentCreateDocumentTemporaryFieldsType = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryFieldsType
>;

export const DocumentCreateDocumentTemporaryFieldsDocumentsType = {
  Initials: "initials",
} as const;
export type DocumentCreateDocumentTemporaryFieldsDocumentsType = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryFieldsDocumentsType
>;

export type FieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentCreateDocumentTemporaryFieldsDocumentsType;
  fontSize?: number | undefined;
};

export type Three = {
  type: DocumentCreateDocumentTemporaryFieldsType;
  fieldMeta?: FieldMeta | undefined;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldsType = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldsType = ClosedEnum<typeof FieldsType>;

export type Two = {
  type: FieldsType;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const Type = {
  Signature: "SIGNATURE",
} as const;
export type Type = ClosedEnum<typeof Type>;

export type One = {
  type: Type;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export type Fields =
  | One
  | Two
  | Three
  | Four
  | Five
  | Six
  | Seven
  | Eight
  | Nine
  | Ten
  | Eleven;

export type Recipients = {
  email: string;
  name: string;
  role: Role;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: AccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: ActionAuth | null | undefined;
  fields?:
    | Array<
      | One
      | Two
      | Three
      | Four
      | Five
      | Six
      | Seven
      | Eight
      | Nine
      | Ten
      | Eleven
    >
    | undefined;
};

/**
 * The date format to use for date fields and signing the document.
 */
export const DateFormat = {
  YyyyMMDdHhMMA: "yyyy-MM-dd hh:mm a",
  YyyyMMDd: "yyyy-MM-dd",
  DdMMYyyyHhMMA: "dd/MM/yyyy hh:mm a",
  MMDdYyyyHhMMA: "MM/dd/yyyy hh:mm a",
  YyyyMMDdHHMM: "yyyy-MM-dd HH:mm",
  YyMMDdHhMMA: "yy-MM-dd hh:mm a",
  YyyyMMDdHHMMSs: "yyyy-MM-dd HH:mm:ss",
  MMMMDdYyyyHhMmA: "MMMM dd, yyyy hh:mm a",
  EEEEMMMMDdYyyyHhMmA: "EEEE, MMMM dd, yyyy hh:mm a",
  YyyyMMDdTHHMMSsSSSXXX: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
} as const;
/**
 * The date format to use for date fields and signing the document.
 */
export type DateFormat = ClosedEnum<typeof DateFormat>;

/**
 * The distribution method to use when sending the document to the recipients.
 */
export const DistributionMethod = {
  Email: "EMAIL",
  None: "NONE",
} as const;
/**
 * The distribution method to use when sending the document to the recipients.
 */
export type DistributionMethod = ClosedEnum<typeof DistributionMethod>;

export const SigningOrder = {
  Parallel: "PARALLEL",
  Sequential: "SEQUENTIAL",
} as const;
export type SigningOrder = ClosedEnum<typeof SigningOrder>;

/**
 * The language to use for email communications with recipients.
 */
export const Language = {
  De: "de",
  En: "en",
  Fr: "fr",
  Es: "es",
} as const;
/**
 * The language to use for email communications with recipients.
 */
export type Language = ClosedEnum<typeof Language>;

export type EmailSettings = {
  /**
   * Whether to send an email to all recipients that the document is ready for them to sign.
   */
  recipientSigningRequest?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who was removed from a pending document.
   */
  recipientRemoved?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when a recipient has signed the document.
   */
  recipientSigned?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who has just signed the document indicating that there are still other recipients who need to sign the document. This will only be sent if the document is still pending after the recipient has signed.
   */
  documentPending?: boolean | undefined;
  /**
   * Whether to send an email to all recipients when the document is complete.
   */
  documentCompleted?: boolean | undefined;
  /**
   * Whether to send an email to all recipients if a pending document has been deleted.
   */
  documentDeleted?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when the document is complete.
   */
  ownerDocumentCompleted?: boolean | undefined;
};

export type Meta = {
  /**
   * The subject of the email that will be sent to the recipients.
   */
  subject?: string | undefined;
  /**
   * The message of the email that will be sent to the recipients.
   */
  message?: string | undefined;
  /**
   * The timezone to use for date fields and signing the document. Example Etc/UTC, Australia/Melbourne
   */
  timezone?: string | undefined;
  /**
   * The date format to use for date fields and signing the document.
   */
  dateFormat?: DateFormat | undefined;
  /**
   * The distribution method to use when sending the document to the recipients.
   */
  distributionMethod?: DistributionMethod | undefined;
  signingOrder?: SigningOrder | undefined;
  /**
   * The URL to which the recipient should be redirected after signing the document.
   */
  redirectUrl?: string | undefined;
  /**
   * The language to use for email communications with recipients.
   */
  language?: Language | undefined;
  /**
   * Whether to allow recipients to sign using a typed signature.
   */
  typedSignatureEnabled?: boolean | undefined;
  emailSettings?: EmailSettings | undefined;
};

export type DocumentCreateDocumentTemporaryRequestBody = {
  /**
   * The title of the document.
   */
  title: string;
  /**
   * The external ID of the document.
   */
  externalId?: string | undefined;
  /**
   * The visibility of the document.
   */
  visibility?: Visibility | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  globalAccessAuth?: GlobalAccessAuth | undefined;
  /**
   * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
   */
  globalActionAuth?: GlobalActionAuth | undefined;
  formValues?: { [k: string]: string | boolean | number } | undefined;
  recipients?: Array<Recipients> | undefined;
  meta?: Meta | undefined;
};

export const DocumentCreateDocumentTemporaryVisibility = {
  Everyone: "EVERYONE",
  ManagerAndAbove: "MANAGER_AND_ABOVE",
  Admin: "ADMIN",
} as const;
export type DocumentCreateDocumentTemporaryVisibility = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryVisibility
>;

export const DocumentCreateDocumentTemporaryStatus = {
  Draft: "DRAFT",
  Pending: "PENDING",
  Completed: "COMPLETED",
} as const;
export type DocumentCreateDocumentTemporaryStatus = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryStatus
>;

export const DocumentCreateDocumentTemporarySource = {
  Document: "DOCUMENT",
  Template: "TEMPLATE",
  TemplateDirectLink: "TEMPLATE_DIRECT_LINK",
} as const;
export type DocumentCreateDocumentTemporarySource = ClosedEnum<
  typeof DocumentCreateDocumentTemporarySource
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const DocumentCreateDocumentTemporaryGlobalAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type DocumentCreateDocumentTemporaryGlobalAccessAuth = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryGlobalAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export const DocumentCreateDocumentTemporaryGlobalActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export type DocumentCreateDocumentTemporaryGlobalActionAuth = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryGlobalActionAuth
>;

export type DocumentCreateDocumentTemporaryAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  globalAccessAuth: DocumentCreateDocumentTemporaryGlobalAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
   */
  globalActionAuth: DocumentCreateDocumentTemporaryGlobalActionAuth | null;
};

export type DocumentCreateDocumentTemporaryFormValues =
  | string
  | boolean
  | number;

export const DocumentCreateDocumentTemporaryType = {
  S3Path: "S3_PATH",
  Bytes: "BYTES",
  Bytes64: "BYTES_64",
} as const;
export type DocumentCreateDocumentTemporaryType = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryType
>;

export type DocumentCreateDocumentTemporaryDocumentData = {
  type: DocumentCreateDocumentTemporaryType;
  id: string;
  data: string;
  initialData: string;
};

export const DocumentCreateDocumentTemporarySigningOrder = {
  Parallel: "PARALLEL",
  Sequential: "SEQUENTIAL",
} as const;
export type DocumentCreateDocumentTemporarySigningOrder = ClosedEnum<
  typeof DocumentCreateDocumentTemporarySigningOrder
>;

export const DocumentCreateDocumentTemporaryDistributionMethod = {
  Email: "EMAIL",
  None: "NONE",
} as const;
export type DocumentCreateDocumentTemporaryDistributionMethod = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryDistributionMethod
>;

export type DocumentCreateDocumentTemporaryEmailSettings = {
  /**
   * Whether to send an email to all recipients that the document is ready for them to sign.
   */
  recipientSigningRequest?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who was removed from a pending document.
   */
  recipientRemoved?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when a recipient has signed the document.
   */
  recipientSigned?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who has just signed the document indicating that there are still other recipients who need to sign the document. This will only be sent if the document is still pending after the recipient has signed.
   */
  documentPending?: boolean | undefined;
  /**
   * Whether to send an email to all recipients when the document is complete.
   */
  documentCompleted?: boolean | undefined;
  /**
   * Whether to send an email to all recipients if a pending document has been deleted.
   */
  documentDeleted?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when the document is complete.
   */
  ownerDocumentCompleted?: boolean | undefined;
};

export type DocumentCreateDocumentTemporaryDocumentMeta = {
  signingOrder: DocumentCreateDocumentTemporarySigningOrder;
  distributionMethod: DocumentCreateDocumentTemporaryDistributionMethod;
  id: string;
  subject: string | null;
  message: string | null;
  timezone: string | null;
  password: string | null;
  dateFormat: string | null;
  documentId: number;
  redirectUrl: string | null;
  typedSignatureEnabled: boolean;
  language: string;
  emailSettings: DocumentCreateDocumentTemporaryEmailSettings | null;
};

export const DocumentCreateDocumentTemporaryRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type DocumentCreateDocumentTemporaryRole = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryRole
>;

export const DocumentCreateDocumentTemporaryReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type DocumentCreateDocumentTemporaryReadStatus = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryReadStatus
>;

export const DocumentCreateDocumentTemporarySigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type DocumentCreateDocumentTemporarySigningStatus = ClosedEnum<
  typeof DocumentCreateDocumentTemporarySigningStatus
>;

export const DocumentCreateDocumentTemporarySendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type DocumentCreateDocumentTemporarySendStatus = ClosedEnum<
  typeof DocumentCreateDocumentTemporarySendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const DocumentCreateDocumentTemporaryAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type DocumentCreateDocumentTemporaryAccessAuth = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const DocumentCreateDocumentTemporaryActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type DocumentCreateDocumentTemporaryActionAuth = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryActionAuth
>;

export type DocumentCreateDocumentTemporaryDocumentsAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: DocumentCreateDocumentTemporaryAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: DocumentCreateDocumentTemporaryActionAuth | null;
};

export type DocumentCreateDocumentTemporaryRecipients = {
  role: DocumentCreateDocumentTemporaryRole;
  readStatus: DocumentCreateDocumentTemporaryReadStatus;
  signingStatus: DocumentCreateDocumentTemporarySigningStatus;
  sendStatus: DocumentCreateDocumentTemporarySendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: DocumentCreateDocumentTemporaryDocumentsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

export const DocumentCreateDocumentTemporaryDocumentsType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type DocumentCreateDocumentTemporaryDocumentsType = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryDocumentsType
>;

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type
  >;

export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues = {
  value: string;
};

export type DocumentCreateDocumentTemporaryFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type;
  values?:
    | Array<DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues>
    | undefined;
  defaultValue?: string | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType =
  {
    Checkbox: "checkbox",
  } as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType
  >;

export type DocumentCreateDocumentTemporaryFieldMetaDocumentsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentCreateDocumentTemporaryFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType;
  values?:
    | Array<DocumentCreateDocumentTemporaryFieldMetaDocumentsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType =
  {
    Radio: "radio",
  } as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType
  >;

export type DocumentCreateDocumentTemporaryFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentCreateDocumentTemporaryFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType;
  values?: Array<DocumentCreateDocumentTemporaryFieldMetaValues> | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType
  >;

export type DocumentCreateDocumentTemporaryFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType
  >;

export type DocumentCreateDocumentTemporaryFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type =
  {
    Date: "date",
  } as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type
  >;

export type DocumentCreateDocumentTemporaryFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type;
  fontSize?: number | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType = {
  Email: "email",
} as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType =
  ClosedEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType
  >;

export type DocumentCreateDocumentTemporaryFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType;
  fontSize?: number | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaDocumentsType = {
  Name: "name",
} as const;
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsType = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsType
>;

export type DocumentCreateDocumentTemporaryFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentCreateDocumentTemporaryFieldMetaDocumentsType;
  fontSize?: number | undefined;
};

export const DocumentCreateDocumentTemporaryFieldMetaType = {
  Initials: "initials",
} as const;
export type DocumentCreateDocumentTemporaryFieldMetaType = ClosedEnum<
  typeof DocumentCreateDocumentTemporaryFieldMetaType
>;

export type DocumentCreateDocumentTemporaryFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentCreateDocumentTemporaryFieldMetaType;
  fontSize?: number | undefined;
};

export type DocumentCreateDocumentTemporaryFieldMeta =
  | DocumentCreateDocumentTemporaryFieldMeta1
  | DocumentCreateDocumentTemporaryFieldMeta2
  | DocumentCreateDocumentTemporaryFieldMeta3
  | DocumentCreateDocumentTemporaryFieldMeta4
  | DocumentCreateDocumentTemporaryFieldMeta7
  | DocumentCreateDocumentTemporaryFieldMeta9
  | DocumentCreateDocumentTemporaryFieldMeta5
  | DocumentCreateDocumentTemporaryFieldMeta8
  | DocumentCreateDocumentTemporaryFieldMeta6;

export type DocumentCreateDocumentTemporaryFields = {
  type: DocumentCreateDocumentTemporaryDocumentsType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | DocumentCreateDocumentTemporaryFieldMeta1
    | DocumentCreateDocumentTemporaryFieldMeta2
    | DocumentCreateDocumentTemporaryFieldMeta3
    | DocumentCreateDocumentTemporaryFieldMeta4
    | DocumentCreateDocumentTemporaryFieldMeta7
    | DocumentCreateDocumentTemporaryFieldMeta9
    | DocumentCreateDocumentTemporaryFieldMeta5
    | DocumentCreateDocumentTemporaryFieldMeta8
    | DocumentCreateDocumentTemporaryFieldMeta6
    | null;
};

export type Document = {
  visibility: DocumentCreateDocumentTemporaryVisibility;
  status: DocumentCreateDocumentTemporaryStatus;
  source: DocumentCreateDocumentTemporarySource;
  id: number;
  /**
   * A custom external ID you can use to identify the document.
   */
  externalId: string | null;
  /**
   * The ID of the user that created this document.
   */
  userId: number;
  authOptions: DocumentCreateDocumentTemporaryAuthOptions | null;
  formValues: { [k: string]: string | boolean | number } | null;
  title: string;
  documentDataId: string;
  createdAt: string;
  updatedAt: string;
  completedAt: string | null;
  deletedAt: string | null;
  teamId: number | null;
  templateId: number | null;
  documentData: DocumentCreateDocumentTemporaryDocumentData;
  documentMeta: DocumentCreateDocumentTemporaryDocumentMeta | null;
  recipients: Array<DocumentCreateDocumentTemporaryRecipients>;
  fields: Array<DocumentCreateDocumentTemporaryFields>;
};

/**
 * Successful response
 */
export type DocumentCreateDocumentTemporaryResponseBody = {
  document: Document;
  /**
   * The URL to upload the document PDF to. Use a PUT request with the file via form-data
   */
  uploadUrl: string;
};

/** @internal */
export const Visibility$inboundSchema: z.ZodNativeEnum<typeof Visibility> = z
  .nativeEnum(Visibility);

/** @internal */
export const Visibility$outboundSchema: z.ZodNativeEnum<typeof Visibility> =
  Visibility$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Visibility$ {
  /** @deprecated use `Visibility$inboundSchema` instead. */
  export const inboundSchema = Visibility$inboundSchema;
  /** @deprecated use `Visibility$outboundSchema` instead. */
  export const outboundSchema = Visibility$outboundSchema;
}

/** @internal */
export const GlobalAccessAuth$inboundSchema: z.ZodNativeEnum<
  typeof GlobalAccessAuth
> = z.nativeEnum(GlobalAccessAuth);

/** @internal */
export const GlobalAccessAuth$outboundSchema: z.ZodNativeEnum<
  typeof GlobalAccessAuth
> = GlobalAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalAccessAuth$ {
  /** @deprecated use `GlobalAccessAuth$inboundSchema` instead. */
  export const inboundSchema = GlobalAccessAuth$inboundSchema;
  /** @deprecated use `GlobalAccessAuth$outboundSchema` instead. */
  export const outboundSchema = GlobalAccessAuth$outboundSchema;
}

/** @internal */
export const GlobalActionAuth$inboundSchema: z.ZodNativeEnum<
  typeof GlobalActionAuth
> = z.nativeEnum(GlobalActionAuth);

/** @internal */
export const GlobalActionAuth$outboundSchema: z.ZodNativeEnum<
  typeof GlobalActionAuth
> = GlobalActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalActionAuth$ {
  /** @deprecated use `GlobalActionAuth$inboundSchema` instead. */
  export const inboundSchema = GlobalActionAuth$inboundSchema;
  /** @deprecated use `GlobalActionAuth$outboundSchema` instead. */
  export const outboundSchema = GlobalActionAuth$outboundSchema;
}

/** @internal */
export const FormValues$inboundSchema: z.ZodType<
  FormValues,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.boolean(), z.number()]);

/** @internal */
export type FormValues$Outbound = string | boolean | number;

/** @internal */
export const FormValues$outboundSchema: z.ZodType<
  FormValues$Outbound,
  z.ZodTypeDef,
  FormValues
> = z.union([z.string(), z.boolean(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FormValues$ {
  /** @deprecated use `FormValues$inboundSchema` instead. */
  export const inboundSchema = FormValues$inboundSchema;
  /** @deprecated use `FormValues$outboundSchema` instead. */
  export const outboundSchema = FormValues$outboundSchema;
  /** @deprecated use `FormValues$Outbound` instead. */
  export type Outbound = FormValues$Outbound;
}

export function formValuesToJSON(formValues: FormValues): string {
  return JSON.stringify(FormValues$outboundSchema.parse(formValues));
}

export function formValuesFromJSON(
  jsonString: string,
): SafeParseResult<FormValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FormValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FormValues' from JSON`,
  );
}

/** @internal */
export const Role$inboundSchema: z.ZodNativeEnum<typeof Role> = z.nativeEnum(
  Role,
);

/** @internal */
export const Role$outboundSchema: z.ZodNativeEnum<typeof Role> =
  Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Role$ {
  /** @deprecated use `Role$inboundSchema` instead. */
  export const inboundSchema = Role$inboundSchema;
  /** @deprecated use `Role$outboundSchema` instead. */
  export const outboundSchema = Role$outboundSchema;
}

/** @internal */
export const AccessAuth$inboundSchema: z.ZodNativeEnum<typeof AccessAuth> = z
  .nativeEnum(AccessAuth);

/** @internal */
export const AccessAuth$outboundSchema: z.ZodNativeEnum<typeof AccessAuth> =
  AccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccessAuth$ {
  /** @deprecated use `AccessAuth$inboundSchema` instead. */
  export const inboundSchema = AccessAuth$inboundSchema;
  /** @deprecated use `AccessAuth$outboundSchema` instead. */
  export const outboundSchema = AccessAuth$outboundSchema;
}

/** @internal */
export const ActionAuth$inboundSchema: z.ZodNativeEnum<typeof ActionAuth> = z
  .nativeEnum(ActionAuth);

/** @internal */
export const ActionAuth$outboundSchema: z.ZodNativeEnum<typeof ActionAuth> =
  ActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionAuth$ {
  /** @deprecated use `ActionAuth$inboundSchema` instead. */
  export const inboundSchema = ActionAuth$inboundSchema;
  /** @deprecated use `ActionAuth$outboundSchema` instead. */
  export const outboundSchema = ActionAuth$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsValues$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsValues$Outbound = {
  value: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsValues$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsValues$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsValues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsValues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsValues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsValues$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldsValues$Outbound;
}

export function documentCreateDocumentTemporaryFieldsValuesToJSON(
  documentCreateDocumentTemporaryFieldsValues:
    DocumentCreateDocumentTemporaryFieldsValues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsValues$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldsValues,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsValues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() => DocumentCreateDocumentTemporaryFieldsValues$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<DocumentCreateDocumentTemporaryFieldsValues$Outbound>
      | undefined;
    defaultValue?: string | undefined;
  };

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() => DocumentCreateDocumentTemporaryFieldsValues$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$outboundSchema
      .parse(
        documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta,
      ),
  );
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta' from JSON`,
  );
}

/** @internal */
export const Eleven$inboundSchema: z.ZodType<Eleven, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Eleven$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Eleven$outboundSchema: z.ZodType<
  Eleven$Outbound,
  z.ZodTypeDef,
  Eleven
> = z.object({
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients11FieldMeta$outboundSchema
  ).optional(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eleven$ {
  /** @deprecated use `Eleven$inboundSchema` instead. */
  export const inboundSchema = Eleven$inboundSchema;
  /** @deprecated use `Eleven$outboundSchema` instead. */
  export const outboundSchema = Eleven$outboundSchema;
  /** @deprecated use `Eleven$Outbound` instead. */
  export type Outbound = Eleven$Outbound;
}

export function elevenToJSON(eleven: Eleven): string {
  return JSON.stringify(Eleven$outboundSchema.parse(eleven));
}

export function elevenFromJSON(
  jsonString: string,
): SafeParseResult<Eleven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eleven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eleven' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldsValues$inboundSchema: z.ZodType<
  FieldsValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldsValues$outboundSchema: z.ZodType<
  FieldsValues$Outbound,
  z.ZodTypeDef,
  FieldsValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldsValues$ {
  /** @deprecated use `FieldsValues$inboundSchema` instead. */
  export const inboundSchema = FieldsValues$inboundSchema;
  /** @deprecated use `FieldsValues$outboundSchema` instead. */
  export const outboundSchema = FieldsValues$outboundSchema;
  /** @deprecated use `FieldsValues$Outbound` instead. */
  export type Outbound = FieldsValues$Outbound;
}

export function fieldsValuesToJSON(fieldsValues: FieldsValues): string {
  return JSON.stringify(FieldsValues$outboundSchema.parse(fieldsValues));
}

export function fieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldsValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldsValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldsValues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$inboundSchema,
    values: z.array(z.lazy(() => FieldsValues$inboundSchema)).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?: Array<FieldsValues$Outbound> | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaType$outboundSchema,
    values: z.array(z.lazy(() => FieldsValues$outboundSchema)).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$outboundSchema
      .parse(
        documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta,
      ),
  );
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta' from JSON`,
  );
}

/** @internal */
export const Ten$inboundSchema: z.ZodType<Ten, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Ten$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Ten$outboundSchema: z.ZodType<Ten$Outbound, z.ZodTypeDef, Ten> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10Type$outboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients10FieldMeta$outboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ten$ {
  /** @deprecated use `Ten$inboundSchema` instead. */
  export const inboundSchema = Ten$inboundSchema;
  /** @deprecated use `Ten$outboundSchema` instead. */
  export const outboundSchema = Ten$outboundSchema;
  /** @deprecated use `Ten$Outbound` instead. */
  export type Outbound = Ten$Outbound;
}

export function tenToJSON(ten: Ten): string {
  return JSON.stringify(Ten$outboundSchema.parse(ten));
}

export function tenFromJSON(
  jsonString: string,
): SafeParseResult<Ten, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Ten$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Ten' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$outboundSchema;
}

/** @internal */
export const Values$inboundSchema: z.ZodType<Values, z.ZodTypeDef, unknown> = z
  .object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type Values$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const Values$outboundSchema: z.ZodType<
  Values$Outbound,
  z.ZodTypeDef,
  Values
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values$ {
  /** @deprecated use `Values$inboundSchema` instead. */
  export const inboundSchema = Values$inboundSchema;
  /** @deprecated use `Values$outboundSchema` instead. */
  export const outboundSchema = Values$outboundSchema;
  /** @deprecated use `Values$Outbound` instead. */
  export type Outbound = Values$Outbound;
}

export function valuesToJSON(values: Values): string {
  return JSON.stringify(Values$outboundSchema.parse(values));
}

export function valuesFromJSON(
  jsonString: string,
): SafeParseResult<Values, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$inboundSchema,
    values: z.array(z.lazy(() => Values$inboundSchema)).optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?: Array<Values$Outbound> | undefined;
  };

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9FieldMetaType$outboundSchema,
    values: z.array(z.lazy(() => Values$outboundSchema)).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$outboundSchema
      .parse(
        documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta,
      ),
  );
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta' from JSON`,
  );
}

/** @internal */
export const Nine$inboundSchema: z.ZodType<Nine, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Nine$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Nine$outboundSchema: z.ZodType<Nine$Outbound, z.ZodTypeDef, Nine> =
  z.object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients9Type$outboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsFieldMeta$outboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Nine$ {
  /** @deprecated use `Nine$inboundSchema` instead. */
  export const inboundSchema = Nine$inboundSchema;
  /** @deprecated use `Nine$outboundSchema` instead. */
  export const outboundSchema = Nine$outboundSchema;
  /** @deprecated use `Nine$Outbound` instead. */
  export type Outbound = Nine$Outbound;
}

export function nineToJSON(nine: Nine): string {
  return JSON.stringify(Nine$outboundSchema.parse(nine));
}

export function nineFromJSON(
  jsonString: string,
): SafeParseResult<Nine, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Nine$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Nine' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8FieldMetaType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$outboundSchema
      .parse(
        documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta,
      ),
  );
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta' from JSON`,
  );
}

/** @internal */
export const Eight$inboundSchema: z.ZodType<Eight, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Eight$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Eight$outboundSchema: z.ZodType<
  Eight$Outbound,
  z.ZodTypeDef,
  Eight
> = z.object({
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients8Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyFieldMeta$outboundSchema
  ).optional(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eight$ {
  /** @deprecated use `Eight$inboundSchema` instead. */
  export const inboundSchema = Eight$inboundSchema;
  /** @deprecated use `Eight$outboundSchema` instead. */
  export const outboundSchema = Eight$outboundSchema;
  /** @deprecated use `Eight$Outbound` instead. */
  export type Outbound = Eight$Outbound;
}

export function eightToJSON(eight: Eight): string {
  return JSON.stringify(Eight$outboundSchema.parse(eight));
}

export function eightFromJSON(
  jsonString: string,
): SafeParseResult<Eight, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eight$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eight' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7FieldMetaType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestFieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$outboundSchema
      .parse(documentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta),
  );
}

export function documentCreateDocumentTemporaryFieldsDocumentsRequestFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta' from JSON`,
  );
}

/** @internal */
export const Seven$inboundSchema: z.ZodType<Seven, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Seven$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Seven$outboundSchema: z.ZodType<
  Seven$Outbound,
  z.ZodTypeDef,
  Seven
> = z.object({
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients7Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestFieldMeta$outboundSchema
  ).optional(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seven$ {
  /** @deprecated use `Seven$inboundSchema` instead. */
  export const inboundSchema = Seven$inboundSchema;
  /** @deprecated use `Seven$outboundSchema` instead. */
  export const outboundSchema = Seven$outboundSchema;
  /** @deprecated use `Seven$Outbound` instead. */
  export type Outbound = Seven$Outbound;
}

export function sevenToJSON(seven: Seven): string {
  return JSON.stringify(Seven$outboundSchema.parse(seven));
}

export function sevenFromJSON(
  jsonString: string,
): SafeParseResult<Seven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Seven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Seven' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsDocumentsFieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsDocumentsFieldMeta:
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$outboundSchema
      .parse(documentCreateDocumentTemporaryFieldsDocumentsFieldMeta),
  );
}

export function documentCreateDocumentTemporaryFieldsDocumentsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta' from JSON`,
  );
}

/** @internal */
export const Six$inboundSchema: z.ZodType<Six, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Six$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Six$outboundSchema: z.ZodType<Six$Outbound, z.ZodTypeDef, Six> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients6Type$outboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsDocumentsFieldMeta$outboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Six$ {
  /** @deprecated use `Six$inboundSchema` instead. */
  export const inboundSchema = Six$inboundSchema;
  /** @deprecated use `Six$outboundSchema` instead. */
  export const outboundSchema = Six$outboundSchema;
  /** @deprecated use `Six$Outbound` instead. */
  export type Outbound = Six$Outbound;
}

export function sixToJSON(six: Six): string {
  return JSON.stringify(Six$outboundSchema.parse(six));
}

export function sixFromJSON(
  jsonString: string,
): SafeParseResult<Six, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Six$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Six' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsFieldMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsFieldMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldsFieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldsFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipients5Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsFieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsFieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsFieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsFieldMeta$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldsFieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldsFieldMetaToJSON(
  documentCreateDocumentTemporaryFieldsFieldMeta:
    DocumentCreateDocumentTemporaryFieldsFieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldsFieldMeta$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldsFieldMeta,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldsFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const Five$inboundSchema: z.ZodType<Five, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$inboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsFieldMeta$inboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Five$Outbound = {
  type: string;
  fieldMeta?:
    | DocumentCreateDocumentTemporaryFieldsFieldMeta$Outbound
    | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Five$outboundSchema: z.ZodType<Five$Outbound, z.ZodTypeDef, Five> =
  z.object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyRecipientsType$outboundSchema,
    fieldMeta: z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldsFieldMeta$outboundSchema
    ).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Five$ {
  /** @deprecated use `Five$inboundSchema` instead. */
  export const inboundSchema = Five$inboundSchema;
  /** @deprecated use `Five$outboundSchema` instead. */
  export const outboundSchema = Five$outboundSchema;
  /** @deprecated use `Five$Outbound` instead. */
  export type Outbound = Five$Outbound;
}

export function fiveToJSON(five: Five): string {
  return JSON.stringify(Five$outboundSchema.parse(five));
}

export function fiveFromJSON(
  jsonString: string,
): SafeParseResult<Five, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Five$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Five' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestType
  > = z.nativeEnum(DocumentCreateDocumentTemporaryFieldsDocumentsRequestType);

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestType
  > = DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType
  > =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const FieldsFieldMeta$inboundSchema: z.ZodType<
  FieldsFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldsFieldMeta$outboundSchema: z.ZodType<
  FieldsFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldsFieldMeta
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldsDocumentsRequestRequestBodyType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldsFieldMeta$ {
  /** @deprecated use `FieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema = FieldsFieldMeta$inboundSchema;
  /** @deprecated use `FieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema = FieldsFieldMeta$outboundSchema;
  /** @deprecated use `FieldsFieldMeta$Outbound` instead. */
  export type Outbound = FieldsFieldMeta$Outbound;
}

export function fieldsFieldMetaToJSON(
  fieldsFieldMeta: FieldsFieldMeta,
): string {
  return JSON.stringify(FieldsFieldMeta$outboundSchema.parse(fieldsFieldMeta));
}

export function fieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldsFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldsFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const Four$inboundSchema: z.ZodType<Four, z.ZodTypeDef, unknown> = z
  .object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$inboundSchema,
    fieldMeta: z.lazy(() => FieldsFieldMeta$inboundSchema).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Four$Outbound = {
  type: string;
  fieldMeta?: FieldsFieldMeta$Outbound | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Four$outboundSchema: z.ZodType<Four$Outbound, z.ZodTypeDef, Four> =
  z.object({
    type:
      DocumentCreateDocumentTemporaryFieldsDocumentsRequestType$outboundSchema,
    fieldMeta: z.lazy(() => FieldsFieldMeta$outboundSchema).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Four$ {
  /** @deprecated use `Four$inboundSchema` instead. */
  export const inboundSchema = Four$inboundSchema;
  /** @deprecated use `Four$outboundSchema` instead. */
  export const outboundSchema = Four$outboundSchema;
  /** @deprecated use `Four$Outbound` instead. */
  export type Outbound = Four$Outbound;
}

export function fourToJSON(four: Four): string {
  return JSON.stringify(Four$outboundSchema.parse(four));
}

export function fourFromJSON(
  jsonString: string,
): SafeParseResult<Four, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Four$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Four' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryFieldsType> = z
    .nativeEnum(DocumentCreateDocumentTemporaryFieldsType);

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryFieldsType> =
    DocumentCreateDocumentTemporaryFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryFieldsDocumentsType> = z
    .nativeEnum(DocumentCreateDocumentTemporaryFieldsDocumentsType);

/** @internal */
export const DocumentCreateDocumentTemporaryFieldsDocumentsType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryFieldsDocumentsType> =
    DocumentCreateDocumentTemporaryFieldsDocumentsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldsDocumentsType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldsDocumentsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldsDocumentsType$outboundSchema;
}

/** @internal */
export const FieldMeta$inboundSchema: z.ZodType<
  FieldMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: DocumentCreateDocumentTemporaryFieldsDocumentsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldMeta$outboundSchema: z.ZodType<
  FieldMeta$Outbound,
  z.ZodTypeDef,
  FieldMeta
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: DocumentCreateDocumentTemporaryFieldsDocumentsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldMeta$ {
  /** @deprecated use `FieldMeta$inboundSchema` instead. */
  export const inboundSchema = FieldMeta$inboundSchema;
  /** @deprecated use `FieldMeta$outboundSchema` instead. */
  export const outboundSchema = FieldMeta$outboundSchema;
  /** @deprecated use `FieldMeta$Outbound` instead. */
  export type Outbound = FieldMeta$Outbound;
}

export function fieldMetaToJSON(fieldMeta: FieldMeta): string {
  return JSON.stringify(FieldMeta$outboundSchema.parse(fieldMeta));
}

export function fieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldMeta' from JSON`,
  );
}

/** @internal */
export const Three$inboundSchema: z.ZodType<Three, z.ZodTypeDef, unknown> = z
  .object({
    type: DocumentCreateDocumentTemporaryFieldsType$inboundSchema,
    fieldMeta: z.lazy(() => FieldMeta$inboundSchema).optional(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Three$Outbound = {
  type: string;
  fieldMeta?: FieldMeta$Outbound | undefined;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Three$outboundSchema: z.ZodType<
  Three$Outbound,
  z.ZodTypeDef,
  Three
> = z.object({
  type: DocumentCreateDocumentTemporaryFieldsType$outboundSchema,
  fieldMeta: z.lazy(() => FieldMeta$outboundSchema).optional(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Three$ {
  /** @deprecated use `Three$inboundSchema` instead. */
  export const inboundSchema = Three$inboundSchema;
  /** @deprecated use `Three$outboundSchema` instead. */
  export const outboundSchema = Three$outboundSchema;
  /** @deprecated use `Three$Outbound` instead. */
  export type Outbound = Three$Outbound;
}

export function threeToJSON(three: Three): string {
  return JSON.stringify(Three$outboundSchema.parse(three));
}

export function threeFromJSON(
  jsonString: string,
): SafeParseResult<Three, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Three$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Three' from JSON`,
  );
}

/** @internal */
export const FieldsType$inboundSchema: z.ZodNativeEnum<typeof FieldsType> = z
  .nativeEnum(FieldsType);

/** @internal */
export const FieldsType$outboundSchema: z.ZodNativeEnum<typeof FieldsType> =
  FieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldsType$ {
  /** @deprecated use `FieldsType$inboundSchema` instead. */
  export const inboundSchema = FieldsType$inboundSchema;
  /** @deprecated use `FieldsType$outboundSchema` instead. */
  export const outboundSchema = FieldsType$outboundSchema;
}

/** @internal */
export const Two$inboundSchema: z.ZodType<Two, z.ZodTypeDef, unknown> = z
  .object({
    type: FieldsType$inboundSchema,
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type Two$Outbound = {
  type: string;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const Two$outboundSchema: z.ZodType<Two$Outbound, z.ZodTypeDef, Two> = z
  .object({
    type: FieldsType$outboundSchema,
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Two$ {
  /** @deprecated use `Two$inboundSchema` instead. */
  export const inboundSchema = Two$inboundSchema;
  /** @deprecated use `Two$outboundSchema` instead. */
  export const outboundSchema = Two$outboundSchema;
  /** @deprecated use `Two$Outbound` instead. */
  export type Outbound = Two$Outbound;
}

export function twoToJSON(two: Two): string {
  return JSON.stringify(Two$outboundSchema.parse(two));
}

export function twoFromJSON(
  jsonString: string,
): SafeParseResult<Two, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Two$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Two' from JSON`,
  );
}

/** @internal */
export const Type$inboundSchema: z.ZodNativeEnum<typeof Type> = z.nativeEnum(
  Type,
);

/** @internal */
export const Type$outboundSchema: z.ZodNativeEnum<typeof Type> =
  Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Type$ {
  /** @deprecated use `Type$inboundSchema` instead. */
  export const inboundSchema = Type$inboundSchema;
  /** @deprecated use `Type$outboundSchema` instead. */
  export const outboundSchema = Type$outboundSchema;
}

/** @internal */
export const One$inboundSchema: z.ZodType<One, z.ZodTypeDef, unknown> = z
  .object({
    type: Type$inboundSchema,
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/** @internal */
export type One$Outbound = {
  type: string;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const One$outboundSchema: z.ZodType<One$Outbound, z.ZodTypeDef, One> = z
  .object({
    type: Type$outboundSchema,
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace One$ {
  /** @deprecated use `One$inboundSchema` instead. */
  export const inboundSchema = One$inboundSchema;
  /** @deprecated use `One$outboundSchema` instead. */
  export const outboundSchema = One$outboundSchema;
  /** @deprecated use `One$Outbound` instead. */
  export type Outbound = One$Outbound;
}

export function oneToJSON(one: One): string {
  return JSON.stringify(One$outboundSchema.parse(one));
}

export function oneFromJSON(
  jsonString: string,
): SafeParseResult<One, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => One$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'One' from JSON`,
  );
}

/** @internal */
export const Fields$inboundSchema: z.ZodType<Fields, z.ZodTypeDef, unknown> = z
  .union([
    z.lazy(() => One$inboundSchema),
    z.lazy(() => Two$inboundSchema),
    z.lazy(() => Three$inboundSchema),
    z.lazy(() => Four$inboundSchema),
    z.lazy(() => Five$inboundSchema),
    z.lazy(() => Six$inboundSchema),
    z.lazy(() => Seven$inboundSchema),
    z.lazy(() => Eight$inboundSchema),
    z.lazy(() => Nine$inboundSchema),
    z.lazy(() => Ten$inboundSchema),
    z.lazy(() => Eleven$inboundSchema),
  ]);

/** @internal */
export type Fields$Outbound =
  | One$Outbound
  | Two$Outbound
  | Three$Outbound
  | Four$Outbound
  | Five$Outbound
  | Six$Outbound
  | Seven$Outbound
  | Eight$Outbound
  | Nine$Outbound
  | Ten$Outbound
  | Eleven$Outbound;

/** @internal */
export const Fields$outboundSchema: z.ZodType<
  Fields$Outbound,
  z.ZodTypeDef,
  Fields
> = z.union([
  z.lazy(() => One$outboundSchema),
  z.lazy(() => Two$outboundSchema),
  z.lazy(() => Three$outboundSchema),
  z.lazy(() => Four$outboundSchema),
  z.lazy(() => Five$outboundSchema),
  z.lazy(() => Six$outboundSchema),
  z.lazy(() => Seven$outboundSchema),
  z.lazy(() => Eight$outboundSchema),
  z.lazy(() => Nine$outboundSchema),
  z.lazy(() => Ten$outboundSchema),
  z.lazy(() => Eleven$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fields$ {
  /** @deprecated use `Fields$inboundSchema` instead. */
  export const inboundSchema = Fields$inboundSchema;
  /** @deprecated use `Fields$outboundSchema` instead. */
  export const outboundSchema = Fields$outboundSchema;
  /** @deprecated use `Fields$Outbound` instead. */
  export type Outbound = Fields$Outbound;
}

export function fieldsToJSON(fields: Fields): string {
  return JSON.stringify(Fields$outboundSchema.parse(fields));
}

export function fieldsFromJSON(
  jsonString: string,
): SafeParseResult<Fields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Fields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Fields' from JSON`,
  );
}

/** @internal */
export const Recipients$inboundSchema: z.ZodType<
  Recipients,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  name: z.string(),
  role: Role$inboundSchema,
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(AccessAuth$inboundSchema).optional(),
  actionAuth: z.nullable(ActionAuth$inboundSchema).optional(),
  fields: z.array(
    z.union([
      z.lazy(() => One$inboundSchema),
      z.lazy(() => Two$inboundSchema),
      z.lazy(() => Three$inboundSchema),
      z.lazy(() => Four$inboundSchema),
      z.lazy(() => Five$inboundSchema),
      z.lazy(() => Six$inboundSchema),
      z.lazy(() => Seven$inboundSchema),
      z.lazy(() => Eight$inboundSchema),
      z.lazy(() => Nine$inboundSchema),
      z.lazy(() => Ten$inboundSchema),
      z.lazy(() => Eleven$inboundSchema),
    ]),
  ).optional(),
});

/** @internal */
export type Recipients$Outbound = {
  email: string;
  name: string;
  role: string;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
  fields?:
    | Array<
      | One$Outbound
      | Two$Outbound
      | Three$Outbound
      | Four$Outbound
      | Five$Outbound
      | Six$Outbound
      | Seven$Outbound
      | Eight$Outbound
      | Nine$Outbound
      | Ten$Outbound
      | Eleven$Outbound
    >
    | undefined;
};

/** @internal */
export const Recipients$outboundSchema: z.ZodType<
  Recipients$Outbound,
  z.ZodTypeDef,
  Recipients
> = z.object({
  email: z.string(),
  name: z.string(),
  role: Role$outboundSchema,
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(AccessAuth$outboundSchema).optional(),
  actionAuth: z.nullable(ActionAuth$outboundSchema).optional(),
  fields: z.array(
    z.union([
      z.lazy(() => One$outboundSchema),
      z.lazy(() => Two$outboundSchema),
      z.lazy(() => Three$outboundSchema),
      z.lazy(() => Four$outboundSchema),
      z.lazy(() => Five$outboundSchema),
      z.lazy(() => Six$outboundSchema),
      z.lazy(() => Seven$outboundSchema),
      z.lazy(() => Eight$outboundSchema),
      z.lazy(() => Nine$outboundSchema),
      z.lazy(() => Ten$outboundSchema),
      z.lazy(() => Eleven$outboundSchema),
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Recipients$ {
  /** @deprecated use `Recipients$inboundSchema` instead. */
  export const inboundSchema = Recipients$inboundSchema;
  /** @deprecated use `Recipients$outboundSchema` instead. */
  export const outboundSchema = Recipients$outboundSchema;
  /** @deprecated use `Recipients$Outbound` instead. */
  export type Outbound = Recipients$Outbound;
}

export function recipientsToJSON(recipients: Recipients): string {
  return JSON.stringify(Recipients$outboundSchema.parse(recipients));
}

export function recipientsFromJSON(
  jsonString: string,
): SafeParseResult<Recipients, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Recipients$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Recipients' from JSON`,
  );
}

/** @internal */
export const DateFormat$inboundSchema: z.ZodNativeEnum<typeof DateFormat> = z
  .nativeEnum(DateFormat);

/** @internal */
export const DateFormat$outboundSchema: z.ZodNativeEnum<typeof DateFormat> =
  DateFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DateFormat$ {
  /** @deprecated use `DateFormat$inboundSchema` instead. */
  export const inboundSchema = DateFormat$inboundSchema;
  /** @deprecated use `DateFormat$outboundSchema` instead. */
  export const outboundSchema = DateFormat$outboundSchema;
}

/** @internal */
export const DistributionMethod$inboundSchema: z.ZodNativeEnum<
  typeof DistributionMethod
> = z.nativeEnum(DistributionMethod);

/** @internal */
export const DistributionMethod$outboundSchema: z.ZodNativeEnum<
  typeof DistributionMethod
> = DistributionMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DistributionMethod$ {
  /** @deprecated use `DistributionMethod$inboundSchema` instead. */
  export const inboundSchema = DistributionMethod$inboundSchema;
  /** @deprecated use `DistributionMethod$outboundSchema` instead. */
  export const outboundSchema = DistributionMethod$outboundSchema;
}

/** @internal */
export const SigningOrder$inboundSchema: z.ZodNativeEnum<typeof SigningOrder> =
  z.nativeEnum(SigningOrder);

/** @internal */
export const SigningOrder$outboundSchema: z.ZodNativeEnum<typeof SigningOrder> =
  SigningOrder$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SigningOrder$ {
  /** @deprecated use `SigningOrder$inboundSchema` instead. */
  export const inboundSchema = SigningOrder$inboundSchema;
  /** @deprecated use `SigningOrder$outboundSchema` instead. */
  export const outboundSchema = SigningOrder$outboundSchema;
}

/** @internal */
export const Language$inboundSchema: z.ZodNativeEnum<typeof Language> = z
  .nativeEnum(Language);

/** @internal */
export const Language$outboundSchema: z.ZodNativeEnum<typeof Language> =
  Language$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Language$ {
  /** @deprecated use `Language$inboundSchema` instead. */
  export const inboundSchema = Language$inboundSchema;
  /** @deprecated use `Language$outboundSchema` instead. */
  export const outboundSchema = Language$outboundSchema;
}

/** @internal */
export const EmailSettings$inboundSchema: z.ZodType<
  EmailSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipientSigningRequest: z.boolean().default(true),
  recipientRemoved: z.boolean().default(true),
  recipientSigned: z.boolean().default(true),
  documentPending: z.boolean().default(true),
  documentCompleted: z.boolean().default(true),
  documentDeleted: z.boolean().default(true),
  ownerDocumentCompleted: z.boolean().default(true),
});

/** @internal */
export type EmailSettings$Outbound = {
  recipientSigningRequest: boolean;
  recipientRemoved: boolean;
  recipientSigned: boolean;
  documentPending: boolean;
  documentCompleted: boolean;
  documentDeleted: boolean;
  ownerDocumentCompleted: boolean;
};

/** @internal */
export const EmailSettings$outboundSchema: z.ZodType<
  EmailSettings$Outbound,
  z.ZodTypeDef,
  EmailSettings
> = z.object({
  recipientSigningRequest: z.boolean().default(true),
  recipientRemoved: z.boolean().default(true),
  recipientSigned: z.boolean().default(true),
  documentPending: z.boolean().default(true),
  documentCompleted: z.boolean().default(true),
  documentDeleted: z.boolean().default(true),
  ownerDocumentCompleted: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmailSettings$ {
  /** @deprecated use `EmailSettings$inboundSchema` instead. */
  export const inboundSchema = EmailSettings$inboundSchema;
  /** @deprecated use `EmailSettings$outboundSchema` instead. */
  export const outboundSchema = EmailSettings$outboundSchema;
  /** @deprecated use `EmailSettings$Outbound` instead. */
  export type Outbound = EmailSettings$Outbound;
}

export function emailSettingsToJSON(emailSettings: EmailSettings): string {
  return JSON.stringify(EmailSettings$outboundSchema.parse(emailSettings));
}

export function emailSettingsFromJSON(
  jsonString: string,
): SafeParseResult<EmailSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EmailSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EmailSettings' from JSON`,
  );
}

/** @internal */
export const Meta$inboundSchema: z.ZodType<Meta, z.ZodTypeDef, unknown> = z
  .object({
    subject: z.string().optional(),
    message: z.string().optional(),
    timezone: z.string().optional(),
    dateFormat: DateFormat$inboundSchema.optional(),
    distributionMethod: DistributionMethod$inboundSchema.optional(),
    signingOrder: SigningOrder$inboundSchema.optional(),
    redirectUrl: z.string().optional(),
    language: Language$inboundSchema.optional(),
    typedSignatureEnabled: z.boolean().optional(),
    emailSettings: z.lazy(() => EmailSettings$inboundSchema).optional(),
  });

/** @internal */
export type Meta$Outbound = {
  subject?: string | undefined;
  message?: string | undefined;
  timezone?: string | undefined;
  dateFormat?: string | undefined;
  distributionMethod?: string | undefined;
  signingOrder?: string | undefined;
  redirectUrl?: string | undefined;
  language?: string | undefined;
  typedSignatureEnabled?: boolean | undefined;
  emailSettings?: EmailSettings$Outbound | undefined;
};

/** @internal */
export const Meta$outboundSchema: z.ZodType<Meta$Outbound, z.ZodTypeDef, Meta> =
  z.object({
    subject: z.string().optional(),
    message: z.string().optional(),
    timezone: z.string().optional(),
    dateFormat: DateFormat$outboundSchema.optional(),
    distributionMethod: DistributionMethod$outboundSchema.optional(),
    signingOrder: SigningOrder$outboundSchema.optional(),
    redirectUrl: z.string().optional(),
    language: Language$outboundSchema.optional(),
    typedSignatureEnabled: z.boolean().optional(),
    emailSettings: z.lazy(() => EmailSettings$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Meta$ {
  /** @deprecated use `Meta$inboundSchema` instead. */
  export const inboundSchema = Meta$inboundSchema;
  /** @deprecated use `Meta$outboundSchema` instead. */
  export const outboundSchema = Meta$outboundSchema;
  /** @deprecated use `Meta$Outbound` instead. */
  export type Outbound = Meta$Outbound;
}

export function metaToJSON(meta: Meta): string {
  return JSON.stringify(Meta$outboundSchema.parse(meta));
}

export function metaFromJSON(
  jsonString: string,
): SafeParseResult<Meta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Meta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Meta' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryRequestBody$inboundSchema:
  z.ZodType<DocumentCreateDocumentTemporaryRequestBody, z.ZodTypeDef, unknown> =
    z.object({
      title: z.string(),
      externalId: z.string().optional(),
      visibility: Visibility$inboundSchema.optional(),
      globalAccessAuth: GlobalAccessAuth$inboundSchema.optional(),
      globalActionAuth: GlobalActionAuth$inboundSchema.optional(),
      formValues: z.record(z.union([z.string(), z.boolean(), z.number()]))
        .optional(),
      recipients: z.array(z.lazy(() => Recipients$inboundSchema)).optional(),
      meta: z.lazy(() => Meta$inboundSchema).optional(),
    });

/** @internal */
export type DocumentCreateDocumentTemporaryRequestBody$Outbound = {
  title: string;
  externalId?: string | undefined;
  visibility?: string | undefined;
  globalAccessAuth?: string | undefined;
  globalActionAuth?: string | undefined;
  formValues?: { [k: string]: string | boolean | number } | undefined;
  recipients?: Array<Recipients$Outbound> | undefined;
  meta?: Meta$Outbound | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryRequestBody$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryRequestBody$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryRequestBody
  > = z.object({
    title: z.string(),
    externalId: z.string().optional(),
    visibility: Visibility$outboundSchema.optional(),
    globalAccessAuth: GlobalAccessAuth$outboundSchema.optional(),
    globalActionAuth: GlobalActionAuth$outboundSchema.optional(),
    formValues: z.record(z.union([z.string(), z.boolean(), z.number()]))
      .optional(),
    recipients: z.array(z.lazy(() => Recipients$outboundSchema)).optional(),
    meta: z.lazy(() => Meta$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryRequestBody$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryRequestBody$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryRequestBody$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryRequestBody$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryRequestBody$Outbound;
}

export function documentCreateDocumentTemporaryRequestBodyToJSON(
  documentCreateDocumentTemporaryRequestBody:
    DocumentCreateDocumentTemporaryRequestBody,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryRequestBody$outboundSchema.parse(
      documentCreateDocumentTemporaryRequestBody,
    ),
  );
}

export function documentCreateDocumentTemporaryRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryRequestBody' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryVisibility$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryVisibility> = z
    .nativeEnum(DocumentCreateDocumentTemporaryVisibility);

/** @internal */
export const DocumentCreateDocumentTemporaryVisibility$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryVisibility> =
    DocumentCreateDocumentTemporaryVisibility$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryVisibility$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryVisibility$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryVisibility$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryVisibility$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryVisibility$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryStatus> = z.nativeEnum(
    DocumentCreateDocumentTemporaryStatus,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryStatus> =
    DocumentCreateDocumentTemporaryStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryStatus$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryStatus$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryStatus$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporarySource$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySource> = z.nativeEnum(
    DocumentCreateDocumentTemporarySource,
  );

/** @internal */
export const DocumentCreateDocumentTemporarySource$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySource> =
    DocumentCreateDocumentTemporarySource$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporarySource$ {
  /** @deprecated use `DocumentCreateDocumentTemporarySource$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporarySource$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporarySource$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporarySource$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryGlobalAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryGlobalAccessAuth> = z
    .nativeEnum(DocumentCreateDocumentTemporaryGlobalAccessAuth);

/** @internal */
export const DocumentCreateDocumentTemporaryGlobalAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryGlobalAccessAuth> =
    DocumentCreateDocumentTemporaryGlobalAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryGlobalAccessAuth$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryGlobalAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryGlobalAccessAuth$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryGlobalAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryGlobalAccessAuth$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryGlobalActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryGlobalActionAuth> = z
    .nativeEnum(DocumentCreateDocumentTemporaryGlobalActionAuth);

/** @internal */
export const DocumentCreateDocumentTemporaryGlobalActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryGlobalActionAuth> =
    DocumentCreateDocumentTemporaryGlobalActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryGlobalActionAuth$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryGlobalActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryGlobalActionAuth$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryGlobalActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryGlobalActionAuth$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryAuthOptions$inboundSchema:
  z.ZodType<DocumentCreateDocumentTemporaryAuthOptions, z.ZodTypeDef, unknown> =
    z.object({
      globalAccessAuth: z.nullable(
        DocumentCreateDocumentTemporaryGlobalAccessAuth$inboundSchema,
      ),
      globalActionAuth: z.nullable(
        DocumentCreateDocumentTemporaryGlobalActionAuth$inboundSchema,
      ),
    });

/** @internal */
export type DocumentCreateDocumentTemporaryAuthOptions$Outbound = {
  globalAccessAuth: string | null;
  globalActionAuth: string | null;
};

/** @internal */
export const DocumentCreateDocumentTemporaryAuthOptions$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryAuthOptions$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryAuthOptions
  > = z.object({
    globalAccessAuth: z.nullable(
      DocumentCreateDocumentTemporaryGlobalAccessAuth$outboundSchema,
    ),
    globalActionAuth: z.nullable(
      DocumentCreateDocumentTemporaryGlobalActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryAuthOptions$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryAuthOptions$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryAuthOptions$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryAuthOptions$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryAuthOptions$Outbound;
}

export function documentCreateDocumentTemporaryAuthOptionsToJSON(
  documentCreateDocumentTemporaryAuthOptions:
    DocumentCreateDocumentTemporaryAuthOptions,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryAuthOptions$outboundSchema.parse(
      documentCreateDocumentTemporaryAuthOptions,
    ),
  );
}

export function documentCreateDocumentTemporaryAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryAuthOptions' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFormValues$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFormValues,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.boolean(), z.number()]);

/** @internal */
export type DocumentCreateDocumentTemporaryFormValues$Outbound =
  | string
  | boolean
  | number;

/** @internal */
export const DocumentCreateDocumentTemporaryFormValues$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFormValues$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFormValues
  > = z.union([z.string(), z.boolean(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFormValues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFormValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFormValues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFormValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFormValues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFormValues$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFormValues$Outbound;
}

export function documentCreateDocumentTemporaryFormValuesToJSON(
  documentCreateDocumentTemporaryFormValues:
    DocumentCreateDocumentTemporaryFormValues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFormValues$outboundSchema.parse(
      documentCreateDocumentTemporaryFormValues,
    ),
  );
}

export function documentCreateDocumentTemporaryFormValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFormValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFormValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFormValues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryType$inboundSchema: z.ZodNativeEnum<
  typeof DocumentCreateDocumentTemporaryType
> = z.nativeEnum(DocumentCreateDocumentTemporaryType);

/** @internal */
export const DocumentCreateDocumentTemporaryType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryType> =
    DocumentCreateDocumentTemporaryType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentData$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: DocumentCreateDocumentTemporaryType$inboundSchema,
    id: z.string(),
    data: z.string(),
    initialData: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryDocumentData$Outbound = {
  type: string;
  id: string;
  data: string;
  initialData: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentData$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentData$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryDocumentData
  > = z.object({
    type: DocumentCreateDocumentTemporaryType$outboundSchema,
    id: z.string(),
    data: z.string(),
    initialData: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDocumentData$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentData$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDocumentData$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentData$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDocumentData$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentData$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryDocumentData$Outbound;
}

export function documentCreateDocumentTemporaryDocumentDataToJSON(
  documentCreateDocumentTemporaryDocumentData:
    DocumentCreateDocumentTemporaryDocumentData,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryDocumentData$outboundSchema.parse(
      documentCreateDocumentTemporaryDocumentData,
    ),
  );
}

export function documentCreateDocumentTemporaryDocumentDataFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryDocumentData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryDocumentData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryDocumentData' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporarySigningOrder$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySigningOrder> = z
    .nativeEnum(DocumentCreateDocumentTemporarySigningOrder);

/** @internal */
export const DocumentCreateDocumentTemporarySigningOrder$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySigningOrder> =
    DocumentCreateDocumentTemporarySigningOrder$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporarySigningOrder$ {
  /** @deprecated use `DocumentCreateDocumentTemporarySigningOrder$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporarySigningOrder$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporarySigningOrder$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporarySigningOrder$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryDistributionMethod$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryDistributionMethod> = z
    .nativeEnum(DocumentCreateDocumentTemporaryDistributionMethod);

/** @internal */
export const DocumentCreateDocumentTemporaryDistributionMethod$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryDistributionMethod> =
    DocumentCreateDocumentTemporaryDistributionMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDistributionMethod$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDistributionMethod$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDistributionMethod$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDistributionMethod$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDistributionMethod$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryEmailSettings$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryEmailSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipientSigningRequest: z.boolean().default(true),
    recipientRemoved: z.boolean().default(true),
    recipientSigned: z.boolean().default(true),
    documentPending: z.boolean().default(true),
    documentCompleted: z.boolean().default(true),
    documentDeleted: z.boolean().default(true),
    ownerDocumentCompleted: z.boolean().default(true),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryEmailSettings$Outbound = {
  recipientSigningRequest: boolean;
  recipientRemoved: boolean;
  recipientSigned: boolean;
  documentPending: boolean;
  documentCompleted: boolean;
  documentDeleted: boolean;
  ownerDocumentCompleted: boolean;
};

/** @internal */
export const DocumentCreateDocumentTemporaryEmailSettings$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryEmailSettings$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryEmailSettings
  > = z.object({
    recipientSigningRequest: z.boolean().default(true),
    recipientRemoved: z.boolean().default(true),
    recipientSigned: z.boolean().default(true),
    documentPending: z.boolean().default(true),
    documentCompleted: z.boolean().default(true),
    documentDeleted: z.boolean().default(true),
    ownerDocumentCompleted: z.boolean().default(true),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryEmailSettings$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryEmailSettings$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryEmailSettings$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryEmailSettings$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryEmailSettings$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryEmailSettings$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryEmailSettings$Outbound;
}

export function documentCreateDocumentTemporaryEmailSettingsToJSON(
  documentCreateDocumentTemporaryEmailSettings:
    DocumentCreateDocumentTemporaryEmailSettings,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryEmailSettings$outboundSchema.parse(
      documentCreateDocumentTemporaryEmailSettings,
    ),
  );
}

export function documentCreateDocumentTemporaryEmailSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryEmailSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryEmailSettings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryEmailSettings' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentMeta$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    signingOrder: DocumentCreateDocumentTemporarySigningOrder$inboundSchema,
    distributionMethod:
      DocumentCreateDocumentTemporaryDistributionMethod$inboundSchema,
    id: z.string(),
    subject: z.nullable(z.string()),
    message: z.nullable(z.string()),
    timezone: z.nullable(z.string()),
    password: z.nullable(z.string()),
    dateFormat: z.nullable(z.string()),
    documentId: z.number().int(),
    redirectUrl: z.nullable(z.string()),
    typedSignatureEnabled: z.boolean(),
    language: z.string(),
    emailSettings: z.nullable(
      z.lazy(() => DocumentCreateDocumentTemporaryEmailSettings$inboundSchema),
    ),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryDocumentMeta$Outbound = {
  signingOrder: string;
  distributionMethod: string;
  id: string;
  subject: string | null;
  message: string | null;
  timezone: string | null;
  password: string | null;
  dateFormat: string | null;
  documentId: number;
  redirectUrl: string | null;
  typedSignatureEnabled: boolean;
  language: string;
  emailSettings: DocumentCreateDocumentTemporaryEmailSettings$Outbound | null;
};

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentMeta$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentMeta$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryDocumentMeta
  > = z.object({
    signingOrder: DocumentCreateDocumentTemporarySigningOrder$outboundSchema,
    distributionMethod:
      DocumentCreateDocumentTemporaryDistributionMethod$outboundSchema,
    id: z.string(),
    subject: z.nullable(z.string()),
    message: z.nullable(z.string()),
    timezone: z.nullable(z.string()),
    password: z.nullable(z.string()),
    dateFormat: z.nullable(z.string()),
    documentId: z.number().int(),
    redirectUrl: z.nullable(z.string()),
    typedSignatureEnabled: z.boolean(),
    language: z.string(),
    emailSettings: z.nullable(
      z.lazy(() => DocumentCreateDocumentTemporaryEmailSettings$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDocumentMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDocumentMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDocumentMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentMeta$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryDocumentMeta$Outbound;
}

export function documentCreateDocumentTemporaryDocumentMetaToJSON(
  documentCreateDocumentTemporaryDocumentMeta:
    DocumentCreateDocumentTemporaryDocumentMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryDocumentMeta$outboundSchema.parse(
      documentCreateDocumentTemporaryDocumentMeta,
    ),
  );
}

export function documentCreateDocumentTemporaryDocumentMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryDocumentMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryDocumentMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryDocumentMeta' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryRole$inboundSchema: z.ZodNativeEnum<
  typeof DocumentCreateDocumentTemporaryRole
> = z.nativeEnum(DocumentCreateDocumentTemporaryRole);

/** @internal */
export const DocumentCreateDocumentTemporaryRole$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryRole> =
    DocumentCreateDocumentTemporaryRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryRole$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryRole$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryRole$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryRole$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryRole$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryReadStatus> = z
    .nativeEnum(DocumentCreateDocumentTemporaryReadStatus);

/** @internal */
export const DocumentCreateDocumentTemporaryReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryReadStatus> =
    DocumentCreateDocumentTemporaryReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryReadStatus$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryReadStatus$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryReadStatus$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporarySigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySigningStatus> = z
    .nativeEnum(DocumentCreateDocumentTemporarySigningStatus);

/** @internal */
export const DocumentCreateDocumentTemporarySigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySigningStatus> =
    DocumentCreateDocumentTemporarySigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporarySigningStatus$ {
  /** @deprecated use `DocumentCreateDocumentTemporarySigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporarySigningStatus$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporarySigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporarySigningStatus$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporarySendStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySendStatus> = z
    .nativeEnum(DocumentCreateDocumentTemporarySendStatus);

/** @internal */
export const DocumentCreateDocumentTemporarySendStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporarySendStatus> =
    DocumentCreateDocumentTemporarySendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporarySendStatus$ {
  /** @deprecated use `DocumentCreateDocumentTemporarySendStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporarySendStatus$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporarySendStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporarySendStatus$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryAccessAuth> = z
    .nativeEnum(DocumentCreateDocumentTemporaryAccessAuth);

/** @internal */
export const DocumentCreateDocumentTemporaryAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryAccessAuth> =
    DocumentCreateDocumentTemporaryAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryAccessAuth$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryAccessAuth$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryAccessAuth$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryActionAuth> = z
    .nativeEnum(DocumentCreateDocumentTemporaryActionAuth);

/** @internal */
export const DocumentCreateDocumentTemporaryActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryActionAuth> =
    DocumentCreateDocumentTemporaryActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryActionAuth$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryActionAuth$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryActionAuth$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsAuthOptions$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      DocumentCreateDocumentTemporaryAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      DocumentCreateDocumentTemporaryActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryDocumentsAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsAuthOptions$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentsAuthOptions$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryDocumentsAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      DocumentCreateDocumentTemporaryAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      DocumentCreateDocumentTemporaryActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDocumentsAuthOptions$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDocumentsAuthOptions$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDocumentsAuthOptions$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsAuthOptions$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryDocumentsAuthOptions$Outbound;
}

export function documentCreateDocumentTemporaryDocumentsAuthOptionsToJSON(
  documentCreateDocumentTemporaryDocumentsAuthOptions:
    DocumentCreateDocumentTemporaryDocumentsAuthOptions,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryDocumentsAuthOptions$outboundSchema.parse(
      documentCreateDocumentTemporaryDocumentsAuthOptions,
    ),
  );
}

export function documentCreateDocumentTemporaryDocumentsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryDocumentsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryDocumentsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryDocumentsAuthOptions' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryRecipients$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryRecipients,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: DocumentCreateDocumentTemporaryRole$inboundSchema,
  readStatus: DocumentCreateDocumentTemporaryReadStatus$inboundSchema,
  signingStatus: DocumentCreateDocumentTemporarySigningStatus$inboundSchema,
  sendStatus: DocumentCreateDocumentTemporarySendStatus$inboundSchema,
  id: z.number().int(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() =>
      DocumentCreateDocumentTemporaryDocumentsAuthOptions$inboundSchema
    ),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
});

/** @internal */
export type DocumentCreateDocumentTemporaryRecipients$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions:
    | DocumentCreateDocumentTemporaryDocumentsAuthOptions$Outbound
    | null;
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const DocumentCreateDocumentTemporaryRecipients$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryRecipients$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryRecipients
  > = z.object({
    role: DocumentCreateDocumentTemporaryRole$outboundSchema,
    readStatus: DocumentCreateDocumentTemporaryReadStatus$outboundSchema,
    signingStatus: DocumentCreateDocumentTemporarySigningStatus$outboundSchema,
    sendStatus: DocumentCreateDocumentTemporarySendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() =>
        DocumentCreateDocumentTemporaryDocumentsAuthOptions$outboundSchema
      ),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryRecipients$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryRecipients$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryRecipients$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryRecipients$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryRecipients$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryRecipients$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryRecipients$Outbound;
}

export function documentCreateDocumentTemporaryRecipientsToJSON(
  documentCreateDocumentTemporaryRecipients:
    DocumentCreateDocumentTemporaryRecipients,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryRecipients$outboundSchema.parse(
      documentCreateDocumentTemporaryRecipients,
    ),
  );
}

export function documentCreateDocumentTemporaryRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryRecipients$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryRecipients' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryDocumentsType> = z
    .nativeEnum(DocumentCreateDocumentTemporaryDocumentsType);

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryDocumentsType> =
    DocumentCreateDocumentTemporaryDocumentsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDocumentsType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDocumentsType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDocumentsType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$Outbound;
}

export function documentCreateDocumentTemporaryFieldMetaDocumentsResponseValuesToJSON(
  documentCreateDocumentTemporaryFieldMetaDocumentsResponseValues:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$outboundSchema
      .parse(documentCreateDocumentTemporaryFieldMetaDocumentsResponseValues),
  );
}

export function documentCreateDocumentTemporaryFieldMetaDocumentsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta9$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta9$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta9$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta9
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFields9Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta9$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta9$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta9$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta9$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta9$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta9ToJSON(
  documentCreateDocumentTemporaryFieldMeta9:
    DocumentCreateDocumentTemporaryFieldMeta9,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta9$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta9,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta9' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$Outbound;
}

export function documentCreateDocumentTemporaryFieldMetaDocumentsValuesToJSON(
  documentCreateDocumentTemporaryFieldMetaDocumentsValues:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$outboundSchema
      .parse(documentCreateDocumentTemporaryFieldMetaDocumentsValues),
  );
}

export function documentCreateDocumentTemporaryFieldMetaDocumentsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMetaDocumentsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMetaDocumentsValues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta8$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$inboundSchema,
  values: z.array(
    z.lazy(() =>
      DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$inboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$Outbound>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta8$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta8$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta8
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentFieldsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentCreateDocumentTemporaryFieldMetaDocumentsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta8$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta8$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta8$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta8$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta8$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta8ToJSON(
  documentCreateDocumentTemporaryFieldMeta8:
    DocumentCreateDocumentTemporaryFieldMeta8,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta8$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta8,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta8' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaValues$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaValues$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMetaValues$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaValues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaValues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaValues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaValues$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryFieldMetaValues$Outbound;
}

export function documentCreateDocumentTemporaryFieldMetaValuesToJSON(
  documentCreateDocumentTemporaryFieldMetaValues:
    DocumentCreateDocumentTemporaryFieldMetaValues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMetaValues$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMetaValues,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta7$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$inboundSchema,
  values: z.array(
    z.lazy(() => DocumentCreateDocumentTemporaryFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<DocumentCreateDocumentTemporaryFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta7$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta7$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta7
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyDocumentType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentCreateDocumentTemporaryFieldMetaValues$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta7$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta7$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta7$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta7$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta7$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta7ToJSON(
  documentCreateDocumentTemporaryFieldMeta7:
    DocumentCreateDocumentTemporaryFieldMeta7,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta7$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta7,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta7' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta6$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta6$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta6$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta6
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta6$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta6$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta6$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta6$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta6$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta6ToJSON(
  documentCreateDocumentTemporaryFieldMeta6:
    DocumentCreateDocumentTemporaryFieldMeta6,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta6$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta6,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta6' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta5$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta5$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta5$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta5
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta5$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta5$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta5$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta5$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta5$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta5ToJSON(
  documentCreateDocumentTemporaryFieldMeta5:
    DocumentCreateDocumentTemporaryFieldMeta5,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta5$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta5,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta5' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta4$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta4$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta4$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta4
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponse200Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta4$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta4$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta4$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta4$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta4$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta4ToJSON(
  documentCreateDocumentTemporaryFieldMeta4:
    DocumentCreateDocumentTemporaryFieldMeta4,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta4$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta4,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta4' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType
  > = z.nativeEnum(
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType,
  );

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType
  > =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta3$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta3$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta3$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta3
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentCreateDocumentTemporaryFieldMetaDocumentsResponseType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta3$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta3$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta3$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta3$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta3$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta3ToJSON(
  documentCreateDocumentTemporaryFieldMeta3:
    DocumentCreateDocumentTemporaryFieldMeta3,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta3$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta3,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta3' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsType
  > = z.nativeEnum(DocumentCreateDocumentTemporaryFieldMetaDocumentsType);

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaDocumentsType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentCreateDocumentTemporaryFieldMetaDocumentsType
  > = DocumentCreateDocumentTemporaryFieldMetaDocumentsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaDocumentsType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaDocumentsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaDocumentsType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta2$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: DocumentCreateDocumentTemporaryFieldMetaDocumentsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta2$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta2$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta2
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentCreateDocumentTemporaryFieldMetaDocumentsType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta2$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta2$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta2$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta2$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta2$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta2ToJSON(
  documentCreateDocumentTemporaryFieldMeta2:
    DocumentCreateDocumentTemporaryFieldMeta2,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta2$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta2,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta2' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryFieldMetaType> = z
    .nativeEnum(DocumentCreateDocumentTemporaryFieldMetaType);

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentCreateDocumentTemporaryFieldMetaType> =
    DocumentCreateDocumentTemporaryFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMetaType$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaType$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMetaType$outboundSchema;
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta1$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: DocumentCreateDocumentTemporaryFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta1$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryFieldMeta1$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryFieldMeta1
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentCreateDocumentTemporaryFieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta1$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta1$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta1$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta1$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta1$Outbound;
}

export function documentCreateDocumentTemporaryFieldMeta1ToJSON(
  documentCreateDocumentTemporaryFieldMeta1:
    DocumentCreateDocumentTemporaryFieldMeta1,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta1$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta1,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta1' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta1$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta2$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta3$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta4$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta7$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta9$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta5$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta8$inboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta6$inboundSchema),
]);

/** @internal */
export type DocumentCreateDocumentTemporaryFieldMeta$Outbound =
  | DocumentCreateDocumentTemporaryFieldMeta1$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta2$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta3$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta4$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta7$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta9$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta5$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta8$Outbound
  | DocumentCreateDocumentTemporaryFieldMeta6$Outbound;

/** @internal */
export const DocumentCreateDocumentTemporaryFieldMeta$outboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFieldMeta$Outbound,
  z.ZodTypeDef,
  DocumentCreateDocumentTemporaryFieldMeta
> = z.union([
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta1$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta2$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta3$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta4$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta7$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta9$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta5$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta8$outboundSchema),
  z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFieldMeta$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFieldMeta$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFieldMeta$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFieldMeta$Outbound;
}

export function documentCreateDocumentTemporaryFieldMetaToJSON(
  documentCreateDocumentTemporaryFieldMeta:
    DocumentCreateDocumentTemporaryFieldMeta,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFieldMeta$outboundSchema.parse(
      documentCreateDocumentTemporaryFieldMeta,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryFieldMeta' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryFields$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: DocumentCreateDocumentTemporaryDocumentsType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta1$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta2$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta3$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta4$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta7$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta9$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta5$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta8$inboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type DocumentCreateDocumentTemporaryFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | DocumentCreateDocumentTemporaryFieldMeta1$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta2$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta3$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta4$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta7$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta9$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta5$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta8$Outbound
    | DocumentCreateDocumentTemporaryFieldMeta6$Outbound
    | null;
};

/** @internal */
export const DocumentCreateDocumentTemporaryFields$outboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryFields$Outbound,
  z.ZodTypeDef,
  DocumentCreateDocumentTemporaryFields
> = z.object({
  type: DocumentCreateDocumentTemporaryDocumentsType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta1$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta2$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta3$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta4$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta7$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta9$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta5$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta8$outboundSchema),
      z.lazy(() => DocumentCreateDocumentTemporaryFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryFields$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryFields$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryFields$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFields$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryFields$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryFields$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryFields$Outbound;
}

export function documentCreateDocumentTemporaryFieldsToJSON(
  documentCreateDocumentTemporaryFields: DocumentCreateDocumentTemporaryFields,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryFields$outboundSchema.parse(
      documentCreateDocumentTemporaryFields,
    ),
  );
}

export function documentCreateDocumentTemporaryFieldsFromJSON(
  jsonString: string,
): SafeParseResult<DocumentCreateDocumentTemporaryFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryFields' from JSON`,
  );
}

/** @internal */
export const Document$inboundSchema: z.ZodType<
  Document,
  z.ZodTypeDef,
  unknown
> = z.object({
  visibility: DocumentCreateDocumentTemporaryVisibility$inboundSchema,
  status: DocumentCreateDocumentTemporaryStatus$inboundSchema,
  source: DocumentCreateDocumentTemporarySource$inboundSchema,
  id: z.number().int(),
  externalId: z.nullable(z.string()),
  userId: z.number(),
  authOptions: z.nullable(
    z.lazy(() => DocumentCreateDocumentTemporaryAuthOptions$inboundSchema),
  ),
  formValues: z.nullable(
    z.record(z.union([z.string(), z.boolean(), z.number()])),
  ),
  title: z.string(),
  documentDataId: z.string(),
  createdAt: z.string(),
  updatedAt: z.string(),
  completedAt: z.nullable(z.string()),
  deletedAt: z.nullable(z.string()),
  teamId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  documentData: z.lazy(() =>
    DocumentCreateDocumentTemporaryDocumentData$inboundSchema
  ),
  documentMeta: z.nullable(
    z.lazy(() => DocumentCreateDocumentTemporaryDocumentMeta$inboundSchema),
  ),
  recipients: z.array(
    z.lazy(() => DocumentCreateDocumentTemporaryRecipients$inboundSchema),
  ),
  fields: z.array(
    z.lazy(() => DocumentCreateDocumentTemporaryFields$inboundSchema),
  ),
});

/** @internal */
export type Document$Outbound = {
  visibility: string;
  status: string;
  source: string;
  id: number;
  externalId: string | null;
  userId: number;
  authOptions: DocumentCreateDocumentTemporaryAuthOptions$Outbound | null;
  formValues: { [k: string]: string | boolean | number } | null;
  title: string;
  documentDataId: string;
  createdAt: string;
  updatedAt: string;
  completedAt: string | null;
  deletedAt: string | null;
  teamId: number | null;
  templateId: number | null;
  documentData: DocumentCreateDocumentTemporaryDocumentData$Outbound;
  documentMeta: DocumentCreateDocumentTemporaryDocumentMeta$Outbound | null;
  recipients: Array<DocumentCreateDocumentTemporaryRecipients$Outbound>;
  fields: Array<DocumentCreateDocumentTemporaryFields$Outbound>;
};

/** @internal */
export const Document$outboundSchema: z.ZodType<
  Document$Outbound,
  z.ZodTypeDef,
  Document
> = z.object({
  visibility: DocumentCreateDocumentTemporaryVisibility$outboundSchema,
  status: DocumentCreateDocumentTemporaryStatus$outboundSchema,
  source: DocumentCreateDocumentTemporarySource$outboundSchema,
  id: z.number().int(),
  externalId: z.nullable(z.string()),
  userId: z.number(),
  authOptions: z.nullable(
    z.lazy(() => DocumentCreateDocumentTemporaryAuthOptions$outboundSchema),
  ),
  formValues: z.nullable(
    z.record(z.union([z.string(), z.boolean(), z.number()])),
  ),
  title: z.string(),
  documentDataId: z.string(),
  createdAt: z.string(),
  updatedAt: z.string(),
  completedAt: z.nullable(z.string()),
  deletedAt: z.nullable(z.string()),
  teamId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  documentData: z.lazy(() =>
    DocumentCreateDocumentTemporaryDocumentData$outboundSchema
  ),
  documentMeta: z.nullable(
    z.lazy(() => DocumentCreateDocumentTemporaryDocumentMeta$outboundSchema),
  ),
  recipients: z.array(
    z.lazy(() => DocumentCreateDocumentTemporaryRecipients$outboundSchema),
  ),
  fields: z.array(
    z.lazy(() => DocumentCreateDocumentTemporaryFields$outboundSchema),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Document$ {
  /** @deprecated use `Document$inboundSchema` instead. */
  export const inboundSchema = Document$inboundSchema;
  /** @deprecated use `Document$outboundSchema` instead. */
  export const outboundSchema = Document$outboundSchema;
  /** @deprecated use `Document$Outbound` instead. */
  export type Outbound = Document$Outbound;
}

export function documentToJSON(document: Document): string {
  return JSON.stringify(Document$outboundSchema.parse(document));
}

export function documentFromJSON(
  jsonString: string,
): SafeParseResult<Document, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Document$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Document' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryResponseBody$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    document: z.lazy(() => Document$inboundSchema),
    uploadUrl: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryResponseBody$Outbound = {
  document: Document$Outbound;
  uploadUrl: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryResponseBody$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryResponseBody$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryResponseBody
  > = z.object({
    document: z.lazy(() => Document$outboundSchema),
    uploadUrl: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryResponseBody$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryResponseBody$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryResponseBody$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryResponseBody$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryResponseBody$Outbound;
}

export function documentCreateDocumentTemporaryResponseBodyToJSON(
  documentCreateDocumentTemporaryResponseBody:
    DocumentCreateDocumentTemporaryResponseBody,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryResponseBody$outboundSchema.parse(
      documentCreateDocumentTemporaryResponseBody,
    ),
  );
}

export function documentCreateDocumentTemporaryResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryResponseBody' from JSON`,
  );
}
