/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateTemplateRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateTemplateRecipientRole = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientRole
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientAccessAuth = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientActionAuth = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientActionAuth
>;

export type RecipientUpdateTemplateRecipientRecipient = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateTemplateRecipientRole | undefined;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: RecipientUpdateTemplateRecipientAccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: RecipientUpdateTemplateRecipientActionAuth | null | undefined;
};

export type RecipientUpdateTemplateRecipientRequestBody = {
  templateId: number;
  recipient: RecipientUpdateTemplateRecipientRecipient;
};

export const RecipientUpdateTemplateRecipientTemplatesRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateTemplateRecipientTemplatesRecipientsRole =
  ClosedEnum<typeof RecipientUpdateTemplateRecipientTemplatesRecipientsRole>;

export const RecipientUpdateTemplateRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateTemplateRecipientReadStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientReadStatus
>;

export const RecipientUpdateTemplateRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateTemplateRecipientSigningStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientSigningStatus
>;

export const RecipientUpdateTemplateRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateTemplateRecipientSendStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth
  >;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth
  >;

export type RecipientUpdateTemplateRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth:
    | RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth
    | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth:
    | RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth
    | null;
};

export const RecipientUpdateTemplateRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateTemplateRecipientType = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientType
>;

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues =
  {
    value: string;
  };

export type RecipientUpdateTemplateRecipientFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type;
  values?:
    | Array<
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues
    >
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  >;

export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues =
  {
    id: number;
    checked: boolean;
    value: string;
  };

export type RecipientUpdateTemplateRecipientFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type;
  values?:
    | Array<RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Radio: "radio",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type RecipientUpdateTemplateRecipientFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateTemplateRecipientFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType;
  values?: Array<RecipientUpdateTemplateRecipientFieldMetaValues> | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientUpdateTemplateRecipientFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  >;

export type RecipientUpdateTemplateRecipientFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type =
  {
    Date: "date",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type
  >;

export type RecipientUpdateTemplateRecipientFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType =
  {
    Email: "email",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType
  >;

export type RecipientUpdateTemplateRecipientFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType =
  {
    Name: "name",
  } as const;
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType
  >;

export type RecipientUpdateTemplateRecipientFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientUpdateTemplateRecipientFieldMetaType = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientFieldMetaType
>;

export type RecipientUpdateTemplateRecipientFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientUpdateTemplateRecipientFieldMeta =
  | RecipientUpdateTemplateRecipientFieldMeta1
  | RecipientUpdateTemplateRecipientFieldMeta2
  | RecipientUpdateTemplateRecipientFieldMeta3
  | RecipientUpdateTemplateRecipientFieldMeta4
  | RecipientUpdateTemplateRecipientFieldMeta7
  | RecipientUpdateTemplateRecipientFieldMeta9
  | RecipientUpdateTemplateRecipientFieldMeta5
  | RecipientUpdateTemplateRecipientFieldMeta8
  | RecipientUpdateTemplateRecipientFieldMeta6;

export type RecipientUpdateTemplateRecipientFields = {
  type: RecipientUpdateTemplateRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientFieldMeta1
    | RecipientUpdateTemplateRecipientFieldMeta2
    | RecipientUpdateTemplateRecipientFieldMeta3
    | RecipientUpdateTemplateRecipientFieldMeta4
    | RecipientUpdateTemplateRecipientFieldMeta7
    | RecipientUpdateTemplateRecipientFieldMeta9
    | RecipientUpdateTemplateRecipientFieldMeta5
    | RecipientUpdateTemplateRecipientFieldMeta8
    | RecipientUpdateTemplateRecipientFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type RecipientUpdateTemplateRecipientResponseBody = {
  role: RecipientUpdateTemplateRecipientTemplatesRecipientsRole;
  readStatus: RecipientUpdateTemplateRecipientReadStatus;
  signingStatus: RecipientUpdateTemplateRecipientSigningStatus;
  sendStatus: RecipientUpdateTemplateRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientFields>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientRole$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientRole> = z.nativeEnum(
    RecipientUpdateTemplateRecipientRole,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientRole$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientRole> =
    RecipientUpdateTemplateRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRole$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRole$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientAccessAuth> = z
    .nativeEnum(RecipientUpdateTemplateRecipientAccessAuth);

/** @internal */
export const RecipientUpdateTemplateRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientAccessAuth> =
    RecipientUpdateTemplateRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientAccessAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientActionAuth> = z
    .nativeEnum(RecipientUpdateTemplateRecipientActionAuth);

/** @internal */
export const RecipientUpdateTemplateRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientActionAuth> =
    RecipientUpdateTemplateRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientActionAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientRecipient$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientRecipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  email: z.string().optional(),
  name: z.string().optional(),
  role: RecipientUpdateTemplateRecipientRole$inboundSchema.optional(),
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(
    RecipientUpdateTemplateRecipientAccessAuth$inboundSchema,
  ).optional(),
  actionAuth: z.nullable(
    RecipientUpdateTemplateRecipientActionAuth$inboundSchema,
  ).optional(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientRecipient$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientRecipient$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientRecipient$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientRecipient
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateTemplateRecipientRole$outboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientAccessAuth$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientActionAuth$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRecipient$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRecipient$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRecipient$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRecipient$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRecipient$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRecipient$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientRecipient$Outbound;
}

export function recipientUpdateTemplateRecipientRecipientToJSON(
  recipientUpdateTemplateRecipientRecipient:
    RecipientUpdateTemplateRecipientRecipient,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientRecipient$outboundSchema.parse(
      recipientUpdateTemplateRecipientRecipient,
    ),
  );
}

export function recipientUpdateTemplateRecipientRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientRecipient' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientRequestBody$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    templateId: z.number(),
    recipient: z.lazy(() =>
      RecipientUpdateTemplateRecipientRecipient$inboundSchema
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientRequestBody$Outbound = {
  templateId: number;
  recipient: RecipientUpdateTemplateRecipientRecipient$Outbound;
};

/** @internal */
export const RecipientUpdateTemplateRecipientRequestBody$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientRequestBody
  > = z.object({
    templateId: z.number(),
    recipient: z.lazy(() =>
      RecipientUpdateTemplateRecipientRecipient$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRequestBody$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRequestBody$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRequestBody$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRequestBody$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientRequestBody$Outbound;
}

export function recipientUpdateTemplateRecipientRequestBodyToJSON(
  recipientUpdateTemplateRecipientRequestBody:
    RecipientUpdateTemplateRecipientRequestBody,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientRequestBody$outboundSchema.parse(
      recipientUpdateTemplateRecipientRequestBody,
    ),
  );
}

export function recipientUpdateTemplateRecipientRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsRole
  > = z.nativeEnum(RecipientUpdateTemplateRecipientTemplatesRecipientsRole);

/** @internal */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsRole
  > = RecipientUpdateTemplateRecipientTemplatesRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTemplatesRecipientsRole$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTemplatesRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTemplatesRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTemplatesRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTemplatesRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientReadStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientReadStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientReadStatus> =
    RecipientUpdateTemplateRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientReadStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSigningStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientSigningStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSigningStatus> =
    RecipientUpdateTemplateRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientSigningStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSendStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientSendStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSendStatus> =
    RecipientUpdateTemplateRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientSendStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth
  > =
    RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth
  > =
    RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientUpdateTemplateRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientTemplatesRecipientsAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientTemplatesRecipientsActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientAuthOptions$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientAuthOptions$Outbound;
}

export function recipientUpdateTemplateRecipientAuthOptionsToJSON(
  recipientUpdateTemplateRecipientAuthOptions:
    RecipientUpdateTemplateRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientAuthOptions$outboundSchema.parse(
      recipientUpdateTemplateRecipientAuthOptions,
    ),
  );
}

export function recipientUpdateTemplateRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientType> = z.nativeEnum(
    RecipientUpdateTemplateRecipientType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientType> =
    RecipientUpdateTemplateRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValuesToJSON(
  recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema
      .parse(
        recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
      ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta9$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta9, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
      values: z.array(
        z.lazy(() =>
          RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema
        ),
      ).optional(),
      defaultValue: z.string().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta9$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta9$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta9
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta9$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta9$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta9ToJSON(
  recipientUpdateTemplateRecipientFieldMeta9:
    RecipientUpdateTemplateRecipientFieldMeta9,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta9$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta9,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValuesToJSON(
  recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues:
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema
      .parse(
        recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues,
      ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta8$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta8, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema,
      values: z.array(
        z.lazy(() =>
          RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema
        ),
      ).optional(),
      validationRule: z.string().optional(),
      validationLength: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta8$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta8$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta8
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta8$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta8$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta8ToJSON(
  recipientUpdateTemplateRecipientFieldMeta8:
    RecipientUpdateTemplateRecipientFieldMeta8,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta8$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta8,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaValues$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaValues$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaValues$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaValues$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaValuesToJSON(
  recipientUpdateTemplateRecipientFieldMetaValues:
    RecipientUpdateTemplateRecipientFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaValues$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaValues,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta7$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta7, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
      values: z.array(
        z.lazy(() =>
          RecipientUpdateTemplateRecipientFieldMetaValues$inboundSchema
        ),
      ).optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientUpdateTemplateRecipientFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta7$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta7$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta7
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaValues$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta7$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta7$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta7ToJSON(
  recipientUpdateTemplateRecipientFieldMeta7:
    RecipientUpdateTemplateRecipientFieldMeta7,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta7$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta7,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta6$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta6, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
      numberFormat: z.string().optional(),
      value: z.string().optional(),
      minValue: z.number().optional(),
      maxValue: z.number().optional(),
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta6$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta6$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta6
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta6$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta6$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta6ToJSON(
  recipientUpdateTemplateRecipientFieldMeta6:
    RecipientUpdateTemplateRecipientFieldMeta6,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta6$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta6,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta5$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta5, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema,
      text: z.string().optional(),
      characterLimit: z.number().optional(),
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta5$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta5$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta5
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta5$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta5$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta5ToJSON(
  recipientUpdateTemplateRecipientFieldMeta5:
    RecipientUpdateTemplateRecipientFieldMeta5,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta5$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta5,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta4$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta4, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta4$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta4$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta4
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta4$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta4$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta4ToJSON(
  recipientUpdateTemplateRecipientFieldMeta4:
    RecipientUpdateTemplateRecipientFieldMeta4,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta4$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta4,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta3$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta3, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta3$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta3$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta3
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta3$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta3$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta3ToJSON(
  recipientUpdateTemplateRecipientFieldMeta3:
    RecipientUpdateTemplateRecipientFieldMeta3,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta3$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta3,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType
  > =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta2$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta2, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta2$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta2$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta2
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta2$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta2$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta2ToJSON(
  recipientUpdateTemplateRecipientFieldMeta2:
    RecipientUpdateTemplateRecipientFieldMeta2,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta2$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta2,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientFieldMetaType> = z
    .nativeEnum(RecipientUpdateTemplateRecipientFieldMetaType);

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientFieldMetaType> =
    RecipientUpdateTemplateRecipientFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta1$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientFieldMeta1, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientUpdateTemplateRecipientFieldMetaType$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta1$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta1$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta1
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientFieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta1$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta1$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMeta1ToJSON(
  recipientUpdateTemplateRecipientFieldMeta1:
    RecipientUpdateTemplateRecipientFieldMeta1,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta1$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta1,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta1$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta2$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta3$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta4$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta7$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta9$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta5$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta8$inboundSchema),
  z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta6$inboundSchema),
]);

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMeta$Outbound =
  | RecipientUpdateTemplateRecipientFieldMeta1$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta2$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta3$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta4$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta7$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta9$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta5$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta8$Outbound
  | RecipientUpdateTemplateRecipientFieldMeta6$Outbound;

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMeta$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMeta$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMeta
  > = z.union([
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta1$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta2$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta3$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta4$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta7$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta9$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta5$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta8$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta6$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMeta$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMeta$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMeta$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMeta$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaToJSON(
  recipientUpdateTemplateRecipientFieldMeta:
    RecipientUpdateTemplateRecipientFieldMeta,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMeta$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMeta,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFields$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientUpdateTemplateRecipientType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta1$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta2$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta3$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta4$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta7$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta9$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta5$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta8$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientUpdateTemplateRecipientFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientFieldMeta1$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta2$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta3$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta4$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta7$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta9$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta5$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta8$Outbound
    | RecipientUpdateTemplateRecipientFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFields$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientFields$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientFields
> = z.object({
  type: RecipientUpdateTemplateRecipientType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta1$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta2$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta3$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta4$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta7$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta9$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta5$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta8$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFields$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFields$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFields$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFields$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFields$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFields$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFields$Outbound;
}

export function recipientUpdateTemplateRecipientFieldsToJSON(
  recipientUpdateTemplateRecipientFields:
    RecipientUpdateTemplateRecipientFields,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFields$outboundSchema.parse(
      recipientUpdateTemplateRecipientFields,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldsFromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateTemplateRecipientFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientFields' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientResponseBody$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: RecipientUpdateTemplateRecipientTemplatesRecipientsRole$inboundSchema,
    readStatus: RecipientUpdateTemplateRecipientReadStatus$inboundSchema,
    signingStatus: RecipientUpdateTemplateRecipientSigningStatus$inboundSchema,
    sendStatus: RecipientUpdateTemplateRecipientSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateTemplateRecipientAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientFields$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientResponseBody$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientFields$Outbound>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientResponseBody$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientResponseBody
  > = z.object({
    role:
      RecipientUpdateTemplateRecipientTemplatesRecipientsRole$outboundSchema,
    readStatus: RecipientUpdateTemplateRecipientReadStatus$outboundSchema,
    signingStatus: RecipientUpdateTemplateRecipientSigningStatus$outboundSchema,
    sendStatus: RecipientUpdateTemplateRecipientSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateTemplateRecipientAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientResponseBody$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientResponseBody$Outbound;
}

export function recipientUpdateTemplateRecipientResponseBodyToJSON(
  recipientUpdateTemplateRecipientResponseBody:
    RecipientUpdateTemplateRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientResponseBody$outboundSchema.parse(
      recipientUpdateTemplateRecipientResponseBody,
    ),
  );
}

export function recipientUpdateTemplateRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientResponseBody' from JSON`,
  );
}
