/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateTemplateRecipientRoleRequest = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateTemplateRecipientRoleRequest = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientRoleRequest
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientAccessAuthRequest = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientAccessAuthRequest = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientAccessAuthRequest
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientActionAuthRequest = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientActionAuthRequest = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientActionAuthRequest
>;

export type RecipientUpdateTemplateRecipientRecipient = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateTemplateRecipientRoleRequest | undefined;
  signingOrder?: number | undefined;
  accessAuth?:
    | Array<RecipientUpdateTemplateRecipientAccessAuthRequest>
    | undefined;
  actionAuth?:
    | Array<RecipientUpdateTemplateRecipientActionAuthRequest>
    | undefined;
};

export type RecipientUpdateTemplateRecipientRequest = {
  templateId: number;
  recipient: RecipientUpdateTemplateRecipientRecipient;
};

export const RecipientUpdateTemplateRecipientRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateTemplateRecipientRoleResponse = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientRoleResponse
>;

export const RecipientUpdateTemplateRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateTemplateRecipientReadStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientReadStatus
>;

export const RecipientUpdateTemplateRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateTemplateRecipientSigningStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientSigningStatus
>;

export const RecipientUpdateTemplateRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateTemplateRecipientSendStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientAccessAuthResponse = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientAccessAuthResponse = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientActionAuthResponse = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientActionAuthResponse
>;

export type RecipientUpdateTemplateRecipientAuthOptions = {
  accessAuth: Array<RecipientUpdateTemplateRecipientAccessAuthResponse>;
  actionAuth: Array<RecipientUpdateTemplateRecipientActionAuthResponse>;
};

export const RecipientUpdateTemplateRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateTemplateRecipientType = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientType
>;

export const RecipientUpdateTemplateRecipientTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type RecipientUpdateTemplateRecipientTypeDropdown = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeDropdown
>;

export type RecipientUpdateTemplateRecipientValue3 = {
  value: string;
};

export type RecipientUpdateTemplateRecipientFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeDropdown;
  values?: Array<RecipientUpdateTemplateRecipientValue3> | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateTemplateRecipientTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type RecipientUpdateTemplateRecipientTypeCheckbox = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeCheckbox
>;

export type RecipientUpdateTemplateRecipientValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export const RecipientUpdateTemplateRecipientDirection = {
  Vertical: "vertical",
  Horizontal: "horizontal",
} as const;
export type RecipientUpdateTemplateRecipientDirection = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientDirection
>;

export type RecipientUpdateTemplateRecipientFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeCheckbox;
  values?: Array<RecipientUpdateTemplateRecipientValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction?: RecipientUpdateTemplateRecipientDirection | undefined;
};

export const RecipientUpdateTemplateRecipientTypeRadio = {
  Radio: "radio",
} as const;
export type RecipientUpdateTemplateRecipientTypeRadio = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeRadio
>;

export type RecipientUpdateTemplateRecipientValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateTemplateRecipientFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeRadio;
  values?: Array<RecipientUpdateTemplateRecipientValue1> | undefined;
};

export const RecipientUpdateTemplateRecipientTypeNumber = {
  Number: "number",
} as const;
export type RecipientUpdateTemplateRecipientTypeNumber = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeNumber
>;

export const RecipientUpdateTemplateRecipientTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientTextAlign6 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTextAlign6
>;

export type RecipientUpdateTemplateRecipientFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeNumber;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientTextAlign6 | undefined;
};

export const RecipientUpdateTemplateRecipientTypeText = {
  Text: "text",
} as const;
export type RecipientUpdateTemplateRecipientTypeText = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeText
>;

export const RecipientUpdateTemplateRecipientTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientTextAlign5 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTextAlign5
>;

export type RecipientUpdateTemplateRecipientFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientTextAlign5 | undefined;
};

export const RecipientUpdateTemplateRecipientTypeDate = {
  Date: "date",
} as const;
export type RecipientUpdateTemplateRecipientTypeDate = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeDate
>;

export const RecipientUpdateTemplateRecipientTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientTextAlign4 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTextAlign4
>;

export type RecipientUpdateTemplateRecipientFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeDate;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientTextAlign4 | undefined;
};

export const RecipientUpdateTemplateRecipientTypeEmail = {
  Email: "email",
} as const;
export type RecipientUpdateTemplateRecipientTypeEmail = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeEmail
>;

export const RecipientUpdateTemplateRecipientTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientTextAlign3 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTextAlign3
>;

export type RecipientUpdateTemplateRecipientFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeEmail;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientTextAlign3 | undefined;
};

export const RecipientUpdateTemplateRecipientTypeName = {
  Name: "name",
} as const;
export type RecipientUpdateTemplateRecipientTypeName = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeName
>;

export const RecipientUpdateTemplateRecipientTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientTextAlign2 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTextAlign2
>;

export type RecipientUpdateTemplateRecipientFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeName;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientTextAlign2 | undefined;
};

export const RecipientUpdateTemplateRecipientTypeInitials = {
  Initials: "initials",
} as const;
export type RecipientUpdateTemplateRecipientTypeInitials = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTypeInitials
>;

export const RecipientUpdateTemplateRecipientTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientTextAlign1 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientTextAlign1
>;

export type RecipientUpdateTemplateRecipientFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientTypeInitials;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientTextAlign1 | undefined;
};

export type RecipientUpdateTemplateRecipientFieldMetaUnion =
  | RecipientUpdateTemplateRecipientFieldMetaInitials
  | RecipientUpdateTemplateRecipientFieldMetaName
  | RecipientUpdateTemplateRecipientFieldMetaEmail
  | RecipientUpdateTemplateRecipientFieldMetaDate
  | RecipientUpdateTemplateRecipientFieldMetaText
  | RecipientUpdateTemplateRecipientFieldMetaNumber
  | RecipientUpdateTemplateRecipientFieldMetaRadio
  | RecipientUpdateTemplateRecipientFieldMetaCheckbox
  | RecipientUpdateTemplateRecipientFieldMetaDropdown;

export type RecipientUpdateTemplateRecipientField = {
  envelopeId: string;
  envelopeItemId: string;
  type: RecipientUpdateTemplateRecipientType;
  id: number;
  secondaryId: string;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientFieldMetaInitials
    | RecipientUpdateTemplateRecipientFieldMetaName
    | RecipientUpdateTemplateRecipientFieldMetaEmail
    | RecipientUpdateTemplateRecipientFieldMetaDate
    | RecipientUpdateTemplateRecipientFieldMetaText
    | RecipientUpdateTemplateRecipientFieldMetaNumber
    | RecipientUpdateTemplateRecipientFieldMetaRadio
    | RecipientUpdateTemplateRecipientFieldMetaCheckbox
    | RecipientUpdateTemplateRecipientFieldMetaDropdown
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/**
 * Successful response
 */
export type RecipientUpdateTemplateRecipientResponse = {
  envelopeId: string;
  role: RecipientUpdateTemplateRecipientRoleResponse;
  readStatus: RecipientUpdateTemplateRecipientReadStatus;
  signingStatus: RecipientUpdateTemplateRecipientSigningStatus;
  sendStatus: RecipientUpdateTemplateRecipientSendStatus;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientField>;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientRoleRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientRoleRequest> = z
    .nativeEnum(RecipientUpdateTemplateRecipientRoleRequest);

/** @internal */
export const RecipientUpdateTemplateRecipientRoleRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientRoleRequest> =
    RecipientUpdateTemplateRecipientRoleRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRoleRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRoleRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRoleRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRoleRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRoleRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientAccessAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientAccessAuthRequest> = z
    .nativeEnum(RecipientUpdateTemplateRecipientAccessAuthRequest);

/** @internal */
export const RecipientUpdateTemplateRecipientAccessAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientAccessAuthRequest> =
    RecipientUpdateTemplateRecipientAccessAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientAccessAuthRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientAccessAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientAccessAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAccessAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientAccessAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientActionAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientActionAuthRequest> = z
    .nativeEnum(RecipientUpdateTemplateRecipientActionAuthRequest);

/** @internal */
export const RecipientUpdateTemplateRecipientActionAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientActionAuthRequest> =
    RecipientUpdateTemplateRecipientActionAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientActionAuthRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientActionAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientActionAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientActionAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientActionAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientRecipient$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientRecipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  email: z.string().optional(),
  name: z.string().optional(),
  role: RecipientUpdateTemplateRecipientRoleRequest$inboundSchema.optional(),
  signingOrder: z.number().optional(),
  accessAuth: z.array(
    RecipientUpdateTemplateRecipientAccessAuthRequest$inboundSchema,
  ).optional(),
  actionAuth: z.array(
    RecipientUpdateTemplateRecipientActionAuthRequest$inboundSchema,
  ).optional(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientRecipient$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: Array<string> | undefined;
  actionAuth?: Array<string> | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientRecipient$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientRecipient$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientRecipient
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateTemplateRecipientRoleRequest$outboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientAccessAuthRequest$outboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientActionAuthRequest$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRecipient$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRecipient$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRecipient$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRecipient$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRecipient$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRecipient$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientRecipient$Outbound;
}

export function recipientUpdateTemplateRecipientRecipientToJSON(
  recipientUpdateTemplateRecipientRecipient:
    RecipientUpdateTemplateRecipientRecipient,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientRecipient$outboundSchema.parse(
      recipientUpdateTemplateRecipientRecipient,
    ),
  );
}

export function recipientUpdateTemplateRecipientRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientRecipient' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientRequest$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  templateId: z.number(),
  recipient: z.lazy(() =>
    RecipientUpdateTemplateRecipientRecipient$inboundSchema
  ),
});

/** @internal */
export type RecipientUpdateTemplateRecipientRequest$Outbound = {
  templateId: number;
  recipient: RecipientUpdateTemplateRecipientRecipient$Outbound;
};

/** @internal */
export const RecipientUpdateTemplateRecipientRequest$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientRequest
> = z.object({
  templateId: z.number(),
  recipient: z.lazy(() =>
    RecipientUpdateTemplateRecipientRecipient$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientRequest$Outbound;
}

export function recipientUpdateTemplateRecipientRequestToJSON(
  recipientUpdateTemplateRecipientRequest:
    RecipientUpdateTemplateRecipientRequest,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientRequest$outboundSchema.parse(
      recipientUpdateTemplateRecipientRequest,
    ),
  );
}

export function recipientUpdateTemplateRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientRoleResponse> = z
    .nativeEnum(RecipientUpdateTemplateRecipientRoleResponse);

/** @internal */
export const RecipientUpdateTemplateRecipientRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientRoleResponse> =
    RecipientUpdateTemplateRecipientRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientRoleResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientRoleResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientReadStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientReadStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientReadStatus> =
    RecipientUpdateTemplateRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientReadStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSigningStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientSigningStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSigningStatus> =
    RecipientUpdateTemplateRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientSigningStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSendStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientSendStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientSendStatus> =
    RecipientUpdateTemplateRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientSendStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientAccessAuthResponse> = z
    .nativeEnum(RecipientUpdateTemplateRecipientAccessAuthResponse);

/** @internal */
export const RecipientUpdateTemplateRecipientAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientAccessAuthResponse> =
    RecipientUpdateTemplateRecipientAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientAccessAuthResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientActionAuthResponse> = z
    .nativeEnum(RecipientUpdateTemplateRecipientActionAuthResponse);

/** @internal */
export const RecipientUpdateTemplateRecipientActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientActionAuthResponse> =
    RecipientUpdateTemplateRecipientActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientActionAuthResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientAuthOptions
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientAuthOptions$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientAuthOptions$Outbound;
}

export function recipientUpdateTemplateRecipientAuthOptionsToJSON(
  recipientUpdateTemplateRecipientAuthOptions:
    RecipientUpdateTemplateRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientAuthOptions$outboundSchema.parse(
      recipientUpdateTemplateRecipientAuthOptions,
    ),
  );
}

export function recipientUpdateTemplateRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientType> = z.nativeEnum(
    RecipientUpdateTemplateRecipientType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientType> =
    RecipientUpdateTemplateRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeDropdown> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeDropdown);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeDropdown> =
    RecipientUpdateTemplateRecipientTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeDropdown$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeDropdown$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientValue3$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientValue3$Outbound = {
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientValue3$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientValue3$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientValue3$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientValue3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientValue3$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientValue3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientValue3$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientValue3$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientValue3$Outbound;
}

export function recipientUpdateTemplateRecipientValue3ToJSON(
  recipientUpdateTemplateRecipientValue3:
    RecipientUpdateTemplateRecipientValue3,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientValue3$outboundSchema.parse(
      recipientUpdateTemplateRecipientValue3,
    ),
  );
}

export function recipientUpdateTemplateRecipientValue3FromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateTemplateRecipientValue3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientValue3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientValue3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaDropdown$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateTemplateRecipientValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaDropdown$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaDropdown$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaDropdown$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaDropdown$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaDropdownToJSON(
  recipientUpdateTemplateRecipientFieldMetaDropdown:
    RecipientUpdateTemplateRecipientFieldMetaDropdown,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaDropdown$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaDropdown,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeCheckbox> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeCheckbox);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeCheckbox> =
    RecipientUpdateTemplateRecipientTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeCheckbox$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeCheckbox$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientValue2$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientValue2$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientValue2$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientValue2$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientValue2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientValue2$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientValue2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientValue2$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientValue2$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientValue2$Outbound;
}

export function recipientUpdateTemplateRecipientValue2ToJSON(
  recipientUpdateTemplateRecipientValue2:
    RecipientUpdateTemplateRecipientValue2,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientValue2$outboundSchema.parse(
      recipientUpdateTemplateRecipientValue2,
    ),
  );
}

export function recipientUpdateTemplateRecipientValue2FromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateTemplateRecipientValue2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientValue2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientValue2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientDirection$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientDirection> = z
    .nativeEnum(RecipientUpdateTemplateRecipientDirection);

/** @internal */
export const RecipientUpdateTemplateRecipientDirection$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientDirection> =
    RecipientUpdateTemplateRecipientDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientDirection$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientDirection$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientDirection$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientDirection$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientDirection$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
    direction: RecipientUpdateTemplateRecipientDirection$inboundSchema.default(
      "vertical",
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateTemplateRecipientValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
    direction: RecipientUpdateTemplateRecipientDirection$outboundSchema.default(
      "vertical",
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaCheckbox$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaCheckbox$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaCheckboxToJSON(
  recipientUpdateTemplateRecipientFieldMetaCheckbox:
    RecipientUpdateTemplateRecipientFieldMetaCheckbox,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaCheckbox$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaCheckbox,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeRadio> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeRadio);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeRadio> =
    RecipientUpdateTemplateRecipientTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeRadio$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeRadio$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientValue1$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientValue1$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientValue1$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientValue1$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientValue1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientValue1$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientValue1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientValue1$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientValue1$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientValue1$Outbound;
}

export function recipientUpdateTemplateRecipientValue1ToJSON(
  recipientUpdateTemplateRecipientValue1:
    RecipientUpdateTemplateRecipientValue1,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientValue1$outboundSchema.parse(
      recipientUpdateTemplateRecipientValue1,
    ),
  );
}

export function recipientUpdateTemplateRecipientValue1FromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateTemplateRecipientValue1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientValue1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientValue1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaRadio$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateTemplateRecipientValue1$Outbound> | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaRadio$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaRadio$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaRadio$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaRadio$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaRadio$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaRadioToJSON(
  recipientUpdateTemplateRecipientFieldMetaRadio:
    RecipientUpdateTemplateRecipientFieldMetaRadio,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaRadio$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaRadio,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeNumber> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeNumber);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeNumber> =
    RecipientUpdateTemplateRecipientTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeNumber$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeNumber$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign6> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTextAlign6);

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign6> =
    RecipientUpdateTemplateRecipientTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTextAlign6$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTextAlign6$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTextAlign6$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaNumber$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeNumber$inboundSchema,
    numberFormat: z.nullable(z.string()).optional(),
    value: z.string().optional(),
    minValue: z.nullable(z.number()).optional(),
    maxValue: z.nullable(z.number()).optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign6$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaNumber$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeNumber$outboundSchema,
    numberFormat: z.nullable(z.string()).optional(),
    value: z.string().optional(),
    minValue: z.nullable(z.number()).optional(),
    maxValue: z.nullable(z.number()).optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaNumber$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaNumber$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaNumber$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaNumber$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaNumberToJSON(
  recipientUpdateTemplateRecipientFieldMetaNumber:
    RecipientUpdateTemplateRecipientFieldMetaNumber,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaNumber$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaNumber,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeText$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeText> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeText);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeText$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeText> =
    RecipientUpdateTemplateRecipientTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeText$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeText$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeText$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign5> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTextAlign5);

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign5> =
    RecipientUpdateTemplateRecipientTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTextAlign5$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTextAlign5$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTextAlign5$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaText$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaText,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign5$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaText$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaText$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaText$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaText$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaText$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaText$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMetaText$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaTextToJSON(
  recipientUpdateTemplateRecipientFieldMetaText:
    RecipientUpdateTemplateRecipientFieldMetaText,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaText$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaText,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaText' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeDate> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeDate);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeDate> =
    RecipientUpdateTemplateRecipientTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeDate$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeDate$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeDate$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign4> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTextAlign4);

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign4> =
    RecipientUpdateTemplateRecipientTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTextAlign4$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTextAlign4$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTextAlign4$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaDate$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaDate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign4$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaDate$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaDate$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaDate$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaDate$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaDate$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaDate$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMetaDate$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaDateToJSON(
  recipientUpdateTemplateRecipientFieldMetaDate:
    RecipientUpdateTemplateRecipientFieldMetaDate,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaDate$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaDate,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeEmail> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeEmail);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeEmail> =
    RecipientUpdateTemplateRecipientTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeEmail$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeEmail$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign3> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTextAlign3);

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign3> =
    RecipientUpdateTemplateRecipientTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTextAlign3$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTextAlign3$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTextAlign3$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaEmail$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign3$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaEmail$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaEmail$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaEmail$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaEmail$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaEmail$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaEmailToJSON(
  recipientUpdateTemplateRecipientFieldMetaEmail:
    RecipientUpdateTemplateRecipientFieldMetaEmail,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaEmail$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaEmail,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeName$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeName> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeName);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeName$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeName> =
    RecipientUpdateTemplateRecipientTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeName$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeName$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeName$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign2> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTextAlign2);

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign2> =
    RecipientUpdateTemplateRecipientTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTextAlign2$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTextAlign2$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTextAlign2$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaName$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaName,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign2$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaName$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaName$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaName$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaName$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaName$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaName$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientFieldMetaName$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaNameToJSON(
  recipientUpdateTemplateRecipientFieldMetaName:
    RecipientUpdateTemplateRecipientFieldMetaName,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaName$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaName,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaName' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeInitials> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTypeInitials);

/** @internal */
export const RecipientUpdateTemplateRecipientTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTypeInitials> =
    RecipientUpdateTemplateRecipientTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTypeInitials$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTypeInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTypeInitials$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign1> = z
    .nativeEnum(RecipientUpdateTemplateRecipientTextAlign1);

/** @internal */
export const RecipientUpdateTemplateRecipientTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientTextAlign1> =
    RecipientUpdateTemplateRecipientTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientTextAlign1$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientTextAlign1$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientTextAlign1$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaInitials$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign1$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaInitials$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaInitials$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaInitials$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaInitials$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaInitialsToJSON(
  recipientUpdateTemplateRecipientFieldMetaInitials:
    RecipientUpdateTemplateRecipientFieldMetaInitials,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaInitials$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaInitials,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaUnion$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaInitials$inboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaName$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaEmail$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaDate$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaText$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaNumber$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaRadio$inboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaCheckbox$inboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaDropdown$inboundSchema
    ),
  ]);

/** @internal */
export type RecipientUpdateTemplateRecipientFieldMetaUnion$Outbound =
  | RecipientUpdateTemplateRecipientFieldMetaInitials$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaName$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaEmail$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaDate$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaText$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaNumber$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaRadio$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaCheckbox$Outbound
  | RecipientUpdateTemplateRecipientFieldMetaDropdown$Outbound;

/** @internal */
export const RecipientUpdateTemplateRecipientFieldMetaUnion$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientFieldMetaUnion
  > = z.union([
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaInitials$outboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaName$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaEmail$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaDate$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaText$outboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaNumber$outboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaRadio$outboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaCheckbox$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientFieldMetaDropdown$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientFieldMetaUnion$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaUnion$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientFieldMetaUnion$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientFieldMetaUnion$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientFieldMetaUnion$Outbound;
}

export function recipientUpdateTemplateRecipientFieldMetaUnionToJSON(
  recipientUpdateTemplateRecipientFieldMetaUnion:
    RecipientUpdateTemplateRecipientFieldMetaUnion,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientFieldMetaUnion$outboundSchema.parse(
      recipientUpdateTemplateRecipientFieldMetaUnion,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientField$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientField,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: RecipientUpdateTemplateRecipientType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaInitials$inboundSchema
      ),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaName$inboundSchema),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaEmail$inboundSchema
      ),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaDate$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientFieldMetaText$inboundSchema),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaNumber$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaRadio$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaDropdown$inboundSchema
      ),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientField$Outbound = {
  envelopeId: string;
  envelopeItemId: string;
  type: string;
  id: number;
  secondaryId: string;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientFieldMetaInitials$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaName$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaEmail$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaDate$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaText$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaNumber$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaRadio$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaCheckbox$Outbound
    | RecipientUpdateTemplateRecipientFieldMetaDropdown$Outbound
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientField$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientField$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientField
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: RecipientUpdateTemplateRecipientType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaName$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaEmail$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaDate$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaText$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaNumber$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaRadio$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientFieldMetaDropdown$outboundSchema
      ),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientField$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientField$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientField$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientField$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientField$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientField$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientField$Outbound;
}

export function recipientUpdateTemplateRecipientFieldToJSON(
  recipientUpdateTemplateRecipientField: RecipientUpdateTemplateRecipientField,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientField$outboundSchema.parse(
      recipientUpdateTemplateRecipientField,
    ),
  );
}

export function recipientUpdateTemplateRecipientFieldFromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateTemplateRecipientField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientField' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientResponse$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  role: RecipientUpdateTemplateRecipientRoleResponse$inboundSchema,
  readStatus: RecipientUpdateTemplateRecipientReadStatus$inboundSchema,
  signingStatus: RecipientUpdateTemplateRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientUpdateTemplateRecipientSendStatus$inboundSchema,
  id: z.number(),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientUpdateTemplateRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientUpdateTemplateRecipientField$inboundSchema),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientResponse$Outbound = {
  envelopeId: string;
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientField$Outbound>;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientResponse$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientResponse$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientResponse
> = z.object({
  envelopeId: z.string(),
  role: RecipientUpdateTemplateRecipientRoleResponse$outboundSchema,
  readStatus: RecipientUpdateTemplateRecipientReadStatus$outboundSchema,
  signingStatus: RecipientUpdateTemplateRecipientSigningStatus$outboundSchema,
  sendStatus: RecipientUpdateTemplateRecipientSendStatus$outboundSchema,
  id: z.number(),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientUpdateTemplateRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientUpdateTemplateRecipientField$outboundSchema),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientResponse$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientResponse$Outbound;
}

export function recipientUpdateTemplateRecipientResponseToJSON(
  recipientUpdateTemplateRecipientResponse:
    RecipientUpdateTemplateRecipientResponse,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientResponse$outboundSchema.parse(
      recipientUpdateTemplateRecipientResponse,
    ),
  );
}

export function recipientUpdateTemplateRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientResponse' from JSON`,
  );
}
