/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FolderDeleteFolderRequest = {
  folderId: string;
};

/**
 * Successful response
 */
export type FolderDeleteFolderResponse = {
  success: boolean;
};

/** @internal */
export const FolderDeleteFolderRequest$inboundSchema: z.ZodType<
  FolderDeleteFolderRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  folderId: z.string(),
});

/** @internal */
export type FolderDeleteFolderRequest$Outbound = {
  folderId: string;
};

/** @internal */
export const FolderDeleteFolderRequest$outboundSchema: z.ZodType<
  FolderDeleteFolderRequest$Outbound,
  z.ZodTypeDef,
  FolderDeleteFolderRequest
> = z.object({
  folderId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FolderDeleteFolderRequest$ {
  /** @deprecated use `FolderDeleteFolderRequest$inboundSchema` instead. */
  export const inboundSchema = FolderDeleteFolderRequest$inboundSchema;
  /** @deprecated use `FolderDeleteFolderRequest$outboundSchema` instead. */
  export const outboundSchema = FolderDeleteFolderRequest$outboundSchema;
  /** @deprecated use `FolderDeleteFolderRequest$Outbound` instead. */
  export type Outbound = FolderDeleteFolderRequest$Outbound;
}

export function folderDeleteFolderRequestToJSON(
  folderDeleteFolderRequest: FolderDeleteFolderRequest,
): string {
  return JSON.stringify(
    FolderDeleteFolderRequest$outboundSchema.parse(folderDeleteFolderRequest),
  );
}

export function folderDeleteFolderRequestFromJSON(
  jsonString: string,
): SafeParseResult<FolderDeleteFolderRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FolderDeleteFolderRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FolderDeleteFolderRequest' from JSON`,
  );
}

/** @internal */
export const FolderDeleteFolderResponse$inboundSchema: z.ZodType<
  FolderDeleteFolderResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
});

/** @internal */
export type FolderDeleteFolderResponse$Outbound = {
  success: boolean;
};

/** @internal */
export const FolderDeleteFolderResponse$outboundSchema: z.ZodType<
  FolderDeleteFolderResponse$Outbound,
  z.ZodTypeDef,
  FolderDeleteFolderResponse
> = z.object({
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FolderDeleteFolderResponse$ {
  /** @deprecated use `FolderDeleteFolderResponse$inboundSchema` instead. */
  export const inboundSchema = FolderDeleteFolderResponse$inboundSchema;
  /** @deprecated use `FolderDeleteFolderResponse$outboundSchema` instead. */
  export const outboundSchema = FolderDeleteFolderResponse$outboundSchema;
  /** @deprecated use `FolderDeleteFolderResponse$Outbound` instead. */
  export type Outbound = FolderDeleteFolderResponse$Outbound;
}

export function folderDeleteFolderResponseToJSON(
  folderDeleteFolderResponse: FolderDeleteFolderResponse,
): string {
  return JSON.stringify(
    FolderDeleteFolderResponse$outboundSchema.parse(folderDeleteFolderResponse),
  );
}

export function folderDeleteFolderResponseFromJSON(
  jsonString: string,
): SafeParseResult<FolderDeleteFolderResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FolderDeleteFolderResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FolderDeleteFolderResponse' from JSON`,
  );
}
