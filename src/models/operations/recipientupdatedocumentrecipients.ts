/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateDocumentRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateDocumentRecipientsRole = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsRole
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientsAccessAuth = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientsActionAuth = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsActionAuth
>;

export type RecipientUpdateDocumentRecipientsRecipients = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateDocumentRecipientsRole | undefined;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: RecipientUpdateDocumentRecipientsAccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: RecipientUpdateDocumentRecipientsActionAuth | null | undefined;
};

export type RecipientUpdateDocumentRecipientsRequestBody = {
  documentId: number;
  recipients: Array<RecipientUpdateDocumentRecipientsRecipients>;
};

export const RecipientUpdateDocumentRecipientsDocumentsRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateDocumentRecipientsDocumentsRecipientsRole =
  ClosedEnum<typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsRole>;

export const RecipientUpdateDocumentRecipientsReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateDocumentRecipientsReadStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsReadStatus
>;

export const RecipientUpdateDocumentRecipientsSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateDocumentRecipientsSigningStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsSigningStatus
>;

export const RecipientUpdateDocumentRecipientsSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateDocumentRecipientsSendStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth
  >;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth
  >;

export type RecipientUpdateDocumentRecipientsAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth:
    | RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth
    | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth:
    | RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth
    | null;
};

export const RecipientUpdateDocumentRecipientsType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateDocumentRecipientsType = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsType
>;

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type
  >;

export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues =
  {
    value: string;
  };

export type RecipientUpdateDocumentRecipientsFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type;
  values?:
    | Array<
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues
    >
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType
  >;

export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues =
  {
    id: number;
    checked: boolean;
    value: string;
  };

export type RecipientUpdateDocumentRecipientsFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType;
  values?:
    | Array<RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType =
  {
    Radio: "radio",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType
  >;

export type RecipientUpdateDocumentRecipientsFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateDocumentRecipientsFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType;
  values?: Array<RecipientUpdateDocumentRecipientsFieldMetaValues> | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientUpdateDocumentRecipientsFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  >;

export type RecipientUpdateDocumentRecipientsFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type =
  {
    Date: "date",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type
  >;

export type RecipientUpdateDocumentRecipientsFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType =
  {
    Email: "email",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType
  >;

export type RecipientUpdateDocumentRecipientsFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType =
  {
    Name: "name",
  } as const;
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType
  >;

export type RecipientUpdateDocumentRecipientsFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientsFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientUpdateDocumentRecipientsFieldMetaType = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsFieldMetaType
>;

export type RecipientUpdateDocumentRecipientsFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientUpdateDocumentRecipientsFieldMeta =
  | RecipientUpdateDocumentRecipientsFieldMeta1
  | RecipientUpdateDocumentRecipientsFieldMeta2
  | RecipientUpdateDocumentRecipientsFieldMeta3
  | RecipientUpdateDocumentRecipientsFieldMeta4
  | RecipientUpdateDocumentRecipientsFieldMeta7
  | RecipientUpdateDocumentRecipientsFieldMeta9
  | RecipientUpdateDocumentRecipientsFieldMeta5
  | RecipientUpdateDocumentRecipientsFieldMeta8
  | RecipientUpdateDocumentRecipientsFieldMeta6;

export type RecipientUpdateDocumentRecipientsFields = {
  type: RecipientUpdateDocumentRecipientsType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientsFieldMeta1
    | RecipientUpdateDocumentRecipientsFieldMeta2
    | RecipientUpdateDocumentRecipientsFieldMeta3
    | RecipientUpdateDocumentRecipientsFieldMeta4
    | RecipientUpdateDocumentRecipientsFieldMeta7
    | RecipientUpdateDocumentRecipientsFieldMeta9
    | RecipientUpdateDocumentRecipientsFieldMeta5
    | RecipientUpdateDocumentRecipientsFieldMeta8
    | RecipientUpdateDocumentRecipientsFieldMeta6
    | null;
};

export type RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients = {
  role: RecipientUpdateDocumentRecipientsDocumentsRecipientsRole;
  readStatus: RecipientUpdateDocumentRecipientsReadStatus;
  signingStatus: RecipientUpdateDocumentRecipientsSigningStatus;
  sendStatus: RecipientUpdateDocumentRecipientsSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientsFields>;
};

/**
 * Successful response
 */
export type RecipientUpdateDocumentRecipientsResponseBody = {
  recipients: Array<
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients
  >;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRole$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsRole> = z.nativeEnum(
    RecipientUpdateDocumentRecipientsRole,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsRole$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsRole> =
    RecipientUpdateDocumentRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRole$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsAccessAuth> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsAccessAuth);

/** @internal */
export const RecipientUpdateDocumentRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsAccessAuth> =
    RecipientUpdateDocumentRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsAccessAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsActionAuth> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsActionAuth);

/** @internal */
export const RecipientUpdateDocumentRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsActionAuth> =
    RecipientUpdateDocumentRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsActionAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsRecipients$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateDocumentRecipientsRole$inboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientsAccessAuth$inboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientsActionAuth$inboundSchema,
    ).optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsRecipients$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRecipients$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRecipients$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsRecipients
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateDocumentRecipientsRole$outboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientsAccessAuth$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientsActionAuth$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRecipients$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipients$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRecipients$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipients$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRecipients$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipients$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsRecipients$Outbound;
}

export function recipientUpdateDocumentRecipientsRecipientsToJSON(
  recipientUpdateDocumentRecipientsRecipients:
    RecipientUpdateDocumentRecipientsRecipients,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsRecipients$outboundSchema.parse(
      recipientUpdateDocumentRecipientsRecipients,
    ),
  );
}

export function recipientUpdateDocumentRecipientsRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsRecipients$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsRecipients' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsRequestBody$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    documentId: z.number(),
    recipients: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsRecipients$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsRequestBody$Outbound = {
  documentId: number;
  recipients: Array<RecipientUpdateDocumentRecipientsRecipients$Outbound>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRequestBody$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsRequestBody
  > = z.object({
    documentId: z.number(),
    recipients: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsRecipients$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRequestBody$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRequestBody$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRequestBody$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRequestBody$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsRequestBody$Outbound;
}

export function recipientUpdateDocumentRecipientsRequestBodyToJSON(
  recipientUpdateDocumentRecipientsRequestBody:
    RecipientUpdateDocumentRecipientsRequestBody,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsRequestBody$outboundSchema.parse(
      recipientUpdateDocumentRecipientsRequestBody,
    ),
  );
}

export function recipientUpdateDocumentRecipientsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsRole
  > = z.nativeEnum(RecipientUpdateDocumentRecipientsDocumentsRecipientsRole);

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsRole
  > = RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsReadStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsReadStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientsReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsReadStatus> =
    RecipientUpdateDocumentRecipientsReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsReadStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSigningStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsSigningStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSigningStatus> =
    RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsSigningStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSendStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsSendStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientsSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSendStatus> =
    RecipientUpdateDocumentRecipientsSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsSendStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth
  > =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth
  > =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsAuthOptions$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsAuthOptions$Outbound;
}

export function recipientUpdateDocumentRecipientsAuthOptionsToJSON(
  recipientUpdateDocumentRecipientsAuthOptions:
    RecipientUpdateDocumentRecipientsAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema.parse(
      recipientUpdateDocumentRecipientsAuthOptions,
    ),
  );
}

export function recipientUpdateDocumentRecipientsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsType> = z.nativeEnum(
    RecipientUpdateDocumentRecipientsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsType> =
    RecipientUpdateDocumentRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValuesToJSON(
  recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$outboundSchema
      .parse(
        recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues,
      ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta9$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta9,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$inboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta9$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta9$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta9
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta9$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta9$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta9ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta9:
    RecipientUpdateDocumentRecipientsFieldMeta9,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta9$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta9,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValuesToJSON(
  recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues:
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$outboundSchema
      .parse(
        recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues,
      ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta8$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta8,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$inboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta8$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta8$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta8
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta8$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta8$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta8ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta8:
    RecipientUpdateDocumentRecipientsFieldMeta8,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta8$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta8,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaValues$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaValues$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaValues$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaValues$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaValuesToJSON(
  recipientUpdateDocumentRecipientsFieldMetaValues:
    RecipientUpdateDocumentRecipientsFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaValues$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaValues,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta7$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta7,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaValues$inboundSchema
      ),
    ).optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientUpdateDocumentRecipientsFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta7$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta7$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta7
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaValues$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta7$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta7$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta7ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta7:
    RecipientUpdateDocumentRecipientsFieldMeta7,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta7$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta7,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta6$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta6,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta6$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta6$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta6
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta6$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta6$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta6ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta6:
    RecipientUpdateDocumentRecipientsFieldMeta6,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta6$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta6,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta5$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta5,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta5$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta5$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta5
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta5$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta5$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta5ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta5:
    RecipientUpdateDocumentRecipientsFieldMeta5,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta5$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta5,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta4$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta4$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta4$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta4
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta4$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta4$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta4ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta4:
    RecipientUpdateDocumentRecipientsFieldMeta4,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta4$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta4,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta3$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta3$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta3$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta3
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta3$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta3$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta3ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta3:
    RecipientUpdateDocumentRecipientsFieldMeta3,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta3$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta3,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType
  > =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta2$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta2$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta2$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta2
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta2$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta2$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta2ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta2:
    RecipientUpdateDocumentRecipientsFieldMeta2,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta2$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta2,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsFieldMetaType> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsFieldMetaType);

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsFieldMetaType> =
    RecipientUpdateDocumentRecipientsFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta1$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsFieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta1$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta1$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta1
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsFieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta1$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta1$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMeta1ToJSON(
  recipientUpdateDocumentRecipientsFieldMeta1:
    RecipientUpdateDocumentRecipientsFieldMeta1,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta1$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta1,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientsFieldMeta, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta1$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta2$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta3$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta4$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta7$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta9$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta5$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta8$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta6$inboundSchema),
    ]);

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMeta$Outbound =
  | RecipientUpdateDocumentRecipientsFieldMeta1$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta2$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta3$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta4$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta7$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta9$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta5$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta8$Outbound
  | RecipientUpdateDocumentRecipientsFieldMeta6$Outbound;

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMeta$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMeta$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMeta
  > = z.union([
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta1$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta2$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta3$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta4$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta7$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta9$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta5$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta8$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta6$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMeta$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMeta$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMeta$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFieldMeta$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaToJSON(
  recipientUpdateDocumentRecipientsFieldMeta:
    RecipientUpdateDocumentRecipientsFieldMeta,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMeta$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMeta,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFields$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientUpdateDocumentRecipientsType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta1$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta2$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta3$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta4$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta7$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta9$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta5$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta8$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientsFieldMeta1$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta2$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta3$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta4$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta7$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta9$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta5$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta8$Outbound
    | RecipientUpdateDocumentRecipientsFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFields$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsFields$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientsFields
> = z.object({
  type: RecipientUpdateDocumentRecipientsType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta1$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta2$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta3$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta4$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta7$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta9$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta5$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta8$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientsFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFields$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFields$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFields$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFields$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFields$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFields$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsFields$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldsToJSON(
  recipientUpdateDocumentRecipientsFields:
    RecipientUpdateDocumentRecipientsFields,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFields$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFields,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFields,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFields$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFields' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$inboundSchema,
    readStatus: RecipientUpdateDocumentRecipientsReadStatus$inboundSchema,
    signingStatus: RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema,
    sendStatus: RecipientUpdateDocumentRecipientsSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsFields$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$Outbound =
  {
    role: string;
    readStatus: string;
    signingStatus: string;
    sendStatus: string;
    id: number;
    documentId: number | null;
    templateId: number | null;
    email: string;
    name: string;
    token: string;
    documentDeletedAt: string | null;
    expired: string | null;
    signedAt: string | null;
    authOptions: RecipientUpdateDocumentRecipientsAuthOptions$Outbound | null;
    signingOrder: number | null;
    rejectionReason: string | null;
    fields: Array<RecipientUpdateDocumentRecipientsFields$Outbound>;
  };

/** @internal */
export const RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients
  > = z.object({
    role:
      RecipientUpdateDocumentRecipientsDocumentsRecipientsRole$outboundSchema,
    readStatus: RecipientUpdateDocumentRecipientsReadStatus$outboundSchema,
    signingStatus:
      RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema,
    sendStatus: RecipientUpdateDocumentRecipientsSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$Outbound;
}

export function recipientUpdateDocumentRecipientsDocumentsRecipientsRecipientsToJSON(
  recipientUpdateDocumentRecipientsDocumentsRecipientsRecipients:
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema
      .parse(recipientUpdateDocumentRecipientsDocumentsRecipientsRecipients),
  );
}

export function recipientUpdateDocumentRecipientsDocumentsRecipientsRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsResponseBody$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema
      ),
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsResponseBody$Outbound = {
  recipients: Array<
    RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$Outbound
  >;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsResponseBody$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsResponseBody
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsResponseBody$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsResponseBody$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsResponseBody$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsResponseBody$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsResponseBody$Outbound;
}

export function recipientUpdateDocumentRecipientsResponseBodyToJSON(
  recipientUpdateDocumentRecipientsResponseBody:
    RecipientUpdateDocumentRecipientsResponseBody,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsResponseBody$outboundSchema.parse(
      recipientUpdateDocumentRecipientsResponseBody,
    ),
  );
}

export function recipientUpdateDocumentRecipientsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsResponseBody' from JSON`,
  );
}
