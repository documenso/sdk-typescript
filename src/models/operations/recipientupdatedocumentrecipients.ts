/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateDocumentRecipientsRoleRequest = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateDocumentRecipientsRoleRequest = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsRoleRequest
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientsAccessAuthRequest = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientsAccessAuthRequest = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsAccessAuthRequest
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientsActionAuthRequest = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientsActionAuthRequest = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsActionAuthRequest
>;

export type RecipientUpdateDocumentRecipientsRecipientRequest = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateDocumentRecipientsRoleRequest | undefined;
  signingOrder?: number | undefined;
  accessAuth?:
    | Array<RecipientUpdateDocumentRecipientsAccessAuthRequest>
    | undefined;
  actionAuth?:
    | Array<RecipientUpdateDocumentRecipientsActionAuthRequest>
    | undefined;
};

export type RecipientUpdateDocumentRecipientsRequest = {
  documentId: number;
  recipients: Array<RecipientUpdateDocumentRecipientsRecipientRequest>;
};

export const RecipientUpdateDocumentRecipientsRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateDocumentRecipientsRoleResponse = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsRoleResponse
>;

export const RecipientUpdateDocumentRecipientsReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateDocumentRecipientsReadStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsReadStatus
>;

export const RecipientUpdateDocumentRecipientsSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateDocumentRecipientsSigningStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsSigningStatus
>;

export const RecipientUpdateDocumentRecipientsSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateDocumentRecipientsSendStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientsAccessAuthResponse = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientsAccessAuthResponse = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientsActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientsActionAuthResponse = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsActionAuthResponse
>;

export type RecipientUpdateDocumentRecipientsAuthOptions = {
  accessAuth: Array<RecipientUpdateDocumentRecipientsAccessAuthResponse>;
  actionAuth: Array<RecipientUpdateDocumentRecipientsActionAuthResponse>;
};

export const RecipientUpdateDocumentRecipientsType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateDocumentRecipientsType = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsType
>;

export const RecipientUpdateDocumentRecipientsTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type RecipientUpdateDocumentRecipientsTypeDropdown = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeDropdown
>;

export type RecipientUpdateDocumentRecipientsValue3 = {
  value: string;
};

export type RecipientUpdateDocumentRecipientsFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeDropdown;
  values?: Array<RecipientUpdateDocumentRecipientsValue3> | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type RecipientUpdateDocumentRecipientsTypeCheckbox = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeCheckbox
>;

export type RecipientUpdateDocumentRecipientsValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export const RecipientUpdateDocumentRecipientsDirection = {
  Vertical: "vertical",
  Horizontal: "horizontal",
} as const;
export type RecipientUpdateDocumentRecipientsDirection = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsDirection
>;

export type RecipientUpdateDocumentRecipientsFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeCheckbox;
  values?: Array<RecipientUpdateDocumentRecipientsValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction?: RecipientUpdateDocumentRecipientsDirection | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeRadio = {
  Radio: "radio",
} as const;
export type RecipientUpdateDocumentRecipientsTypeRadio = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeRadio
>;

export type RecipientUpdateDocumentRecipientsValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateDocumentRecipientsFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeRadio;
  values?: Array<RecipientUpdateDocumentRecipientsValue1> | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeNumber = {
  Number: "number",
} as const;
export type RecipientUpdateDocumentRecipientsTypeNumber = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeNumber
>;

export const RecipientUpdateDocumentRecipientsTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientsTextAlign6 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTextAlign6
>;

export type RecipientUpdateDocumentRecipientsFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeNumber;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientsTextAlign6 | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeText = {
  Text: "text",
} as const;
export type RecipientUpdateDocumentRecipientsTypeText = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeText
>;

export const RecipientUpdateDocumentRecipientsTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientsTextAlign5 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTextAlign5
>;

export type RecipientUpdateDocumentRecipientsFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientsTextAlign5 | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeDate = {
  Date: "date",
} as const;
export type RecipientUpdateDocumentRecipientsTypeDate = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeDate
>;

export const RecipientUpdateDocumentRecipientsTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientsTextAlign4 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTextAlign4
>;

export type RecipientUpdateDocumentRecipientsFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeDate;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientsTextAlign4 | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeEmail = {
  Email: "email",
} as const;
export type RecipientUpdateDocumentRecipientsTypeEmail = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeEmail
>;

export const RecipientUpdateDocumentRecipientsTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientsTextAlign3 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTextAlign3
>;

export type RecipientUpdateDocumentRecipientsFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeEmail;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientsTextAlign3 | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeName = {
  Name: "name",
} as const;
export type RecipientUpdateDocumentRecipientsTypeName = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeName
>;

export const RecipientUpdateDocumentRecipientsTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientsTextAlign2 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTextAlign2
>;

export type RecipientUpdateDocumentRecipientsFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeName;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientsTextAlign2 | undefined;
};

export const RecipientUpdateDocumentRecipientsTypeInitials = {
  Initials: "initials",
} as const;
export type RecipientUpdateDocumentRecipientsTypeInitials = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTypeInitials
>;

export const RecipientUpdateDocumentRecipientsTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientsTextAlign1 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientsTextAlign1
>;

export type RecipientUpdateDocumentRecipientsFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientsTypeInitials;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientsTextAlign1 | undefined;
};

export type RecipientUpdateDocumentRecipientsFieldMetaUnion =
  | RecipientUpdateDocumentRecipientsFieldMetaInitials
  | RecipientUpdateDocumentRecipientsFieldMetaName
  | RecipientUpdateDocumentRecipientsFieldMetaEmail
  | RecipientUpdateDocumentRecipientsFieldMetaDate
  | RecipientUpdateDocumentRecipientsFieldMetaText
  | RecipientUpdateDocumentRecipientsFieldMetaNumber
  | RecipientUpdateDocumentRecipientsFieldMetaRadio
  | RecipientUpdateDocumentRecipientsFieldMetaCheckbox
  | RecipientUpdateDocumentRecipientsFieldMetaDropdown;

export type RecipientUpdateDocumentRecipientsField = {
  envelopeId: string;
  envelopeItemId: string;
  type: RecipientUpdateDocumentRecipientsType;
  id: number;
  secondaryId: string;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientsFieldMetaInitials
    | RecipientUpdateDocumentRecipientsFieldMetaName
    | RecipientUpdateDocumentRecipientsFieldMetaEmail
    | RecipientUpdateDocumentRecipientsFieldMetaDate
    | RecipientUpdateDocumentRecipientsFieldMetaText
    | RecipientUpdateDocumentRecipientsFieldMetaNumber
    | RecipientUpdateDocumentRecipientsFieldMetaRadio
    | RecipientUpdateDocumentRecipientsFieldMetaCheckbox
    | RecipientUpdateDocumentRecipientsFieldMetaDropdown
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

export type RecipientUpdateDocumentRecipientsRecipientResponse = {
  envelopeId: string;
  role: RecipientUpdateDocumentRecipientsRoleResponse;
  readStatus: RecipientUpdateDocumentRecipientsReadStatus;
  signingStatus: RecipientUpdateDocumentRecipientsSigningStatus;
  sendStatus: RecipientUpdateDocumentRecipientsSendStatus;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientsField>;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/**
 * Successful response
 */
export type RecipientUpdateDocumentRecipientsResponse = {
  recipients: Array<RecipientUpdateDocumentRecipientsRecipientResponse>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRoleRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsRoleRequest> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsRoleRequest);

/** @internal */
export const RecipientUpdateDocumentRecipientsRoleRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsRoleRequest> =
    RecipientUpdateDocumentRecipientsRoleRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRoleRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRoleRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRoleRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRoleRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRoleRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsAccessAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsAccessAuthRequest> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsAccessAuthRequest);

/** @internal */
export const RecipientUpdateDocumentRecipientsAccessAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsAccessAuthRequest> =
    RecipientUpdateDocumentRecipientsAccessAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsAccessAuthRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsAccessAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsAccessAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAccessAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsAccessAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsActionAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsActionAuthRequest> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsActionAuthRequest);

/** @internal */
export const RecipientUpdateDocumentRecipientsActionAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsActionAuthRequest> =
    RecipientUpdateDocumentRecipientsActionAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsActionAuthRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsActionAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsActionAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsActionAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsActionAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsRecipientRequest$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRecipientRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateDocumentRecipientsRoleRequest$inboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientsAccessAuthRequest$inboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientsActionAuthRequest$inboundSchema,
    ).optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsRecipientRequest$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: Array<string> | undefined;
  actionAuth?: Array<string> | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRecipientRequest$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRecipientRequest$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsRecipientRequest
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateDocumentRecipientsRoleRequest$outboundSchema
      .optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientsAccessAuthRequest$outboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientsActionAuthRequest$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRecipientRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipientRequest$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsRecipientRequest$Outbound;
}

export function recipientUpdateDocumentRecipientsRecipientRequestToJSON(
  recipientUpdateDocumentRecipientsRecipientRequest:
    RecipientUpdateDocumentRecipientsRecipientRequest,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsRecipientRequest$outboundSchema.parse(
      recipientUpdateDocumentRecipientsRecipientRequest,
    ),
  );
}

export function recipientUpdateDocumentRecipientsRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsRecipientRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsRecipientRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsRequest$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  recipients: z.array(
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsRecipientRequest$inboundSchema
    ),
  ),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsRequest$Outbound = {
  documentId: number;
  recipients: Array<RecipientUpdateDocumentRecipientsRecipientRequest$Outbound>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRequest$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsRequest$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientsRequest
> = z.object({
  documentId: z.number(),
  recipients: z.array(
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsRecipientRequest$outboundSchema
    ),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRequest$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRequest$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsRequest$Outbound;
}

export function recipientUpdateDocumentRecipientsRequestToJSON(
  recipientUpdateDocumentRecipientsRequest:
    RecipientUpdateDocumentRecipientsRequest,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsRequest$outboundSchema.parse(
      recipientUpdateDocumentRecipientsRequest,
    ),
  );
}

export function recipientUpdateDocumentRecipientsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsRequest' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsRoleResponse> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsRoleResponse);

/** @internal */
export const RecipientUpdateDocumentRecipientsRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsRoleResponse> =
    RecipientUpdateDocumentRecipientsRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRoleResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRoleResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsReadStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsReadStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientsReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsReadStatus> =
    RecipientUpdateDocumentRecipientsReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsReadStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSigningStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsSigningStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSigningStatus> =
    RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsSigningStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSendStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsSendStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientsSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsSendStatus> =
    RecipientUpdateDocumentRecipientsSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsSendStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsAccessAuthResponse> =
    z.nativeEnum(RecipientUpdateDocumentRecipientsAccessAuthResponse);

/** @internal */
export const RecipientUpdateDocumentRecipientsAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsAccessAuthResponse> =
    RecipientUpdateDocumentRecipientsAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsAccessAuthResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsActionAuthResponse> =
    z.nativeEnum(RecipientUpdateDocumentRecipientsActionAuthResponse);

/** @internal */
export const RecipientUpdateDocumentRecipientsActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsActionAuthResponse> =
    RecipientUpdateDocumentRecipientsActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsActionAuthResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientsAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientsActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsAuthOptions
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientsAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientsActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsAuthOptions$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsAuthOptions$Outbound;
}

export function recipientUpdateDocumentRecipientsAuthOptionsToJSON(
  recipientUpdateDocumentRecipientsAuthOptions:
    RecipientUpdateDocumentRecipientsAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema.parse(
      recipientUpdateDocumentRecipientsAuthOptions,
    ),
  );
}

export function recipientUpdateDocumentRecipientsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsType> = z.nativeEnum(
    RecipientUpdateDocumentRecipientsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientsType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsType> =
    RecipientUpdateDocumentRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeDropdown> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeDropdown);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeDropdown> =
    RecipientUpdateDocumentRecipientsTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeDropdown$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeDropdown$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsValue3$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsValue3$Outbound = {
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsValue3$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsValue3$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientsValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsValue3$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsValue3$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsValue3$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue3$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsValue3$Outbound;
}

export function recipientUpdateDocumentRecipientsValue3ToJSON(
  recipientUpdateDocumentRecipientsValue3:
    RecipientUpdateDocumentRecipientsValue3,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsValue3$outboundSchema.parse(
      recipientUpdateDocumentRecipientsValue3,
    ),
  );
}

export function recipientUpdateDocumentRecipientsValue3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsValue3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsValue3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsValue3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDropdown$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateDocumentRecipientsValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDropdown$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDropdown$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDropdown$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaDropdown$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaDropdownToJSON(
  recipientUpdateDocumentRecipientsFieldMetaDropdown:
    RecipientUpdateDocumentRecipientsFieldMetaDropdown,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaDropdown$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaDropdown,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeCheckbox> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeCheckbox);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeCheckbox> =
    RecipientUpdateDocumentRecipientsTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeCheckbox$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeCheckbox$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsValue2$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsValue2$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsValue2$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientsValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsValue2$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsValue2$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsValue2$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue2$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsValue2$Outbound;
}

export function recipientUpdateDocumentRecipientsValue2ToJSON(
  recipientUpdateDocumentRecipientsValue2:
    RecipientUpdateDocumentRecipientsValue2,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsValue2$outboundSchema.parse(
      recipientUpdateDocumentRecipientsValue2,
    ),
  );
}

export function recipientUpdateDocumentRecipientsValue2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsValue2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsValue2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsValue2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsDirection$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsDirection> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsDirection);

/** @internal */
export const RecipientUpdateDocumentRecipientsDirection$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsDirection> =
    RecipientUpdateDocumentRecipientsDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsDirection$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsDirection$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsDirection$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsDirection$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsDirection$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
    direction: RecipientUpdateDocumentRecipientsDirection$inboundSchema.default(
      "vertical",
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateDocumentRecipientsValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
    direction: RecipientUpdateDocumentRecipientsDirection$outboundSchema
      .default("vertical"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaCheckbox$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaCheckboxToJSON(
  recipientUpdateDocumentRecipientsFieldMetaCheckbox:
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaCheckbox$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaCheckbox,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeRadio> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeRadio);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeRadio> =
    RecipientUpdateDocumentRecipientsTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeRadio$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeRadio$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsValue1$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsValue1$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsValue1$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientsValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsValue1$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsValue1$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsValue1$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsValue1$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsValue1$Outbound;
}

export function recipientUpdateDocumentRecipientsValue1ToJSON(
  recipientUpdateDocumentRecipientsValue1:
    RecipientUpdateDocumentRecipientsValue1,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsValue1$outboundSchema.parse(
      recipientUpdateDocumentRecipientsValue1,
    ),
  );
}

export function recipientUpdateDocumentRecipientsValue1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsValue1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsValue1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsValue1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaRadio$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateDocumentRecipientsValue1$Outbound> | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaRadio$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaRadio$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaRadio$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaRadio$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaRadio$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaRadioToJSON(
  recipientUpdateDocumentRecipientsFieldMetaRadio:
    RecipientUpdateDocumentRecipientsFieldMetaRadio,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaRadio$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaRadio,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeNumber> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeNumber);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeNumber> =
    RecipientUpdateDocumentRecipientsTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeNumber$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeNumber$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign6> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTextAlign6);

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign6> =
    RecipientUpdateDocumentRecipientsTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTextAlign6$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign6$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign6$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaNumber$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeNumber$inboundSchema,
    numberFormat: z.nullable(z.string()).optional(),
    value: z.string().optional(),
    minValue: z.nullable(z.number()).optional(),
    maxValue: z.nullable(z.number()).optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign6$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaNumber$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeNumber$outboundSchema,
    numberFormat: z.nullable(z.string()).optional(),
    value: z.string().optional(),
    minValue: z.nullable(z.number()).optional(),
    maxValue: z.nullable(z.number()).optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaNumber$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaNumber$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaNumber$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaNumber$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaNumberToJSON(
  recipientUpdateDocumentRecipientsFieldMetaNumber:
    RecipientUpdateDocumentRecipientsFieldMetaNumber,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaNumber$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaNumber,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeText$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeText> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeText);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeText$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeText> =
    RecipientUpdateDocumentRecipientsTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeText$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeText$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeText$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign5> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTextAlign5);

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign5> =
    RecipientUpdateDocumentRecipientsTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTextAlign5$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign5$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign5$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaText$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaText,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign5$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaText$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaText$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaText$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaText$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaText$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaText$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaText$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaTextToJSON(
  recipientUpdateDocumentRecipientsFieldMetaText:
    RecipientUpdateDocumentRecipientsFieldMetaText,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaText$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaText,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaText' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeDate> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeDate);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeDate> =
    RecipientUpdateDocumentRecipientsTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeDate$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeDate$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeDate$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign4> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTextAlign4);

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign4> =
    RecipientUpdateDocumentRecipientsTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTextAlign4$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign4$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign4$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDate$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign4$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaDate$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaDate$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaDate$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDate$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaDate$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaDate$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaDate$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaDateToJSON(
  recipientUpdateDocumentRecipientsFieldMetaDate:
    RecipientUpdateDocumentRecipientsFieldMetaDate,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaDate$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaDate,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeEmail> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeEmail);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeEmail> =
    RecipientUpdateDocumentRecipientsTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeEmail$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeEmail$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign3> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTextAlign3);

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign3> =
    RecipientUpdateDocumentRecipientsTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTextAlign3$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign3$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign3$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaEmail$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign3$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaEmail$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaEmail$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaEmail$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaEmail$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaEmail$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaEmailToJSON(
  recipientUpdateDocumentRecipientsFieldMetaEmail:
    RecipientUpdateDocumentRecipientsFieldMetaEmail,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaEmail$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaEmail,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeName$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeName> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeName);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeName$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeName> =
    RecipientUpdateDocumentRecipientsTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeName$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeName$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeName$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign2> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTextAlign2);

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign2> =
    RecipientUpdateDocumentRecipientsTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTextAlign2$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign2$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign2$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaName$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaName,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign2$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaName$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaName$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaName$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaName$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaName$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaName$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaName$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaNameToJSON(
  recipientUpdateDocumentRecipientsFieldMetaName:
    RecipientUpdateDocumentRecipientsFieldMetaName,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaName$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaName,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaName' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeInitials> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTypeInitials);

/** @internal */
export const RecipientUpdateDocumentRecipientsTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTypeInitials> =
    RecipientUpdateDocumentRecipientsTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTypeInitials$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTypeInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTypeInitials$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign1> = z
    .nativeEnum(RecipientUpdateDocumentRecipientsTextAlign1);

/** @internal */
export const RecipientUpdateDocumentRecipientsTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientsTextAlign1> =
    RecipientUpdateDocumentRecipientsTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsTextAlign1$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign1$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsTextAlign1$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaInitials$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign1$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaInitials$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientsTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientsTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaInitials$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaInitials$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaInitials$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaInitialsToJSON(
  recipientUpdateDocumentRecipientsFieldMetaInitials:
    RecipientUpdateDocumentRecipientsFieldMetaInitials,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaInitials$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaInitials,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaUnion$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaInitials$inboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaName$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaEmail$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaDate$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaText$inboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaNumber$inboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaRadio$inboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaCheckbox$inboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaDropdown$inboundSchema
    ),
  ]);

/** @internal */
export type RecipientUpdateDocumentRecipientsFieldMetaUnion$Outbound =
  | RecipientUpdateDocumentRecipientsFieldMetaInitials$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaName$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaEmail$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaDate$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaText$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaNumber$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaRadio$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaCheckbox$Outbound
  | RecipientUpdateDocumentRecipientsFieldMetaDropdown$Outbound;

/** @internal */
export const RecipientUpdateDocumentRecipientsFieldMetaUnion$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsFieldMetaUnion
  > = z.union([
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaInitials$outboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaName$outboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaEmail$outboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaDate$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientsFieldMetaText$outboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaNumber$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaRadio$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaCheckbox$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsFieldMetaDropdown$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsFieldMetaUnion$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaUnion$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsFieldMetaUnion$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsFieldMetaUnion$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsFieldMetaUnion$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldMetaUnionToJSON(
  recipientUpdateDocumentRecipientsFieldMetaUnion:
    RecipientUpdateDocumentRecipientsFieldMetaUnion,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsFieldMetaUnion$outboundSchema.parse(
      recipientUpdateDocumentRecipientsFieldMetaUnion,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsField$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsField,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: RecipientUpdateDocumentRecipientsType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaInitials$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaName$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaEmail$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDate$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaText$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaNumber$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaRadio$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDropdown$inboundSchema
      ),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsField$Outbound = {
  envelopeId: string;
  envelopeItemId: string;
  type: string;
  id: number;
  secondaryId: string;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientsFieldMetaInitials$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaName$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaEmail$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaDate$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaText$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaNumber$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaRadio$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaCheckbox$Outbound
    | RecipientUpdateDocumentRecipientsFieldMetaDropdown$Outbound
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsField$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsField$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientsField
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: RecipientUpdateDocumentRecipientsType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaName$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaEmail$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDate$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaText$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaNumber$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaRadio$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsFieldMetaDropdown$outboundSchema
      ),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsField$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsField$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsField$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsField$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsField$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsField$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsField$Outbound;
}

export function recipientUpdateDocumentRecipientsFieldToJSON(
  recipientUpdateDocumentRecipientsField:
    RecipientUpdateDocumentRecipientsField,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsField$outboundSchema.parse(
      recipientUpdateDocumentRecipientsField,
    ),
  );
}

export function recipientUpdateDocumentRecipientsFieldFromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateDocumentRecipientsField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientsField' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsRecipientResponse$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRecipientResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    envelopeId: z.string(),
    role: RecipientUpdateDocumentRecipientsRoleResponse$inboundSchema,
    readStatus: RecipientUpdateDocumentRecipientsReadStatus$inboundSchema,
    signingStatus: RecipientUpdateDocumentRecipientsSigningStatus$inboundSchema,
    sendStatus: RecipientUpdateDocumentRecipientsSendStatus$inboundSchema,
    id: z.number(),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateDocumentRecipientsAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsField$inboundSchema),
    ),
    documentId: z.nullable(z.number()).optional(),
    templateId: z.nullable(z.number()).optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientsRecipientResponse$Outbound = {
  envelopeId: string;
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientsAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientsField$Outbound>;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsRecipientResponse$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsRecipientResponse$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsRecipientResponse
  > = z.object({
    envelopeId: z.string(),
    role: RecipientUpdateDocumentRecipientsRoleResponse$outboundSchema,
    readStatus: RecipientUpdateDocumentRecipientsReadStatus$outboundSchema,
    signingStatus:
      RecipientUpdateDocumentRecipientsSigningStatus$outboundSchema,
    sendStatus: RecipientUpdateDocumentRecipientsSendStatus$outboundSchema,
    id: z.number(),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateDocumentRecipientsAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientsField$outboundSchema),
    ),
    documentId: z.nullable(z.number()).optional(),
    templateId: z.nullable(z.number()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsRecipientResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsRecipientResponse$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientsRecipientResponse$Outbound;
}

export function recipientUpdateDocumentRecipientsRecipientResponseToJSON(
  recipientUpdateDocumentRecipientsRecipientResponse:
    RecipientUpdateDocumentRecipientsRecipientResponse,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsRecipientResponse$outboundSchema.parse(
      recipientUpdateDocumentRecipientsRecipientResponse,
    ),
  );
}

export function recipientUpdateDocumentRecipientsRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsRecipientResponse' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientsResponse$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipients: z.array(
    z.lazy(() =>
      RecipientUpdateDocumentRecipientsRecipientResponse$inboundSchema
    ),
  ),
});

/** @internal */
export type RecipientUpdateDocumentRecipientsResponse$Outbound = {
  recipients: Array<
    RecipientUpdateDocumentRecipientsRecipientResponse$Outbound
  >;
};

/** @internal */
export const RecipientUpdateDocumentRecipientsResponse$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientsResponse$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientsResponse
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientsRecipientResponse$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientsResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientsResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientsResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientsResponse$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientsResponse$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientsResponse$Outbound;
}

export function recipientUpdateDocumentRecipientsResponseToJSON(
  recipientUpdateDocumentRecipientsResponse:
    RecipientUpdateDocumentRecipientsResponse,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientsResponse$outboundSchema.parse(
      recipientUpdateDocumentRecipientsResponse,
    ),
  );
}

export function recipientUpdateDocumentRecipientsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientsResponse' from JSON`,
  );
}
