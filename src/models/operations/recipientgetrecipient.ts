/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientGetRecipientRequest = {
  recipientId: number;
};

export const RecipientGetRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientGetRecipientRole = ClosedEnum<
  typeof RecipientGetRecipientRole
>;

export const ReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type ReadStatus = ClosedEnum<typeof ReadStatus>;

export const SigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type SigningStatus = ClosedEnum<typeof SigningStatus>;

export const SendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type SendStatus = ClosedEnum<typeof SendStatus>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientGetRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientGetRecipientAccessAuth = ClosedEnum<
  typeof RecipientGetRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientGetRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientGetRecipientActionAuth = ClosedEnum<
  typeof RecipientGetRecipientActionAuth
>;

export type RecipientGetRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: RecipientGetRecipientAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: RecipientGetRecipientActionAuth | null;
};

export const RecipientGetRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientGetRecipientType = ClosedEnum<
  typeof RecipientGetRecipientType
>;

export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type RecipientGetRecipientFieldMetaRecipientsResponseValues = {
  value: string;
};

export type RecipientGetRecipientFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type;
  values?:
    | Array<RecipientGetRecipientFieldMetaRecipientsResponseValues>
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  ClosedEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  >;

export type RecipientGetRecipientFieldMetaRecipientsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetRecipientFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type;
  values?: Array<RecipientGetRecipientFieldMetaRecipientsValues> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Radio: "radio",
  } as const;
export type RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type RecipientGetRecipientFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetRecipientFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType;
  values?: Array<RecipientGetRecipientFieldMetaValues> | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientGetRecipientFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType
  >;

export type RecipientGetRecipientFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsResponse200Type = {
  Date: "date",
} as const;
export type RecipientGetRecipientFieldMetaRecipientsResponse200Type =
  ClosedEnum<typeof RecipientGetRecipientFieldMetaRecipientsResponse200Type>;

export type RecipientGetRecipientFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetRecipientFieldMetaRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsResponseType = {
  Email: "email",
} as const;
export type RecipientGetRecipientFieldMetaRecipientsResponseType = ClosedEnum<
  typeof RecipientGetRecipientFieldMetaRecipientsResponseType
>;

export type RecipientGetRecipientFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetRecipientFieldMetaRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientGetRecipientFieldMetaRecipientsType = {
  Name: "name",
} as const;
export type RecipientGetRecipientFieldMetaRecipientsType = ClosedEnum<
  typeof RecipientGetRecipientFieldMetaRecipientsType
>;

export type RecipientGetRecipientFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetRecipientFieldMetaRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientGetRecipientFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientGetRecipientFieldMetaType = ClosedEnum<
  typeof RecipientGetRecipientFieldMetaType
>;

export type RecipientGetRecipientFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetRecipientFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientGetRecipientFieldMeta =
  | RecipientGetRecipientFieldMeta1
  | RecipientGetRecipientFieldMeta2
  | RecipientGetRecipientFieldMeta3
  | RecipientGetRecipientFieldMeta4
  | RecipientGetRecipientFieldMeta7
  | RecipientGetRecipientFieldMeta9
  | RecipientGetRecipientFieldMeta5
  | RecipientGetRecipientFieldMeta8
  | RecipientGetRecipientFieldMeta6;

export type RecipientGetRecipientFields = {
  type: RecipientGetRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetRecipientFieldMeta1
    | RecipientGetRecipientFieldMeta2
    | RecipientGetRecipientFieldMeta3
    | RecipientGetRecipientFieldMeta4
    | RecipientGetRecipientFieldMeta7
    | RecipientGetRecipientFieldMeta9
    | RecipientGetRecipientFieldMeta5
    | RecipientGetRecipientFieldMeta8
    | RecipientGetRecipientFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type RecipientGetRecipientResponseBody = {
  role: RecipientGetRecipientRole;
  readStatus: ReadStatus;
  signingStatus: SigningStatus;
  sendStatus: SendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetRecipientFields>;
};

/** @internal */
export const RecipientGetRecipientRequest$inboundSchema: z.ZodType<
  RecipientGetRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipientId: z.number(),
});

/** @internal */
export type RecipientGetRecipientRequest$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientGetRecipientRequest$outboundSchema: z.ZodType<
  RecipientGetRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientRequest
> = z.object({
  recipientId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientRequest$ {
  /** @deprecated use `RecipientGetRecipientRequest$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientGetRecipientRequest$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientGetRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientGetRecipientRequest$Outbound;
}

export function recipientGetRecipientRequestToJSON(
  recipientGetRecipientRequest: RecipientGetRecipientRequest,
): string {
  return JSON.stringify(
    RecipientGetRecipientRequest$outboundSchema.parse(
      recipientGetRecipientRequest,
    ),
  );
}

export function recipientGetRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientRole$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientRole
> = z.nativeEnum(RecipientGetRecipientRole);

/** @internal */
export const RecipientGetRecipientRole$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientRole
> = RecipientGetRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientRole$ {
  /** @deprecated use `RecipientGetRecipientRole$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientRole$inboundSchema;
  /** @deprecated use `RecipientGetRecipientRole$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientRole$outboundSchema;
}

/** @internal */
export const ReadStatus$inboundSchema: z.ZodNativeEnum<typeof ReadStatus> = z
  .nativeEnum(ReadStatus);

/** @internal */
export const ReadStatus$outboundSchema: z.ZodNativeEnum<typeof ReadStatus> =
  ReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReadStatus$ {
  /** @deprecated use `ReadStatus$inboundSchema` instead. */
  export const inboundSchema = ReadStatus$inboundSchema;
  /** @deprecated use `ReadStatus$outboundSchema` instead. */
  export const outboundSchema = ReadStatus$outboundSchema;
}

/** @internal */
export const SigningStatus$inboundSchema: z.ZodNativeEnum<
  typeof SigningStatus
> = z.nativeEnum(SigningStatus);

/** @internal */
export const SigningStatus$outboundSchema: z.ZodNativeEnum<
  typeof SigningStatus
> = SigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SigningStatus$ {
  /** @deprecated use `SigningStatus$inboundSchema` instead. */
  export const inboundSchema = SigningStatus$inboundSchema;
  /** @deprecated use `SigningStatus$outboundSchema` instead. */
  export const outboundSchema = SigningStatus$outboundSchema;
}

/** @internal */
export const SendStatus$inboundSchema: z.ZodNativeEnum<typeof SendStatus> = z
  .nativeEnum(SendStatus);

/** @internal */
export const SendStatus$outboundSchema: z.ZodNativeEnum<typeof SendStatus> =
  SendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendStatus$ {
  /** @deprecated use `SendStatus$inboundSchema` instead. */
  export const inboundSchema = SendStatus$inboundSchema;
  /** @deprecated use `SendStatus$outboundSchema` instead. */
  export const outboundSchema = SendStatus$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientAccessAuth$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientAccessAuth
> = z.nativeEnum(RecipientGetRecipientAccessAuth);

/** @internal */
export const RecipientGetRecipientAccessAuth$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientAccessAuth
> = RecipientGetRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientAccessAuth$ {
  /** @deprecated use `RecipientGetRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientGetRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientActionAuth$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientActionAuth
> = z.nativeEnum(RecipientGetRecipientActionAuth);

/** @internal */
export const RecipientGetRecipientActionAuth$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientActionAuth
> = RecipientGetRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientActionAuth$ {
  /** @deprecated use `RecipientGetRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientGetRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientAuthOptions$inboundSchema: z.ZodType<
  RecipientGetRecipientAuthOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessAuth: z.nullable(RecipientGetRecipientAccessAuth$inboundSchema),
  actionAuth: z.nullable(RecipientGetRecipientActionAuth$inboundSchema),
});

/** @internal */
export type RecipientGetRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientGetRecipientAuthOptions$outboundSchema: z.ZodType<
  RecipientGetRecipientAuthOptions$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientAuthOptions
> = z.object({
  accessAuth: z.nullable(RecipientGetRecipientAccessAuth$outboundSchema),
  actionAuth: z.nullable(RecipientGetRecipientActionAuth$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientAuthOptions$ {
  /** @deprecated use `RecipientGetRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientGetRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientGetRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientGetRecipientAuthOptions$Outbound;
}

export function recipientGetRecipientAuthOptionsToJSON(
  recipientGetRecipientAuthOptions: RecipientGetRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientGetRecipientAuthOptions$outboundSchema.parse(
      recipientGetRecipientAuthOptions,
    ),
  );
}

export function recipientGetRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientAuthOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientAuthOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientType$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientType
> = z.nativeEnum(RecipientGetRecipientType);

/** @internal */
export const RecipientGetRecipientType$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientType
> = RecipientGetRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientType$ {
  /** @deprecated use `RecipientGetRecipientType$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientType$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientGetRecipientFieldMetaRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientGetRecipientFieldMetaRecipientsResponseValues$Outbound = {
  value: string;
};

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientGetRecipientFieldMetaRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientGetRecipientFieldMetaRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponseValues$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientGetRecipientFieldMetaRecipientsResponseValues$Outbound;
}

export function recipientGetRecipientFieldMetaRecipientsResponseValuesToJSON(
  recipientGetRecipientFieldMetaRecipientsResponseValues:
    RecipientGetRecipientFieldMetaRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMetaRecipientsResponseValues$outboundSchema.parse(
      recipientGetRecipientFieldMetaRecipientsResponseValues,
    ),
  );
}

export function recipientGetRecipientFieldMetaRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetRecipientFieldMetaRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetRecipientFieldMetaRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMetaRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMeta9$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetRecipientFieldMetaRecipientsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientGetRecipientFieldMetaRecipientsResponseValues$Outbound>
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta9$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta9$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta9
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetRecipientFieldMetaRecipientsResponseValues$outboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta9$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta9$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta9$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta9$Outbound;
}

export function recipientGetRecipientFieldMeta9ToJSON(
  recipientGetRecipientFieldMeta9: RecipientGetRecipientFieldMeta9,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta9$outboundSchema.parse(
      recipientGetRecipientFieldMeta9,
    ),
  );
}

export function recipientGetRecipientFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > = z.nativeEnum(
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type,
  );

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientGetRecipientFieldMetaRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientGetRecipientFieldMetaRecipientsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientGetRecipientFieldMetaRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientGetRecipientFieldMetaRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsValues$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientGetRecipientFieldMetaRecipientsValues$Outbound;
}

export function recipientGetRecipientFieldMetaRecipientsValuesToJSON(
  recipientGetRecipientFieldMetaRecipientsValues:
    RecipientGetRecipientFieldMetaRecipientsValues,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMetaRecipientsValues$outboundSchema.parse(
      recipientGetRecipientFieldMetaRecipientsValues,
    ),
  );
}

export function recipientGetRecipientFieldMetaRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetRecipientFieldMetaRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetRecipientFieldMetaRecipientsValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetRecipientFieldMetaRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMeta8$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetRecipientFieldMetaRecipientsValues$inboundSchema),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientGetRecipientFieldMetaRecipientsValues$Outbound>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta8$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta8$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta8
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetRecipientFieldMetaRecipientsValues$outboundSchema),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta8$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta8$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta8$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta8$Outbound;
}

export function recipientGetRecipientFieldMeta8ToJSON(
  recipientGetRecipientFieldMeta8: RecipientGetRecipientFieldMeta8,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta8$outboundSchema.parse(
      recipientGetRecipientFieldMeta8,
    ),
  );
}

export function recipientGetRecipientFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMetaValues$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMetaValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientGetRecipientFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetRecipientFieldMetaValues$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMetaValues$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMetaValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaValues$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaValues$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMetaValues$Outbound;
}

export function recipientGetRecipientFieldMetaValuesToJSON(
  recipientGetRecipientFieldMetaValues: RecipientGetRecipientFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMetaValues$outboundSchema.parse(
      recipientGetRecipientFieldMetaValues,
    ),
  );
}

export function recipientGetRecipientFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMetaValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetRecipientFieldMetaValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMeta7$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetRecipientFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetRecipientFieldMetaValues$Outbound> | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta7$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta7$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta7
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetRecipientFieldMetaValues$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta7$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta7$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta7$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta7$Outbound;
}

export function recipientGetRecipientFieldMeta7ToJSON(
  recipientGetRecipientFieldMeta7: RecipientGetRecipientFieldMeta7,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta7$outboundSchema.parse(
      recipientGetRecipientFieldMeta7,
    ),
  );
}

export function recipientGetRecipientFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMeta6$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta6$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta6$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta6
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta6$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta6$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta6$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta6$Outbound;
}

export function recipientGetRecipientFieldMeta6ToJSON(
  recipientGetRecipientFieldMeta6: RecipientGetRecipientFieldMeta6,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta6$outboundSchema.parse(
      recipientGetRecipientFieldMeta6,
    ),
  );
}

export function recipientGetRecipientFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType
  > =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMeta5$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta5$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta5$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta5
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetRecipientFieldMetaRecipientsResponse200ApplicationJSONType$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta5$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta5$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta5$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta5$Outbound;
}

export function recipientGetRecipientFieldMeta5ToJSON(
  recipientGetRecipientFieldMeta5: RecipientGetRecipientFieldMeta5,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta5$outboundSchema.parse(
      recipientGetRecipientFieldMeta5,
    ),
  );
}

export function recipientGetRecipientFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200Type
  > = z.nativeEnum(RecipientGetRecipientFieldMetaRecipientsResponse200Type);

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetRecipientFieldMetaRecipientsResponse200Type
  > = RecipientGetRecipientFieldMetaRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponse200Type$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMeta4$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaRecipientsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta4$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta4$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta4
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaRecipientsResponse200Type$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta4$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta4$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta4$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta4$Outbound;
}

export function recipientGetRecipientFieldMeta4ToJSON(
  recipientGetRecipientFieldMeta4: RecipientGetRecipientFieldMeta4,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta4$outboundSchema.parse(
      recipientGetRecipientFieldMeta4,
    ),
  );
}

export function recipientGetRecipientFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetRecipientFieldMetaRecipientsResponseType> =
    z.nativeEnum(RecipientGetRecipientFieldMetaRecipientsResponseType);

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetRecipientFieldMetaRecipientsResponseType> =
    RecipientGetRecipientFieldMetaRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsResponseType$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMeta3$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaRecipientsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta3$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta3$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta3
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaRecipientsResponseType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta3$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta3$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta3$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta3$Outbound;
}

export function recipientGetRecipientFieldMeta3ToJSON(
  recipientGetRecipientFieldMeta3: RecipientGetRecipientFieldMeta3,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta3$outboundSchema.parse(
      recipientGetRecipientFieldMeta3,
    ),
  );
}

export function recipientGetRecipientFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetRecipientFieldMetaRecipientsType> = z
    .nativeEnum(RecipientGetRecipientFieldMetaRecipientsType);

/** @internal */
export const RecipientGetRecipientFieldMetaRecipientsType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetRecipientFieldMetaRecipientsType> =
    RecipientGetRecipientFieldMetaRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaRecipientsType$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetRecipientFieldMetaRecipientsType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMeta2$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaRecipientsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta2$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta2$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta2
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaRecipientsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta2$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta2$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta2$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta2$Outbound;
}

export function recipientGetRecipientFieldMeta2ToJSON(
  recipientGetRecipientFieldMeta2: RecipientGetRecipientFieldMeta2,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta2$outboundSchema.parse(
      recipientGetRecipientFieldMeta2,
    ),
  );
}

export function recipientGetRecipientFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMetaType$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientFieldMetaType
> = z.nativeEnum(RecipientGetRecipientFieldMetaType);

/** @internal */
export const RecipientGetRecipientFieldMetaType$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetRecipientFieldMetaType
> = RecipientGetRecipientFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMetaType$ {
  /** @deprecated use `RecipientGetRecipientFieldMetaType$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientGetRecipientFieldMeta1$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetRecipientFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetRecipientFieldMeta1$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta1$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta1
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetRecipientFieldMetaType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta1$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta1$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta1$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta1$Outbound;
}

export function recipientGetRecipientFieldMeta1ToJSON(
  recipientGetRecipientFieldMeta1: RecipientGetRecipientFieldMeta1,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta1$outboundSchema.parse(
      recipientGetRecipientFieldMeta1,
    ),
  );
}

export function recipientGetRecipientFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFieldMeta$inboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RecipientGetRecipientFieldMeta1$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta2$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta3$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta4$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta7$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta9$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta5$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta8$inboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta6$inboundSchema),
]);

/** @internal */
export type RecipientGetRecipientFieldMeta$Outbound =
  | RecipientGetRecipientFieldMeta1$Outbound
  | RecipientGetRecipientFieldMeta2$Outbound
  | RecipientGetRecipientFieldMeta3$Outbound
  | RecipientGetRecipientFieldMeta4$Outbound
  | RecipientGetRecipientFieldMeta7$Outbound
  | RecipientGetRecipientFieldMeta9$Outbound
  | RecipientGetRecipientFieldMeta5$Outbound
  | RecipientGetRecipientFieldMeta8$Outbound
  | RecipientGetRecipientFieldMeta6$Outbound;

/** @internal */
export const RecipientGetRecipientFieldMeta$outboundSchema: z.ZodType<
  RecipientGetRecipientFieldMeta$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFieldMeta
> = z.union([
  z.lazy(() => RecipientGetRecipientFieldMeta1$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta2$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta3$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta4$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta7$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta9$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta5$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta8$outboundSchema),
  z.lazy(() => RecipientGetRecipientFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFieldMeta$ {
  /** @deprecated use `RecipientGetRecipientFieldMeta$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFieldMeta$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFieldMeta$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFieldMeta$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFieldMeta$Outbound;
}

export function recipientGetRecipientFieldMetaToJSON(
  recipientGetRecipientFieldMeta: RecipientGetRecipientFieldMeta,
): string {
  return JSON.stringify(
    RecipientGetRecipientFieldMeta$outboundSchema.parse(
      recipientGetRecipientFieldMeta,
    ),
  );
}

export function recipientGetRecipientFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientFields$inboundSchema: z.ZodType<
  RecipientGetRecipientFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientGetRecipientType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetRecipientFieldMeta1$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta2$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta3$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta4$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta7$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta9$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta5$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta8$inboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientGetRecipientFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetRecipientFieldMeta1$Outbound
    | RecipientGetRecipientFieldMeta2$Outbound
    | RecipientGetRecipientFieldMeta3$Outbound
    | RecipientGetRecipientFieldMeta4$Outbound
    | RecipientGetRecipientFieldMeta7$Outbound
    | RecipientGetRecipientFieldMeta9$Outbound
    | RecipientGetRecipientFieldMeta5$Outbound
    | RecipientGetRecipientFieldMeta8$Outbound
    | RecipientGetRecipientFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientGetRecipientFields$outboundSchema: z.ZodType<
  RecipientGetRecipientFields$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientFields
> = z.object({
  type: RecipientGetRecipientType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetRecipientFieldMeta1$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta2$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta3$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta4$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta7$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta9$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta5$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta8$outboundSchema),
      z.lazy(() => RecipientGetRecipientFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientFields$ {
  /** @deprecated use `RecipientGetRecipientFields$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientFields$inboundSchema;
  /** @deprecated use `RecipientGetRecipientFields$outboundSchema` instead. */
  export const outboundSchema = RecipientGetRecipientFields$outboundSchema;
  /** @deprecated use `RecipientGetRecipientFields$Outbound` instead. */
  export type Outbound = RecipientGetRecipientFields$Outbound;
}

export function recipientGetRecipientFieldsToJSON(
  recipientGetRecipientFields: RecipientGetRecipientFields,
): string {
  return JSON.stringify(
    RecipientGetRecipientFields$outboundSchema.parse(
      recipientGetRecipientFields,
    ),
  );
}

export function recipientGetRecipientFieldsFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientFields' from JSON`,
  );
}

/** @internal */
export const RecipientGetRecipientResponseBody$inboundSchema: z.ZodType<
  RecipientGetRecipientResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: RecipientGetRecipientRole$inboundSchema,
  readStatus: ReadStatus$inboundSchema,
  signingStatus: SigningStatus$inboundSchema,
  sendStatus: SendStatus$inboundSchema,
  id: z.number().int(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(z.lazy(() => RecipientGetRecipientFields$inboundSchema)),
});

/** @internal */
export type RecipientGetRecipientResponseBody$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetRecipientFields$Outbound>;
};

/** @internal */
export const RecipientGetRecipientResponseBody$outboundSchema: z.ZodType<
  RecipientGetRecipientResponseBody$Outbound,
  z.ZodTypeDef,
  RecipientGetRecipientResponseBody
> = z.object({
  role: RecipientGetRecipientRole$outboundSchema,
  readStatus: ReadStatus$outboundSchema,
  signingStatus: SigningStatus$outboundSchema,
  sendStatus: SendStatus$outboundSchema,
  id: z.number().int(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(z.lazy(() => RecipientGetRecipientFields$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetRecipientResponseBody$ {
  /** @deprecated use `RecipientGetRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema = RecipientGetRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientGetRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientGetRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientGetRecipientResponseBody$Outbound;
}

export function recipientGetRecipientResponseBodyToJSON(
  recipientGetRecipientResponseBody: RecipientGetRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientGetRecipientResponseBody$outboundSchema.parse(
      recipientGetRecipientResponseBody,
    ),
  );
}

export function recipientGetRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetRecipientResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecipientGetRecipientResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetRecipientResponseBody' from JSON`,
  );
}
