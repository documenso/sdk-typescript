/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientDeleteTemplateRecipientRequestBody = {
  recipientId: number;
};

/** @internal */
export const RecipientDeleteTemplateRecipientRequestBody$inboundSchema:
  z.ZodType<
    RecipientDeleteTemplateRecipientRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipientId: z.number(),
  });

/** @internal */
export type RecipientDeleteTemplateRecipientRequestBody$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientDeleteTemplateRecipientRequestBody$outboundSchema:
  z.ZodType<
    RecipientDeleteTemplateRecipientRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientDeleteTemplateRecipientRequestBody
  > = z.object({
    recipientId: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientDeleteTemplateRecipientRequestBody$ {
  /** @deprecated use `RecipientDeleteTemplateRecipientRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientDeleteTemplateRecipientRequestBody$inboundSchema;
  /** @deprecated use `RecipientDeleteTemplateRecipientRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientDeleteTemplateRecipientRequestBody$outboundSchema;
  /** @deprecated use `RecipientDeleteTemplateRecipientRequestBody$Outbound` instead. */
  export type Outbound = RecipientDeleteTemplateRecipientRequestBody$Outbound;
}

export function recipientDeleteTemplateRecipientRequestBodyToJSON(
  recipientDeleteTemplateRecipientRequestBody:
    RecipientDeleteTemplateRecipientRequestBody,
): string {
  return JSON.stringify(
    RecipientDeleteTemplateRecipientRequestBody$outboundSchema.parse(
      recipientDeleteTemplateRecipientRequestBody,
    ),
  );
}

export function recipientDeleteTemplateRecipientRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientDeleteTemplateRecipientRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientDeleteTemplateRecipientRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientDeleteTemplateRecipientRequestBody' from JSON`,
  );
}
