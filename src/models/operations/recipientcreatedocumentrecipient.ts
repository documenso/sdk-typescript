/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientCreateDocumentRecipientRoleRequest = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientCreateDocumentRecipientRoleRequest = ClosedEnum<
  typeof RecipientCreateDocumentRecipientRoleRequest
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientAccessAuthRequest = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientAccessAuthRequest = ClosedEnum<
  typeof RecipientCreateDocumentRecipientAccessAuthRequest
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientActionAuthRequest = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientActionAuthRequest = ClosedEnum<
  typeof RecipientCreateDocumentRecipientActionAuthRequest
>;

export type RecipientCreateDocumentRecipientRecipient = {
  email: string;
  name: string;
  role: RecipientCreateDocumentRecipientRoleRequest;
  signingOrder?: number | undefined;
  accessAuth?:
    | Array<RecipientCreateDocumentRecipientAccessAuthRequest>
    | undefined;
  actionAuth?:
    | Array<RecipientCreateDocumentRecipientActionAuthRequest>
    | undefined;
};

export type RecipientCreateDocumentRecipientRequest = {
  documentId: number;
  recipient: RecipientCreateDocumentRecipientRecipient;
};

export const RecipientCreateDocumentRecipientRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientCreateDocumentRecipientRoleResponse = ClosedEnum<
  typeof RecipientCreateDocumentRecipientRoleResponse
>;

export const RecipientCreateDocumentRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientCreateDocumentRecipientReadStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientReadStatus
>;

export const RecipientCreateDocumentRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientCreateDocumentRecipientSigningStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientSigningStatus
>;

export const RecipientCreateDocumentRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientCreateDocumentRecipientSendStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientAccessAuthResponse = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientAccessAuthResponse = ClosedEnum<
  typeof RecipientCreateDocumentRecipientAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientActionAuthResponse = ClosedEnum<
  typeof RecipientCreateDocumentRecipientActionAuthResponse
>;

export type RecipientCreateDocumentRecipientAuthOptions = {
  accessAuth: Array<RecipientCreateDocumentRecipientAccessAuthResponse>;
  actionAuth: Array<RecipientCreateDocumentRecipientActionAuthResponse>;
};

/**
 * Successful response
 */
export type RecipientCreateDocumentRecipientResponse = {
  envelopeId: string;
  role: RecipientCreateDocumentRecipientRoleResponse;
  readStatus: RecipientCreateDocumentRecipientReadStatus;
  signingStatus: RecipientCreateDocumentRecipientSigningStatus;
  sendStatus: RecipientCreateDocumentRecipientSendStatus;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientCreateDocumentRecipientRoleRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientRoleRequest> = z
    .nativeEnum(RecipientCreateDocumentRecipientRoleRequest);

/** @internal */
export const RecipientCreateDocumentRecipientRoleRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientRoleRequest> =
    RecipientCreateDocumentRecipientRoleRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientRoleRequest$ {
  /** @deprecated use `RecipientCreateDocumentRecipientRoleRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientRoleRequest$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRoleRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientRoleRequest$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientAccessAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientAccessAuthRequest> = z
    .nativeEnum(RecipientCreateDocumentRecipientAccessAuthRequest);

/** @internal */
export const RecipientCreateDocumentRecipientAccessAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientAccessAuthRequest> =
    RecipientCreateDocumentRecipientAccessAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientAccessAuthRequest$ {
  /** @deprecated use `RecipientCreateDocumentRecipientAccessAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientAccessAuthRequest$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAccessAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientAccessAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientActionAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientActionAuthRequest> = z
    .nativeEnum(RecipientCreateDocumentRecipientActionAuthRequest);

/** @internal */
export const RecipientCreateDocumentRecipientActionAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientActionAuthRequest> =
    RecipientCreateDocumentRecipientActionAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientActionAuthRequest$ {
  /** @deprecated use `RecipientCreateDocumentRecipientActionAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientActionAuthRequest$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientActionAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientActionAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientRecipient$inboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientRecipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  name: z.string(),
  role: RecipientCreateDocumentRecipientRoleRequest$inboundSchema,
  signingOrder: z.number().optional(),
  accessAuth: z.array(
    RecipientCreateDocumentRecipientAccessAuthRequest$inboundSchema,
  ).optional(),
  actionAuth: z.array(
    RecipientCreateDocumentRecipientActionAuthRequest$inboundSchema,
  ).optional(),
});

/** @internal */
export type RecipientCreateDocumentRecipientRecipient$Outbound = {
  email: string;
  name: string;
  role: string;
  signingOrder?: number | undefined;
  accessAuth?: Array<string> | undefined;
  actionAuth?: Array<string> | undefined;
};

/** @internal */
export const RecipientCreateDocumentRecipientRecipient$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientRecipient$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientRecipient
  > = z.object({
    email: z.string(),
    name: z.string(),
    role: RecipientCreateDocumentRecipientRoleRequest$outboundSchema,
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientCreateDocumentRecipientAccessAuthRequest$outboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientCreateDocumentRecipientActionAuthRequest$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientRecipient$ {
  /** @deprecated use `RecipientCreateDocumentRecipientRecipient$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientRecipient$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRecipient$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientRecipient$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRecipient$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientRecipient$Outbound;
}

export function recipientCreateDocumentRecipientRecipientToJSON(
  recipientCreateDocumentRecipientRecipient:
    RecipientCreateDocumentRecipientRecipient,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientRecipient$outboundSchema.parse(
      recipientCreateDocumentRecipientRecipient,
    ),
  );
}

export function recipientCreateDocumentRecipientRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientRecipient' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientRequest$inboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  recipient: z.lazy(() =>
    RecipientCreateDocumentRecipientRecipient$inboundSchema
  ),
});

/** @internal */
export type RecipientCreateDocumentRecipientRequest$Outbound = {
  documentId: number;
  recipient: RecipientCreateDocumentRecipientRecipient$Outbound;
};

/** @internal */
export const RecipientCreateDocumentRecipientRequest$outboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientCreateDocumentRecipientRequest
> = z.object({
  documentId: z.number(),
  recipient: z.lazy(() =>
    RecipientCreateDocumentRecipientRecipient$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientRequest$ {
  /** @deprecated use `RecipientCreateDocumentRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientRequest$Outbound;
}

export function recipientCreateDocumentRecipientRequestToJSON(
  recipientCreateDocumentRecipientRequest:
    RecipientCreateDocumentRecipientRequest,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientRequest$outboundSchema.parse(
      recipientCreateDocumentRecipientRequest,
    ),
  );
}

export function recipientCreateDocumentRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientRoleResponse> = z
    .nativeEnum(RecipientCreateDocumentRecipientRoleResponse);

/** @internal */
export const RecipientCreateDocumentRecipientRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientRoleResponse> =
    RecipientCreateDocumentRecipientRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientRoleResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientRoleResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientReadStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientReadStatus);

/** @internal */
export const RecipientCreateDocumentRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientReadStatus> =
    RecipientCreateDocumentRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientReadStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSigningStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientSigningStatus);

/** @internal */
export const RecipientCreateDocumentRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSigningStatus> =
    RecipientCreateDocumentRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientSigningStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSendStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientSendStatus);

/** @internal */
export const RecipientCreateDocumentRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSendStatus> =
    RecipientCreateDocumentRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientSendStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientAccessAuthResponse> = z
    .nativeEnum(RecipientCreateDocumentRecipientAccessAuthResponse);

/** @internal */
export const RecipientCreateDocumentRecipientAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientAccessAuthResponse> =
    RecipientCreateDocumentRecipientAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientAccessAuthResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientActionAuthResponse> = z
    .nativeEnum(RecipientCreateDocumentRecipientActionAuthResponse);

/** @internal */
export const RecipientCreateDocumentRecipientActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientActionAuthResponse> =
    RecipientCreateDocumentRecipientActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientActionAuthResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.array(
      RecipientCreateDocumentRecipientAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.array(
      RecipientCreateDocumentRecipientActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientCreateDocumentRecipientAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const RecipientCreateDocumentRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientAuthOptions
  > = z.object({
    accessAuth: z.array(
      RecipientCreateDocumentRecipientAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.array(
      RecipientCreateDocumentRecipientActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientAuthOptions$ {
  /** @deprecated use `RecipientCreateDocumentRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientAuthOptions$Outbound;
}

export function recipientCreateDocumentRecipientAuthOptionsToJSON(
  recipientCreateDocumentRecipientAuthOptions:
    RecipientCreateDocumentRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientAuthOptions$outboundSchema.parse(
      recipientCreateDocumentRecipientAuthOptions,
    ),
  );
}

export function recipientCreateDocumentRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientResponse$inboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  role: RecipientCreateDocumentRecipientRoleResponse$inboundSchema,
  readStatus: RecipientCreateDocumentRecipientReadStatus$inboundSchema,
  signingStatus: RecipientCreateDocumentRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientCreateDocumentRecipientSendStatus$inboundSchema,
  id: z.number(),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientCreateDocumentRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type RecipientCreateDocumentRecipientResponse$Outbound = {
  envelopeId: string;
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientCreateDocumentRecipientResponse$outboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientResponse$Outbound,
  z.ZodTypeDef,
  RecipientCreateDocumentRecipientResponse
> = z.object({
  envelopeId: z.string(),
  role: RecipientCreateDocumentRecipientRoleResponse$outboundSchema,
  readStatus: RecipientCreateDocumentRecipientReadStatus$outboundSchema,
  signingStatus: RecipientCreateDocumentRecipientSigningStatus$outboundSchema,
  sendStatus: RecipientCreateDocumentRecipientSendStatus$outboundSchema,
  id: z.number(),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientCreateDocumentRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientResponse$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientResponse$Outbound;
}

export function recipientCreateDocumentRecipientResponseToJSON(
  recipientCreateDocumentRecipientResponse:
    RecipientCreateDocumentRecipientResponse,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientResponse$outboundSchema.parse(
      recipientCreateDocumentRecipientResponse,
    ),
  );
}

export function recipientCreateDocumentRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientResponse' from JSON`,
  );
}
