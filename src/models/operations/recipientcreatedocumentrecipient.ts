/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientCreateDocumentRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientCreateDocumentRecipientRole = ClosedEnum<
  typeof RecipientCreateDocumentRecipientRole
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientAccessAuth = ClosedEnum<
  typeof RecipientCreateDocumentRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientActionAuth = ClosedEnum<
  typeof RecipientCreateDocumentRecipientActionAuth
>;

export type Recipient = {
  email: string;
  name: string;
  role: RecipientCreateDocumentRecipientRole;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: RecipientCreateDocumentRecipientAccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: RecipientCreateDocumentRecipientActionAuth | null | undefined;
};

export type RecipientCreateDocumentRecipientRequestBody = {
  documentId: number;
  recipient: Recipient;
};

export const RecipientCreateDocumentRecipientDocumentsRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientCreateDocumentRecipientDocumentsRecipientsRole =
  ClosedEnum<typeof RecipientCreateDocumentRecipientDocumentsRecipientsRole>;

export const RecipientCreateDocumentRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientCreateDocumentRecipientReadStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientReadStatus
>;

export const RecipientCreateDocumentRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientCreateDocumentRecipientSigningStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientSigningStatus
>;

export const RecipientCreateDocumentRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientCreateDocumentRecipientSendStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth =
  ClosedEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth
  >;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth =
  ClosedEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth
  >;

export type RecipientCreateDocumentRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth:
    | RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth
    | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth:
    | RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth
    | null;
};

/**
 * Successful response
 */
export type RecipientCreateDocumentRecipientResponseBody = {
  role: RecipientCreateDocumentRecipientDocumentsRecipientsRole;
  readStatus: RecipientCreateDocumentRecipientReadStatus;
  signingStatus: RecipientCreateDocumentRecipientSigningStatus;
  sendStatus: RecipientCreateDocumentRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const RecipientCreateDocumentRecipientRole$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientRole> = z.nativeEnum(
    RecipientCreateDocumentRecipientRole,
  );

/** @internal */
export const RecipientCreateDocumentRecipientRole$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientRole> =
    RecipientCreateDocumentRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientRole$ {
  /** @deprecated use `RecipientCreateDocumentRecipientRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientRole$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientRole$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientAccessAuth> = z
    .nativeEnum(RecipientCreateDocumentRecipientAccessAuth);

/** @internal */
export const RecipientCreateDocumentRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientAccessAuth> =
    RecipientCreateDocumentRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientAccessAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientActionAuth> = z
    .nativeEnum(RecipientCreateDocumentRecipientActionAuth);

/** @internal */
export const RecipientCreateDocumentRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientActionAuth> =
    RecipientCreateDocumentRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientActionAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientActionAuth$outboundSchema;
}

/** @internal */
export const Recipient$inboundSchema: z.ZodType<
  Recipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  name: z.string(),
  role: RecipientCreateDocumentRecipientRole$inboundSchema,
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(
    RecipientCreateDocumentRecipientAccessAuth$inboundSchema,
  ).optional(),
  actionAuth: z.nullable(
    RecipientCreateDocumentRecipientActionAuth$inboundSchema,
  ).optional(),
});

/** @internal */
export type Recipient$Outbound = {
  email: string;
  name: string;
  role: string;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const Recipient$outboundSchema: z.ZodType<
  Recipient$Outbound,
  z.ZodTypeDef,
  Recipient
> = z.object({
  email: z.string(),
  name: z.string(),
  role: RecipientCreateDocumentRecipientRole$outboundSchema,
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(
    RecipientCreateDocumentRecipientAccessAuth$outboundSchema,
  ).optional(),
  actionAuth: z.nullable(
    RecipientCreateDocumentRecipientActionAuth$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Recipient$ {
  /** @deprecated use `Recipient$inboundSchema` instead. */
  export const inboundSchema = Recipient$inboundSchema;
  /** @deprecated use `Recipient$outboundSchema` instead. */
  export const outboundSchema = Recipient$outboundSchema;
  /** @deprecated use `Recipient$Outbound` instead. */
  export type Outbound = Recipient$Outbound;
}

export function recipientToJSON(recipient: Recipient): string {
  return JSON.stringify(Recipient$outboundSchema.parse(recipient));
}

export function recipientFromJSON(
  jsonString: string,
): SafeParseResult<Recipient, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Recipient$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Recipient' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientRequestBody$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    documentId: z.number(),
    recipient: z.lazy(() => Recipient$inboundSchema),
  });

/** @internal */
export type RecipientCreateDocumentRecipientRequestBody$Outbound = {
  documentId: number;
  recipient: Recipient$Outbound;
};

/** @internal */
export const RecipientCreateDocumentRecipientRequestBody$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientRequestBody
  > = z.object({
    documentId: z.number(),
    recipient: z.lazy(() => Recipient$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientRequestBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientRequestBody$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientRequestBody$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientRequestBody$Outbound;
}

export function recipientCreateDocumentRecipientRequestBodyToJSON(
  recipientCreateDocumentRecipientRequestBody:
    RecipientCreateDocumentRecipientRequestBody,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientRequestBody$outboundSchema.parse(
      recipientCreateDocumentRecipientRequestBody,
    ),
  );
}

export function recipientCreateDocumentRecipientRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientDocumentsRecipientsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsRole
  > = z.nativeEnum(RecipientCreateDocumentRecipientDocumentsRecipientsRole);

/** @internal */
export const RecipientCreateDocumentRecipientDocumentsRecipientsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsRole
  > = RecipientCreateDocumentRecipientDocumentsRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientDocumentsRecipientsRole$ {
  /** @deprecated use `RecipientCreateDocumentRecipientDocumentsRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientDocumentsRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientDocumentsRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientDocumentsRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientReadStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientReadStatus);

/** @internal */
export const RecipientCreateDocumentRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientReadStatus> =
    RecipientCreateDocumentRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientReadStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSigningStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientSigningStatus);

/** @internal */
export const RecipientCreateDocumentRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSigningStatus> =
    RecipientCreateDocumentRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientSigningStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSendStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientSendStatus);

/** @internal */
export const RecipientCreateDocumentRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientSendStatus> =
    RecipientCreateDocumentRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientSendStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth
  > = z.nativeEnum(
    RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth,
  );

/** @internal */
export const RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth
  > =
    RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth
  > = z.nativeEnum(
    RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth,
  );

/** @internal */
export const RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth
  > =
    RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type RecipientCreateDocumentRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientCreateDocumentRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientAuthOptions$ {
  /** @deprecated use `RecipientCreateDocumentRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientAuthOptions$Outbound;
}

export function recipientCreateDocumentRecipientAuthOptionsToJSON(
  recipientCreateDocumentRecipientAuthOptions:
    RecipientCreateDocumentRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientAuthOptions$outboundSchema.parse(
      recipientCreateDocumentRecipientAuthOptions,
    ),
  );
}

export function recipientCreateDocumentRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientResponseBody$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: RecipientCreateDocumentRecipientDocumentsRecipientsRole$inboundSchema,
    readStatus: RecipientCreateDocumentRecipientReadStatus$inboundSchema,
    signingStatus: RecipientCreateDocumentRecipientSigningStatus$inboundSchema,
    sendStatus: RecipientCreateDocumentRecipientSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientCreateDocumentRecipientAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/** @internal */
export type RecipientCreateDocumentRecipientResponseBody$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const RecipientCreateDocumentRecipientResponseBody$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientResponseBody
  > = z.object({
    role:
      RecipientCreateDocumentRecipientDocumentsRecipientsRole$outboundSchema,
    readStatus: RecipientCreateDocumentRecipientReadStatus$outboundSchema,
    signingStatus: RecipientCreateDocumentRecipientSigningStatus$outboundSchema,
    sendStatus: RecipientCreateDocumentRecipientSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientCreateDocumentRecipientAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientResponseBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientResponseBody$Outbound;
}

export function recipientCreateDocumentRecipientResponseBodyToJSON(
  recipientCreateDocumentRecipientResponseBody:
    RecipientCreateDocumentRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientResponseBody$outboundSchema.parse(
      recipientCreateDocumentRecipientResponseBody,
    ),
  );
}

export function recipientCreateDocumentRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientResponseBody' from JSON`,
  );
}
