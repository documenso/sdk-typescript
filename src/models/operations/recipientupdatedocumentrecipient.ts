/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateDocumentRecipientRoleRequest = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateDocumentRecipientRoleRequest = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientRoleRequest
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientAccessAuthRequest = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientAccessAuthRequest = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientAccessAuthRequest
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientActionAuthRequest = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientActionAuthRequest = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientActionAuthRequest
>;

export type RecipientUpdateDocumentRecipientRecipient = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateDocumentRecipientRoleRequest | undefined;
  signingOrder?: number | undefined;
  accessAuth?:
    | Array<RecipientUpdateDocumentRecipientAccessAuthRequest>
    | undefined;
  actionAuth?:
    | Array<RecipientUpdateDocumentRecipientActionAuthRequest>
    | undefined;
};

export type RecipientUpdateDocumentRecipientRequest = {
  documentId: number;
  recipient: RecipientUpdateDocumentRecipientRecipient;
};

export const RecipientUpdateDocumentRecipientRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateDocumentRecipientRoleResponse = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientRoleResponse
>;

export const RecipientUpdateDocumentRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateDocumentRecipientReadStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientReadStatus
>;

export const RecipientUpdateDocumentRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateDocumentRecipientSigningStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientSigningStatus
>;

export const RecipientUpdateDocumentRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateDocumentRecipientSendStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientAccessAuthResponse = {
  Account: "ACCOUNT",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientAccessAuthResponse = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientActionAuthResponse = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientActionAuthResponse
>;

export type RecipientUpdateDocumentRecipientAuthOptions = {
  accessAuth: Array<RecipientUpdateDocumentRecipientAccessAuthResponse>;
  actionAuth: Array<RecipientUpdateDocumentRecipientActionAuthResponse>;
};

export const RecipientUpdateDocumentRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateDocumentRecipientType = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientType
>;

export const RecipientUpdateDocumentRecipientTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type RecipientUpdateDocumentRecipientTypeDropdown = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeDropdown
>;

export type RecipientUpdateDocumentRecipientValue3 = {
  value: string;
};

export type RecipientUpdateDocumentRecipientFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeDropdown;
  values?: Array<RecipientUpdateDocumentRecipientValue3> | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateDocumentRecipientTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type RecipientUpdateDocumentRecipientTypeCheckbox = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeCheckbox
>;

export type RecipientUpdateDocumentRecipientValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export const RecipientUpdateDocumentRecipientDirection = {
  Vertical: "vertical",
  Horizontal: "horizontal",
} as const;
export type RecipientUpdateDocumentRecipientDirection = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientDirection
>;

export type RecipientUpdateDocumentRecipientFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeCheckbox;
  values?: Array<RecipientUpdateDocumentRecipientValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction?: RecipientUpdateDocumentRecipientDirection | undefined;
};

export const RecipientUpdateDocumentRecipientTypeRadio = {
  Radio: "radio",
} as const;
export type RecipientUpdateDocumentRecipientTypeRadio = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeRadio
>;

export type RecipientUpdateDocumentRecipientValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateDocumentRecipientFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeRadio;
  values?: Array<RecipientUpdateDocumentRecipientValue1> | undefined;
};

export const RecipientUpdateDocumentRecipientTypeNumber = {
  Number: "number",
} as const;
export type RecipientUpdateDocumentRecipientTypeNumber = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeNumber
>;

export const RecipientUpdateDocumentRecipientTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientTextAlign6 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTextAlign6
>;

export type RecipientUpdateDocumentRecipientFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeNumber;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientTextAlign6 | undefined;
};

export const RecipientUpdateDocumentRecipientTypeText = {
  Text: "text",
} as const;
export type RecipientUpdateDocumentRecipientTypeText = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeText
>;

export const RecipientUpdateDocumentRecipientTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientTextAlign5 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTextAlign5
>;

export type RecipientUpdateDocumentRecipientFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientTextAlign5 | undefined;
};

export const RecipientUpdateDocumentRecipientTypeDate = {
  Date: "date",
} as const;
export type RecipientUpdateDocumentRecipientTypeDate = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeDate
>;

export const RecipientUpdateDocumentRecipientTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientTextAlign4 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTextAlign4
>;

export type RecipientUpdateDocumentRecipientFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeDate;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientTextAlign4 | undefined;
};

export const RecipientUpdateDocumentRecipientTypeEmail = {
  Email: "email",
} as const;
export type RecipientUpdateDocumentRecipientTypeEmail = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeEmail
>;

export const RecipientUpdateDocumentRecipientTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientTextAlign3 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTextAlign3
>;

export type RecipientUpdateDocumentRecipientFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeEmail;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientTextAlign3 | undefined;
};

export const RecipientUpdateDocumentRecipientTypeName = {
  Name: "name",
} as const;
export type RecipientUpdateDocumentRecipientTypeName = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeName
>;

export const RecipientUpdateDocumentRecipientTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientTextAlign2 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTextAlign2
>;

export type RecipientUpdateDocumentRecipientFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeName;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientTextAlign2 | undefined;
};

export const RecipientUpdateDocumentRecipientTypeInitials = {
  Initials: "initials",
} as const;
export type RecipientUpdateDocumentRecipientTypeInitials = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTypeInitials
>;

export const RecipientUpdateDocumentRecipientTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateDocumentRecipientTextAlign1 = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientTextAlign1
>;

export type RecipientUpdateDocumentRecipientFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientTypeInitials;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateDocumentRecipientTextAlign1 | undefined;
};

export type RecipientUpdateDocumentRecipientFieldMetaUnion =
  | RecipientUpdateDocumentRecipientFieldMetaInitials
  | RecipientUpdateDocumentRecipientFieldMetaName
  | RecipientUpdateDocumentRecipientFieldMetaEmail
  | RecipientUpdateDocumentRecipientFieldMetaDate
  | RecipientUpdateDocumentRecipientFieldMetaText
  | RecipientUpdateDocumentRecipientFieldMetaNumber
  | RecipientUpdateDocumentRecipientFieldMetaRadio
  | RecipientUpdateDocumentRecipientFieldMetaCheckbox
  | RecipientUpdateDocumentRecipientFieldMetaDropdown;

export type RecipientUpdateDocumentRecipientField = {
  envelopeId: string;
  envelopeItemId: string;
  type: RecipientUpdateDocumentRecipientType;
  id: number;
  secondaryId: string;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientFieldMetaInitials
    | RecipientUpdateDocumentRecipientFieldMetaName
    | RecipientUpdateDocumentRecipientFieldMetaEmail
    | RecipientUpdateDocumentRecipientFieldMetaDate
    | RecipientUpdateDocumentRecipientFieldMetaText
    | RecipientUpdateDocumentRecipientFieldMetaNumber
    | RecipientUpdateDocumentRecipientFieldMetaRadio
    | RecipientUpdateDocumentRecipientFieldMetaCheckbox
    | RecipientUpdateDocumentRecipientFieldMetaDropdown
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/**
 * Successful response
 */
export type RecipientUpdateDocumentRecipientResponse = {
  envelopeId: string;
  role: RecipientUpdateDocumentRecipientRoleResponse;
  readStatus: RecipientUpdateDocumentRecipientReadStatus;
  signingStatus: RecipientUpdateDocumentRecipientSigningStatus;
  sendStatus: RecipientUpdateDocumentRecipientSendStatus;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientField>;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientRoleRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientRoleRequest> = z
    .nativeEnum(RecipientUpdateDocumentRecipientRoleRequest);

/** @internal */
export const RecipientUpdateDocumentRecipientRoleRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientRoleRequest> =
    RecipientUpdateDocumentRecipientRoleRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRoleRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRoleRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRoleRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRoleRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRoleRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientAccessAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientAccessAuthRequest> = z
    .nativeEnum(RecipientUpdateDocumentRecipientAccessAuthRequest);

/** @internal */
export const RecipientUpdateDocumentRecipientAccessAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientAccessAuthRequest> =
    RecipientUpdateDocumentRecipientAccessAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientAccessAuthRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientAccessAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientAccessAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAccessAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientAccessAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientActionAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientActionAuthRequest> = z
    .nativeEnum(RecipientUpdateDocumentRecipientActionAuthRequest);

/** @internal */
export const RecipientUpdateDocumentRecipientActionAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientActionAuthRequest> =
    RecipientUpdateDocumentRecipientActionAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientActionAuthRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientActionAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientActionAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientActionAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientActionAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientRecipient$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientRecipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  email: z.string().optional(),
  name: z.string().optional(),
  role: RecipientUpdateDocumentRecipientRoleRequest$inboundSchema.optional(),
  signingOrder: z.number().optional(),
  accessAuth: z.array(
    RecipientUpdateDocumentRecipientAccessAuthRequest$inboundSchema,
  ).optional(),
  actionAuth: z.array(
    RecipientUpdateDocumentRecipientActionAuthRequest$inboundSchema,
  ).optional(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientRecipient$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: Array<string> | undefined;
  actionAuth?: Array<string> | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientRecipient$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientRecipient$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientRecipient
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateDocumentRecipientRoleRequest$outboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientAccessAuthRequest$outboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientActionAuthRequest$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRecipient$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRecipient$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRecipient$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRecipient$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRecipient$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRecipient$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientRecipient$Outbound;
}

export function recipientUpdateDocumentRecipientRecipientToJSON(
  recipientUpdateDocumentRecipientRecipient:
    RecipientUpdateDocumentRecipientRecipient,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientRecipient$outboundSchema.parse(
      recipientUpdateDocumentRecipientRecipient,
    ),
  );
}

export function recipientUpdateDocumentRecipientRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientRecipient' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientRequest$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  recipient: z.lazy(() =>
    RecipientUpdateDocumentRecipientRecipient$inboundSchema
  ),
});

/** @internal */
export type RecipientUpdateDocumentRecipientRequest$Outbound = {
  documentId: number;
  recipient: RecipientUpdateDocumentRecipientRecipient$Outbound;
};

/** @internal */
export const RecipientUpdateDocumentRecipientRequest$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientRequest
> = z.object({
  documentId: z.number(),
  recipient: z.lazy(() =>
    RecipientUpdateDocumentRecipientRecipient$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRequest$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientRequest$Outbound;
}

export function recipientUpdateDocumentRecipientRequestToJSON(
  recipientUpdateDocumentRecipientRequest:
    RecipientUpdateDocumentRecipientRequest,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientRequest$outboundSchema.parse(
      recipientUpdateDocumentRecipientRequest,
    ),
  );
}

export function recipientUpdateDocumentRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientRoleResponse> = z
    .nativeEnum(RecipientUpdateDocumentRecipientRoleResponse);

/** @internal */
export const RecipientUpdateDocumentRecipientRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientRoleResponse> =
    RecipientUpdateDocumentRecipientRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRoleResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRoleResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientReadStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientReadStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientReadStatus> =
    RecipientUpdateDocumentRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientReadStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSigningStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientSigningStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSigningStatus> =
    RecipientUpdateDocumentRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientSigningStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSendStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientSendStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSendStatus> =
    RecipientUpdateDocumentRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientSendStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientAccessAuthResponse> = z
    .nativeEnum(RecipientUpdateDocumentRecipientAccessAuthResponse);

/** @internal */
export const RecipientUpdateDocumentRecipientAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientAccessAuthResponse> =
    RecipientUpdateDocumentRecipientAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientAccessAuthResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientActionAuthResponse> = z
    .nativeEnum(RecipientUpdateDocumentRecipientActionAuthResponse);

/** @internal */
export const RecipientUpdateDocumentRecipientActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientActionAuthResponse> =
    RecipientUpdateDocumentRecipientActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientActionAuthResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientAuthOptions
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateDocumentRecipientAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateDocumentRecipientActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientAuthOptions$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientAuthOptions$Outbound;
}

export function recipientUpdateDocumentRecipientAuthOptionsToJSON(
  recipientUpdateDocumentRecipientAuthOptions:
    RecipientUpdateDocumentRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientAuthOptions$outboundSchema.parse(
      recipientUpdateDocumentRecipientAuthOptions,
    ),
  );
}

export function recipientUpdateDocumentRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientType> = z.nativeEnum(
    RecipientUpdateDocumentRecipientType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientType> =
    RecipientUpdateDocumentRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeDropdown> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeDropdown);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeDropdown> =
    RecipientUpdateDocumentRecipientTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeDropdown$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeDropdown$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientValue3$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientValue3$Outbound = {
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientValue3$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientValue3$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientValue3$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientValue3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientValue3$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientValue3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientValue3$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientValue3$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientValue3$Outbound;
}

export function recipientUpdateDocumentRecipientValue3ToJSON(
  recipientUpdateDocumentRecipientValue3:
    RecipientUpdateDocumentRecipientValue3,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientValue3$outboundSchema.parse(
      recipientUpdateDocumentRecipientValue3,
    ),
  );
}

export function recipientUpdateDocumentRecipientValue3FromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateDocumentRecipientValue3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientValue3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientValue3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDropdown$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateDocumentRecipientValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDropdown$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDropdown$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDropdown$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaDropdown$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaDropdownToJSON(
  recipientUpdateDocumentRecipientFieldMetaDropdown:
    RecipientUpdateDocumentRecipientFieldMetaDropdown,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaDropdown$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaDropdown,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeCheckbox> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeCheckbox);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeCheckbox> =
    RecipientUpdateDocumentRecipientTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeCheckbox$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeCheckbox$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientValue2$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientValue2$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientValue2$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientValue2$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientValue2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientValue2$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientValue2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientValue2$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientValue2$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientValue2$Outbound;
}

export function recipientUpdateDocumentRecipientValue2ToJSON(
  recipientUpdateDocumentRecipientValue2:
    RecipientUpdateDocumentRecipientValue2,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientValue2$outboundSchema.parse(
      recipientUpdateDocumentRecipientValue2,
    ),
  );
}

export function recipientUpdateDocumentRecipientValue2FromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateDocumentRecipientValue2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientValue2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientValue2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientDirection$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientDirection> = z
    .nativeEnum(RecipientUpdateDocumentRecipientDirection);

/** @internal */
export const RecipientUpdateDocumentRecipientDirection$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientDirection> =
    RecipientUpdateDocumentRecipientDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientDirection$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientDirection$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientDirection$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientDirection$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientDirection$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
    direction: RecipientUpdateDocumentRecipientDirection$inboundSchema.default(
      "vertical",
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateDocumentRecipientValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
    direction: RecipientUpdateDocumentRecipientDirection$outboundSchema.default(
      "vertical",
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaCheckbox$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaCheckbox$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaCheckboxToJSON(
  recipientUpdateDocumentRecipientFieldMetaCheckbox:
    RecipientUpdateDocumentRecipientFieldMetaCheckbox,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaCheckbox$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaCheckbox,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeRadio> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeRadio);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeRadio> =
    RecipientUpdateDocumentRecipientTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeRadio$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeRadio$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientValue1$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientValue1$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientValue1$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientValue1$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientValue1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientValue1$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientValue1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientValue1$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientValue1$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientValue1$Outbound;
}

export function recipientUpdateDocumentRecipientValue1ToJSON(
  recipientUpdateDocumentRecipientValue1:
    RecipientUpdateDocumentRecipientValue1,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientValue1$outboundSchema.parse(
      recipientUpdateDocumentRecipientValue1,
    ),
  );
}

export function recipientUpdateDocumentRecipientValue1FromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateDocumentRecipientValue1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientValue1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientValue1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaRadio$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateDocumentRecipientValue1$Outbound> | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaRadio$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaRadio$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaRadio$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaRadio$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaRadio$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaRadioToJSON(
  recipientUpdateDocumentRecipientFieldMetaRadio:
    RecipientUpdateDocumentRecipientFieldMetaRadio,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaRadio$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaRadio,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeNumber> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeNumber);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeNumber> =
    RecipientUpdateDocumentRecipientTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeNumber$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeNumber$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign6> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTextAlign6);

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign6> =
    RecipientUpdateDocumentRecipientTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTextAlign6$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTextAlign6$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTextAlign6$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaNumber$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeNumber$inboundSchema,
    numberFormat: z.nullable(z.string()).optional(),
    value: z.string().optional(),
    minValue: z.nullable(z.number()).optional(),
    maxValue: z.nullable(z.number()).optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign6$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaNumber$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeNumber$outboundSchema,
    numberFormat: z.nullable(z.string()).optional(),
    value: z.string().optional(),
    minValue: z.nullable(z.number()).optional(),
    maxValue: z.nullable(z.number()).optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaNumber$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaNumber$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaNumber$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaNumber$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaNumberToJSON(
  recipientUpdateDocumentRecipientFieldMetaNumber:
    RecipientUpdateDocumentRecipientFieldMetaNumber,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaNumber$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaNumber,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeText$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeText> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeText);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeText$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeText> =
    RecipientUpdateDocumentRecipientTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeText$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeText$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeText$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign5> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTextAlign5);

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign5> =
    RecipientUpdateDocumentRecipientTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTextAlign5$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTextAlign5$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTextAlign5$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaText$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaText,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign5$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaText$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaText$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaText$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaText$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaText$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaText$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMetaText$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaTextToJSON(
  recipientUpdateDocumentRecipientFieldMetaText:
    RecipientUpdateDocumentRecipientFieldMetaText,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaText$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaText,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaText' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeDate> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeDate);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeDate> =
    RecipientUpdateDocumentRecipientTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeDate$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeDate$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeDate$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign4> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTextAlign4);

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign4> =
    RecipientUpdateDocumentRecipientTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTextAlign4$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTextAlign4$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTextAlign4$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDate$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign4$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDate$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDate$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDate$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDate$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDate$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDate$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMetaDate$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaDateToJSON(
  recipientUpdateDocumentRecipientFieldMetaDate:
    RecipientUpdateDocumentRecipientFieldMetaDate,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaDate$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaDate,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeEmail> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeEmail);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeEmail> =
    RecipientUpdateDocumentRecipientTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeEmail$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeEmail$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign3> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTextAlign3);

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign3> =
    RecipientUpdateDocumentRecipientTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTextAlign3$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTextAlign3$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTextAlign3$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaEmail$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign3$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaEmail$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaEmail$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaEmail$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaEmail$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaEmail$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaEmailToJSON(
  recipientUpdateDocumentRecipientFieldMetaEmail:
    RecipientUpdateDocumentRecipientFieldMetaEmail,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaEmail$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaEmail,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeName$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeName> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeName);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeName$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeName> =
    RecipientUpdateDocumentRecipientTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeName$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeName$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeName$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign2> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTextAlign2);

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign2> =
    RecipientUpdateDocumentRecipientTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTextAlign2$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTextAlign2$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTextAlign2$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaName$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaName,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign2$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaName$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaName$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaName$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaName$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaName$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaName$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMetaName$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaNameToJSON(
  recipientUpdateDocumentRecipientFieldMetaName:
    RecipientUpdateDocumentRecipientFieldMetaName,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaName$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaName,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaName' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeInitials> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTypeInitials);

/** @internal */
export const RecipientUpdateDocumentRecipientTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTypeInitials> =
    RecipientUpdateDocumentRecipientTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTypeInitials$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTypeInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTypeInitials$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign1> = z
    .nativeEnum(RecipientUpdateDocumentRecipientTextAlign1);

/** @internal */
export const RecipientUpdateDocumentRecipientTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientTextAlign1> =
    RecipientUpdateDocumentRecipientTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientTextAlign1$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientTextAlign1$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientTextAlign1$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaInitials$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign1$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaInitials$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateDocumentRecipientTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaInitials$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaInitials$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaInitials$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaInitialsToJSON(
  recipientUpdateDocumentRecipientFieldMetaInitials:
    RecipientUpdateDocumentRecipientFieldMetaInitials,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaInitials$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaInitials,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaUnion$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaInitials$inboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaName$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaEmail$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaDate$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaText$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaNumber$inboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaRadio$inboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaCheckbox$inboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaDropdown$inboundSchema
    ),
  ]);

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaUnion$Outbound =
  | RecipientUpdateDocumentRecipientFieldMetaInitials$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaName$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaEmail$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaDate$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaText$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaNumber$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaRadio$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaCheckbox$Outbound
  | RecipientUpdateDocumentRecipientFieldMetaDropdown$Outbound;

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaUnion$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaUnion
  > = z.union([
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaInitials$outboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaName$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaEmail$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaDate$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaText$outboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaNumber$outboundSchema
    ),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaRadio$outboundSchema),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaCheckbox$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateDocumentRecipientFieldMetaDropdown$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaUnion$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaUnion$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaUnion$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaUnion$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaUnion$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaUnionToJSON(
  recipientUpdateDocumentRecipientFieldMetaUnion:
    RecipientUpdateDocumentRecipientFieldMetaUnion,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaUnion$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaUnion,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientField$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientField,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: RecipientUpdateDocumentRecipientType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaInitials$inboundSchema
      ),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaName$inboundSchema),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaEmail$inboundSchema
      ),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaDate$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMetaText$inboundSchema),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaNumber$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaRadio$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaDropdown$inboundSchema
      ),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientField$Outbound = {
  envelopeId: string;
  envelopeItemId: string;
  type: string;
  id: number;
  secondaryId: string;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientFieldMetaInitials$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaName$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaEmail$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaDate$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaText$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaNumber$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaRadio$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaCheckbox$Outbound
    | RecipientUpdateDocumentRecipientFieldMetaDropdown$Outbound
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientField$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientField$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientField
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: RecipientUpdateDocumentRecipientType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaName$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaEmail$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaDate$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaText$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaNumber$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaRadio$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaDropdown$outboundSchema
      ),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientField$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientField$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientField$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientField$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientField$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientField$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientField$Outbound;
}

export function recipientUpdateDocumentRecipientFieldToJSON(
  recipientUpdateDocumentRecipientField: RecipientUpdateDocumentRecipientField,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientField$outboundSchema.parse(
      recipientUpdateDocumentRecipientField,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldFromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateDocumentRecipientField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientField' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientResponse$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  role: RecipientUpdateDocumentRecipientRoleResponse$inboundSchema,
  readStatus: RecipientUpdateDocumentRecipientReadStatus$inboundSchema,
  signingStatus: RecipientUpdateDocumentRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientUpdateDocumentRecipientSendStatus$inboundSchema,
  id: z.number(),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientUpdateDocumentRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientUpdateDocumentRecipientField$inboundSchema),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientResponse$Outbound = {
  envelopeId: string;
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientField$Outbound>;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientResponse$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientResponse$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientResponse
> = z.object({
  envelopeId: z.string(),
  role: RecipientUpdateDocumentRecipientRoleResponse$outboundSchema,
  readStatus: RecipientUpdateDocumentRecipientReadStatus$outboundSchema,
  signingStatus: RecipientUpdateDocumentRecipientSigningStatus$outboundSchema,
  sendStatus: RecipientUpdateDocumentRecipientSendStatus$outboundSchema,
  id: z.number(),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientUpdateDocumentRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientUpdateDocumentRecipientField$outboundSchema),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientResponse$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientResponse$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientResponse$Outbound;
}

export function recipientUpdateDocumentRecipientResponseToJSON(
  recipientUpdateDocumentRecipientResponse:
    RecipientUpdateDocumentRecipientResponse,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientResponse$outboundSchema.parse(
      recipientUpdateDocumentRecipientResponse,
    ),
  );
}

export function recipientUpdateDocumentRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientResponse' from JSON`,
  );
}
