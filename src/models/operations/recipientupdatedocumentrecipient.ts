/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateDocumentRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateDocumentRecipientRole = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientRole
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientAccessAuth = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientActionAuth = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientActionAuth
>;

export type RecipientUpdateDocumentRecipientRecipient = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateDocumentRecipientRole | undefined;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: RecipientUpdateDocumentRecipientAccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: RecipientUpdateDocumentRecipientActionAuth | null | undefined;
};

export type RecipientUpdateDocumentRecipientRequestBody = {
  documentId: number;
  recipient: RecipientUpdateDocumentRecipientRecipient;
};

export const RecipientUpdateDocumentRecipientDocumentsRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateDocumentRecipientDocumentsRecipientsRole =
  ClosedEnum<typeof RecipientUpdateDocumentRecipientDocumentsRecipientsRole>;

export const RecipientUpdateDocumentRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateDocumentRecipientReadStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientReadStatus
>;

export const RecipientUpdateDocumentRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateDocumentRecipientSigningStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientSigningStatus
>;

export const RecipientUpdateDocumentRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateDocumentRecipientSendStatus = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth
  >;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth
  >;

export type RecipientUpdateDocumentRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth:
    | RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth
    | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth:
    | RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth
    | null;
};

export const RecipientUpdateDocumentRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateDocumentRecipientType = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientType
>;

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues =
  {
    value: string;
  };

export type RecipientUpdateDocumentRecipientFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type;
  values?:
    | Array<
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues
    >
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  >;

export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues =
  {
    id: number;
    checked: boolean;
    value: string;
  };

export type RecipientUpdateDocumentRecipientFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type;
  values?:
    | Array<RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Radio: "radio",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type RecipientUpdateDocumentRecipientFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateDocumentRecipientFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType;
  values?: Array<RecipientUpdateDocumentRecipientFieldMetaValues> | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientUpdateDocumentRecipientFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  >;

export type RecipientUpdateDocumentRecipientFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type =
  {
    Date: "date",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type
  >;

export type RecipientUpdateDocumentRecipientFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType =
  {
    Email: "email",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType
  >;

export type RecipientUpdateDocumentRecipientFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType =
  {
    Name: "name",
  } as const;
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType =
  ClosedEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType
  >;

export type RecipientUpdateDocumentRecipientFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientUpdateDocumentRecipientFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientUpdateDocumentRecipientFieldMetaType = ClosedEnum<
  typeof RecipientUpdateDocumentRecipientFieldMetaType
>;

export type RecipientUpdateDocumentRecipientFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateDocumentRecipientFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientUpdateDocumentRecipientFieldMeta =
  | RecipientUpdateDocumentRecipientFieldMeta1
  | RecipientUpdateDocumentRecipientFieldMeta2
  | RecipientUpdateDocumentRecipientFieldMeta3
  | RecipientUpdateDocumentRecipientFieldMeta4
  | RecipientUpdateDocumentRecipientFieldMeta7
  | RecipientUpdateDocumentRecipientFieldMeta9
  | RecipientUpdateDocumentRecipientFieldMeta5
  | RecipientUpdateDocumentRecipientFieldMeta8
  | RecipientUpdateDocumentRecipientFieldMeta6;

export type RecipientUpdateDocumentRecipientFields = {
  type: RecipientUpdateDocumentRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientFieldMeta1
    | RecipientUpdateDocumentRecipientFieldMeta2
    | RecipientUpdateDocumentRecipientFieldMeta3
    | RecipientUpdateDocumentRecipientFieldMeta4
    | RecipientUpdateDocumentRecipientFieldMeta7
    | RecipientUpdateDocumentRecipientFieldMeta9
    | RecipientUpdateDocumentRecipientFieldMeta5
    | RecipientUpdateDocumentRecipientFieldMeta8
    | RecipientUpdateDocumentRecipientFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type RecipientUpdateDocumentRecipientResponseBody = {
  role: RecipientUpdateDocumentRecipientDocumentsRecipientsRole;
  readStatus: RecipientUpdateDocumentRecipientReadStatus;
  signingStatus: RecipientUpdateDocumentRecipientSigningStatus;
  sendStatus: RecipientUpdateDocumentRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientFields>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientRole$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientRole> = z.nativeEnum(
    RecipientUpdateDocumentRecipientRole,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientRole$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientRole> =
    RecipientUpdateDocumentRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRole$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRole$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientAccessAuth> = z
    .nativeEnum(RecipientUpdateDocumentRecipientAccessAuth);

/** @internal */
export const RecipientUpdateDocumentRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientAccessAuth> =
    RecipientUpdateDocumentRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientAccessAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientActionAuth> = z
    .nativeEnum(RecipientUpdateDocumentRecipientActionAuth);

/** @internal */
export const RecipientUpdateDocumentRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientActionAuth> =
    RecipientUpdateDocumentRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientActionAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientRecipient$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientRecipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  email: z.string().optional(),
  name: z.string().optional(),
  role: RecipientUpdateDocumentRecipientRole$inboundSchema.optional(),
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(
    RecipientUpdateDocumentRecipientAccessAuth$inboundSchema,
  ).optional(),
  actionAuth: z.nullable(
    RecipientUpdateDocumentRecipientActionAuth$inboundSchema,
  ).optional(),
});

/** @internal */
export type RecipientUpdateDocumentRecipientRecipient$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientRecipient$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientRecipient$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientRecipient
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateDocumentRecipientRole$outboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientAccessAuth$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientActionAuth$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRecipient$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRecipient$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRecipient$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRecipient$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRecipient$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRecipient$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientRecipient$Outbound;
}

export function recipientUpdateDocumentRecipientRecipientToJSON(
  recipientUpdateDocumentRecipientRecipient:
    RecipientUpdateDocumentRecipientRecipient,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientRecipient$outboundSchema.parse(
      recipientUpdateDocumentRecipientRecipient,
    ),
  );
}

export function recipientUpdateDocumentRecipientRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientRecipient' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientRequestBody$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    documentId: z.number(),
    recipient: z.lazy(() =>
      RecipientUpdateDocumentRecipientRecipient$inboundSchema
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientRequestBody$Outbound = {
  documentId: number;
  recipient: RecipientUpdateDocumentRecipientRecipient$Outbound;
};

/** @internal */
export const RecipientUpdateDocumentRecipientRequestBody$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientRequestBody
  > = z.object({
    documentId: z.number(),
    recipient: z.lazy(() =>
      RecipientUpdateDocumentRecipientRecipient$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientRequestBody$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientRequestBody$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientRequestBody$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientRequestBody$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientRequestBody$Outbound;
}

export function recipientUpdateDocumentRecipientRequestBodyToJSON(
  recipientUpdateDocumentRecipientRequestBody:
    RecipientUpdateDocumentRecipientRequestBody,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientRequestBody$outboundSchema.parse(
      recipientUpdateDocumentRecipientRequestBody,
    ),
  );
}

export function recipientUpdateDocumentRecipientRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsRole
  > = z.nativeEnum(RecipientUpdateDocumentRecipientDocumentsRecipientsRole);

/** @internal */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsRole
  > = RecipientUpdateDocumentRecipientDocumentsRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientDocumentsRecipientsRole$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientDocumentsRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientDocumentsRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientDocumentsRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientDocumentsRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientReadStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientReadStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientReadStatus> =
    RecipientUpdateDocumentRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientReadStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSigningStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientSigningStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSigningStatus> =
    RecipientUpdateDocumentRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientSigningStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSendStatus> = z
    .nativeEnum(RecipientUpdateDocumentRecipientSendStatus);

/** @internal */
export const RecipientUpdateDocumentRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientSendStatus> =
    RecipientUpdateDocumentRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientSendStatus$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth
  > =
    RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth
  > =
    RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientUpdateDocumentRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientAuthOptions$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientAuthOptions$Outbound;
}

export function recipientUpdateDocumentRecipientAuthOptionsToJSON(
  recipientUpdateDocumentRecipientAuthOptions:
    RecipientUpdateDocumentRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientAuthOptions$outboundSchema.parse(
      recipientUpdateDocumentRecipientAuthOptions,
    ),
  );
}

export function recipientUpdateDocumentRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientType> = z.nativeEnum(
    RecipientUpdateDocumentRecipientType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientType> =
    RecipientUpdateDocumentRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValuesToJSON(
  recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema
      .parse(
        recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
      ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta9$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta9, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
      values: z.array(
        z.lazy(() =>
          RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema
        ),
      ).optional(),
      defaultValue: z.string().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta9$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta9$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta9
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta9$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta9$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta9ToJSON(
  recipientUpdateDocumentRecipientFieldMeta9:
    RecipientUpdateDocumentRecipientFieldMeta9,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta9$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta9,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValuesToJSON(
  recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues:
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema
      .parse(
        recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues,
      ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta8$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta8, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema,
      values: z.array(
        z.lazy(() =>
          RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema
        ),
      ).optional(),
      validationRule: z.string().optional(),
      validationLength: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta8$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta8$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta8
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta8$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta8$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta8ToJSON(
  recipientUpdateDocumentRecipientFieldMeta8:
    RecipientUpdateDocumentRecipientFieldMeta8,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta8$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta8,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaValues$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaValues$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMetaValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaValues$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateDocumentRecipientFieldMetaValues$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaValuesToJSON(
  recipientUpdateDocumentRecipientFieldMetaValues:
    RecipientUpdateDocumentRecipientFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMetaValues$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMetaValues,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta7$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta7, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
      values: z.array(
        z.lazy(() =>
          RecipientUpdateDocumentRecipientFieldMetaValues$inboundSchema
        ),
      ).optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientUpdateDocumentRecipientFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta7$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta7$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta7
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateDocumentRecipientFieldMetaValues$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta7$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta7$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta7ToJSON(
  recipientUpdateDocumentRecipientFieldMeta7:
    RecipientUpdateDocumentRecipientFieldMeta7,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta7$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta7,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta6$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta6, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
      numberFormat: z.string().optional(),
      value: z.string().optional(),
      minValue: z.number().optional(),
      maxValue: z.number().optional(),
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta6$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta6$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta6
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta6$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta6$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta6ToJSON(
  recipientUpdateDocumentRecipientFieldMeta6:
    RecipientUpdateDocumentRecipientFieldMeta6,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta6$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta6,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta5$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta5, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema,
      text: z.string().optional(),
      characterLimit: z.number().optional(),
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta5$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta5$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta5
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta5$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta5$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta5ToJSON(
  recipientUpdateDocumentRecipientFieldMeta5:
    RecipientUpdateDocumentRecipientFieldMeta5,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta5$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta5,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta4$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta4, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta4$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta4$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta4
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta4$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta4$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta4ToJSON(
  recipientUpdateDocumentRecipientFieldMeta4:
    RecipientUpdateDocumentRecipientFieldMeta4,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta4$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta4,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta3$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta3, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta3$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta3$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta3
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta3$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta3$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta3ToJSON(
  recipientUpdateDocumentRecipientFieldMeta3:
    RecipientUpdateDocumentRecipientFieldMeta3,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta3$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta3,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType
  > = z.nativeEnum(
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType,
  );

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType
  > =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta2$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta2, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type:
        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta2$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta2$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta2
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta2$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta2$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta2ToJSON(
  recipientUpdateDocumentRecipientFieldMeta2:
    RecipientUpdateDocumentRecipientFieldMeta2,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta2$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta2,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientFieldMetaType> = z
    .nativeEnum(RecipientUpdateDocumentRecipientFieldMetaType);

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateDocumentRecipientFieldMetaType> =
    RecipientUpdateDocumentRecipientFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMetaType$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta1$inboundSchema:
  z.ZodType<RecipientUpdateDocumentRecipientFieldMeta1, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientUpdateDocumentRecipientFieldMetaType$inboundSchema,
      fontSize: z.number().optional(),
    });

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta1$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta1$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta1
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateDocumentRecipientFieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta1$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta1$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMeta1ToJSON(
  recipientUpdateDocumentRecipientFieldMeta1:
    RecipientUpdateDocumentRecipientFieldMeta1,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta1$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta1,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta1$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta2$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta3$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta4$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta7$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta9$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta5$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta8$inboundSchema),
  z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta6$inboundSchema),
]);

/** @internal */
export type RecipientUpdateDocumentRecipientFieldMeta$Outbound =
  | RecipientUpdateDocumentRecipientFieldMeta1$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta2$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta3$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta4$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta7$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta9$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta5$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta8$Outbound
  | RecipientUpdateDocumentRecipientFieldMeta6$Outbound;

/** @internal */
export const RecipientUpdateDocumentRecipientFieldMeta$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientFieldMeta$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientFieldMeta
  > = z.union([
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta1$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta2$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta3$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta4$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta7$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta9$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta5$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta8$outboundSchema),
    z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta6$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFieldMeta$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFieldMeta$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFieldMeta$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFieldMeta$Outbound;
}

export function recipientUpdateDocumentRecipientFieldMetaToJSON(
  recipientUpdateDocumentRecipientFieldMeta:
    RecipientUpdateDocumentRecipientFieldMeta,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFieldMeta$outboundSchema.parse(
      recipientUpdateDocumentRecipientFieldMeta,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientFields$inboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientUpdateDocumentRecipientType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta1$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta2$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta3$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta4$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta7$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta9$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta5$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta8$inboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientUpdateDocumentRecipientFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateDocumentRecipientFieldMeta1$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta2$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta3$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta4$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta7$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta9$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta5$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta8$Outbound
    | RecipientUpdateDocumentRecipientFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientUpdateDocumentRecipientFields$outboundSchema: z.ZodType<
  RecipientUpdateDocumentRecipientFields$Outbound,
  z.ZodTypeDef,
  RecipientUpdateDocumentRecipientFields
> = z.object({
  type: RecipientUpdateDocumentRecipientType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta1$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta2$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta3$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta4$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta7$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta9$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta5$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta8$outboundSchema),
      z.lazy(() => RecipientUpdateDocumentRecipientFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientFields$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientFields$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientFields$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFields$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientFields$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientFields$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientFields$Outbound;
}

export function recipientUpdateDocumentRecipientFieldsToJSON(
  recipientUpdateDocumentRecipientFields:
    RecipientUpdateDocumentRecipientFields,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientFields$outboundSchema.parse(
      recipientUpdateDocumentRecipientFields,
    ),
  );
}

export function recipientUpdateDocumentRecipientFieldsFromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateDocumentRecipientFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateDocumentRecipientFields' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateDocumentRecipientResponseBody$inboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: RecipientUpdateDocumentRecipientDocumentsRecipientsRole$inboundSchema,
    readStatus: RecipientUpdateDocumentRecipientReadStatus$inboundSchema,
    signingStatus: RecipientUpdateDocumentRecipientSigningStatus$inboundSchema,
    sendStatus: RecipientUpdateDocumentRecipientSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateDocumentRecipientAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientFields$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateDocumentRecipientResponseBody$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateDocumentRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateDocumentRecipientFields$Outbound>;
};

/** @internal */
export const RecipientUpdateDocumentRecipientResponseBody$outboundSchema:
  z.ZodType<
    RecipientUpdateDocumentRecipientResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateDocumentRecipientResponseBody
  > = z.object({
    role:
      RecipientUpdateDocumentRecipientDocumentsRecipientsRole$outboundSchema,
    readStatus: RecipientUpdateDocumentRecipientReadStatus$outboundSchema,
    signingStatus: RecipientUpdateDocumentRecipientSigningStatus$outboundSchema,
    sendStatus: RecipientUpdateDocumentRecipientSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateDocumentRecipientAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateDocumentRecipientFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateDocumentRecipientResponseBody$ {
  /** @deprecated use `RecipientUpdateDocumentRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateDocumentRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateDocumentRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientUpdateDocumentRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientUpdateDocumentRecipientResponseBody$Outbound;
}

export function recipientUpdateDocumentRecipientResponseBodyToJSON(
  recipientUpdateDocumentRecipientResponseBody:
    RecipientUpdateDocumentRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientUpdateDocumentRecipientResponseBody$outboundSchema.parse(
      recipientUpdateDocumentRecipientResponseBody,
    ),
  );
}

export function recipientUpdateDocumentRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateDocumentRecipientResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateDocumentRecipientResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateDocumentRecipientResponseBody' from JSON`,
  );
}
