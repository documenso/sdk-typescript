/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientCreateTemplateRecipientRoleRequestBody = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientCreateTemplateRecipientRoleRequestBody = ClosedEnum<
  typeof RecipientCreateTemplateRecipientRoleRequestBody
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateTemplateRecipientAccessAuthRequestBody = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateTemplateRecipientAccessAuthRequestBody = ClosedEnum<
  typeof RecipientCreateTemplateRecipientAccessAuthRequestBody
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateTemplateRecipientActionAuthRequestBody = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateTemplateRecipientActionAuthRequestBody = ClosedEnum<
  typeof RecipientCreateTemplateRecipientActionAuthRequestBody
>;

export type RecipientCreateTemplateRecipientRecipient = {
  email: string;
  name: string;
  role: RecipientCreateTemplateRecipientRoleRequestBody;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?:
    | RecipientCreateTemplateRecipientAccessAuthRequestBody
    | null
    | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?:
    | RecipientCreateTemplateRecipientActionAuthRequestBody
    | null
    | undefined;
};

export type RecipientCreateTemplateRecipientRequest = {
  templateId: number;
  recipient: RecipientCreateTemplateRecipientRecipient;
};

export const RecipientCreateTemplateRecipientRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientCreateTemplateRecipientRoleResponse = ClosedEnum<
  typeof RecipientCreateTemplateRecipientRoleResponse
>;

export const RecipientCreateTemplateRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientCreateTemplateRecipientReadStatus = ClosedEnum<
  typeof RecipientCreateTemplateRecipientReadStatus
>;

export const RecipientCreateTemplateRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientCreateTemplateRecipientSigningStatus = ClosedEnum<
  typeof RecipientCreateTemplateRecipientSigningStatus
>;

export const RecipientCreateTemplateRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientCreateTemplateRecipientSendStatus = ClosedEnum<
  typeof RecipientCreateTemplateRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateTemplateRecipientAccessAuthResponse = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateTemplateRecipientAccessAuthResponse = ClosedEnum<
  typeof RecipientCreateTemplateRecipientAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateTemplateRecipientActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateTemplateRecipientActionAuthResponse = ClosedEnum<
  typeof RecipientCreateTemplateRecipientActionAuthResponse
>;

export type RecipientCreateTemplateRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: RecipientCreateTemplateRecipientAccessAuthResponse | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: RecipientCreateTemplateRecipientActionAuthResponse | null;
};

/**
 * Successful response
 */
export type RecipientCreateTemplateRecipientResponse = {
  role: RecipientCreateTemplateRecipientRoleResponse;
  readStatus: RecipientCreateTemplateRecipientReadStatus;
  signingStatus: RecipientCreateTemplateRecipientSigningStatus;
  sendStatus: RecipientCreateTemplateRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateTemplateRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const RecipientCreateTemplateRecipientRoleRequestBody$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientRoleRequestBody> = z
    .nativeEnum(RecipientCreateTemplateRecipientRoleRequestBody);

/** @internal */
export const RecipientCreateTemplateRecipientRoleRequestBody$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientRoleRequestBody> =
    RecipientCreateTemplateRecipientRoleRequestBody$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientRoleRequestBody$ {
  /** @deprecated use `RecipientCreateTemplateRecipientRoleRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientRoleRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientRoleRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientRoleRequestBody$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientAccessAuthRequestBody$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateTemplateRecipientAccessAuthRequestBody
  > = z.nativeEnum(RecipientCreateTemplateRecipientAccessAuthRequestBody);

/** @internal */
export const RecipientCreateTemplateRecipientAccessAuthRequestBody$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateTemplateRecipientAccessAuthRequestBody
  > = RecipientCreateTemplateRecipientAccessAuthRequestBody$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientAccessAuthRequestBody$ {
  /** @deprecated use `RecipientCreateTemplateRecipientAccessAuthRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientAccessAuthRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientAccessAuthRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientAccessAuthRequestBody$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientActionAuthRequestBody$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateTemplateRecipientActionAuthRequestBody
  > = z.nativeEnum(RecipientCreateTemplateRecipientActionAuthRequestBody);

/** @internal */
export const RecipientCreateTemplateRecipientActionAuthRequestBody$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateTemplateRecipientActionAuthRequestBody
  > = RecipientCreateTemplateRecipientActionAuthRequestBody$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientActionAuthRequestBody$ {
  /** @deprecated use `RecipientCreateTemplateRecipientActionAuthRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientActionAuthRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientActionAuthRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientActionAuthRequestBody$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientRecipient$inboundSchema: z.ZodType<
  RecipientCreateTemplateRecipientRecipient,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  name: z.string(),
  role: RecipientCreateTemplateRecipientRoleRequestBody$inboundSchema,
  signingOrder: z.number().optional(),
  accessAuth: z.nullable(
    RecipientCreateTemplateRecipientAccessAuthRequestBody$inboundSchema,
  ).optional(),
  actionAuth: z.nullable(
    RecipientCreateTemplateRecipientActionAuthRequestBody$inboundSchema,
  ).optional(),
});

/** @internal */
export type RecipientCreateTemplateRecipientRecipient$Outbound = {
  email: string;
  name: string;
  role: string;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientCreateTemplateRecipientRecipient$outboundSchema:
  z.ZodType<
    RecipientCreateTemplateRecipientRecipient$Outbound,
    z.ZodTypeDef,
    RecipientCreateTemplateRecipientRecipient
  > = z.object({
    email: z.string(),
    name: z.string(),
    role: RecipientCreateTemplateRecipientRoleRequestBody$outboundSchema,
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientCreateTemplateRecipientAccessAuthRequestBody$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientCreateTemplateRecipientActionAuthRequestBody$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientRecipient$ {
  /** @deprecated use `RecipientCreateTemplateRecipientRecipient$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientRecipient$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientRecipient$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientRecipient$outboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientRecipient$Outbound` instead. */
  export type Outbound = RecipientCreateTemplateRecipientRecipient$Outbound;
}

export function recipientCreateTemplateRecipientRecipientToJSON(
  recipientCreateTemplateRecipientRecipient:
    RecipientCreateTemplateRecipientRecipient,
): string {
  return JSON.stringify(
    RecipientCreateTemplateRecipientRecipient$outboundSchema.parse(
      recipientCreateTemplateRecipientRecipient,
    ),
  );
}

export function recipientCreateTemplateRecipientRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateTemplateRecipientRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateTemplateRecipientRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateTemplateRecipientRecipient' from JSON`,
  );
}

/** @internal */
export const RecipientCreateTemplateRecipientRequest$inboundSchema: z.ZodType<
  RecipientCreateTemplateRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  templateId: z.number(),
  recipient: z.lazy(() =>
    RecipientCreateTemplateRecipientRecipient$inboundSchema
  ),
});

/** @internal */
export type RecipientCreateTemplateRecipientRequest$Outbound = {
  templateId: number;
  recipient: RecipientCreateTemplateRecipientRecipient$Outbound;
};

/** @internal */
export const RecipientCreateTemplateRecipientRequest$outboundSchema: z.ZodType<
  RecipientCreateTemplateRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientCreateTemplateRecipientRequest
> = z.object({
  templateId: z.number(),
  recipient: z.lazy(() =>
    RecipientCreateTemplateRecipientRecipient$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientRequest$ {
  /** @deprecated use `RecipientCreateTemplateRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientCreateTemplateRecipientRequest$Outbound;
}

export function recipientCreateTemplateRecipientRequestToJSON(
  recipientCreateTemplateRecipientRequest:
    RecipientCreateTemplateRecipientRequest,
): string {
  return JSON.stringify(
    RecipientCreateTemplateRecipientRequest$outboundSchema.parse(
      recipientCreateTemplateRecipientRequest,
    ),
  );
}

export function recipientCreateTemplateRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateTemplateRecipientRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateTemplateRecipientRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateTemplateRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientCreateTemplateRecipientRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientRoleResponse> = z
    .nativeEnum(RecipientCreateTemplateRecipientRoleResponse);

/** @internal */
export const RecipientCreateTemplateRecipientRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientRoleResponse> =
    RecipientCreateTemplateRecipientRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientRoleResponse$ {
  /** @deprecated use `RecipientCreateTemplateRecipientRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientRoleResponse$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientReadStatus> = z
    .nativeEnum(RecipientCreateTemplateRecipientReadStatus);

/** @internal */
export const RecipientCreateTemplateRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientReadStatus> =
    RecipientCreateTemplateRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientReadStatus$ {
  /** @deprecated use `RecipientCreateTemplateRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientSigningStatus> = z
    .nativeEnum(RecipientCreateTemplateRecipientSigningStatus);

/** @internal */
export const RecipientCreateTemplateRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientSigningStatus> =
    RecipientCreateTemplateRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientSigningStatus$ {
  /** @deprecated use `RecipientCreateTemplateRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientSendStatus> = z
    .nativeEnum(RecipientCreateTemplateRecipientSendStatus);

/** @internal */
export const RecipientCreateTemplateRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientSendStatus> =
    RecipientCreateTemplateRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientSendStatus$ {
  /** @deprecated use `RecipientCreateTemplateRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientAccessAuthResponse> = z
    .nativeEnum(RecipientCreateTemplateRecipientAccessAuthResponse);

/** @internal */
export const RecipientCreateTemplateRecipientAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientAccessAuthResponse> =
    RecipientCreateTemplateRecipientAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientAccessAuthResponse$ {
  /** @deprecated use `RecipientCreateTemplateRecipientAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientActionAuthResponse> = z
    .nativeEnum(RecipientCreateTemplateRecipientActionAuthResponse);

/** @internal */
export const RecipientCreateTemplateRecipientActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateTemplateRecipientActionAuthResponse> =
    RecipientCreateTemplateRecipientActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientActionAuthResponse$ {
  /** @deprecated use `RecipientCreateTemplateRecipientActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateTemplateRecipientAuthOptions$inboundSchema:
  z.ZodType<
    RecipientCreateTemplateRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateTemplateRecipientAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateTemplateRecipientActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientCreateTemplateRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientCreateTemplateRecipientAuthOptions$outboundSchema:
  z.ZodType<
    RecipientCreateTemplateRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientCreateTemplateRecipientAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateTemplateRecipientAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateTemplateRecipientActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientAuthOptions$ {
  /** @deprecated use `RecipientCreateTemplateRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientCreateTemplateRecipientAuthOptions$Outbound;
}

export function recipientCreateTemplateRecipientAuthOptionsToJSON(
  recipientCreateTemplateRecipientAuthOptions:
    RecipientCreateTemplateRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientCreateTemplateRecipientAuthOptions$outboundSchema.parse(
      recipientCreateTemplateRecipientAuthOptions,
    ),
  );
}

export function recipientCreateTemplateRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateTemplateRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateTemplateRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateTemplateRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientCreateTemplateRecipientResponse$inboundSchema: z.ZodType<
  RecipientCreateTemplateRecipientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: RecipientCreateTemplateRecipientRoleResponse$inboundSchema,
  readStatus: RecipientCreateTemplateRecipientReadStatus$inboundSchema,
  signingStatus: RecipientCreateTemplateRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientCreateTemplateRecipientSendStatus$inboundSchema,
  id: z.number(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientCreateTemplateRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
});

/** @internal */
export type RecipientCreateTemplateRecipientResponse$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateTemplateRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const RecipientCreateTemplateRecipientResponse$outboundSchema: z.ZodType<
  RecipientCreateTemplateRecipientResponse$Outbound,
  z.ZodTypeDef,
  RecipientCreateTemplateRecipientResponse
> = z.object({
  role: RecipientCreateTemplateRecipientRoleResponse$outboundSchema,
  readStatus: RecipientCreateTemplateRecipientReadStatus$outboundSchema,
  signingStatus: RecipientCreateTemplateRecipientSigningStatus$outboundSchema,
  sendStatus: RecipientCreateTemplateRecipientSendStatus$outboundSchema,
  id: z.number(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientCreateTemplateRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateTemplateRecipientResponse$ {
  /** @deprecated use `RecipientCreateTemplateRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateTemplateRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateTemplateRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientCreateTemplateRecipientResponse$Outbound` instead. */
  export type Outbound = RecipientCreateTemplateRecipientResponse$Outbound;
}

export function recipientCreateTemplateRecipientResponseToJSON(
  recipientCreateTemplateRecipientResponse:
    RecipientCreateTemplateRecipientResponse,
): string {
  return JSON.stringify(
    RecipientCreateTemplateRecipientResponse$outboundSchema.parse(
      recipientCreateTemplateRecipientResponse,
    ),
  );
}

export function recipientCreateTemplateRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateTemplateRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateTemplateRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateTemplateRecipientResponse' from JSON`,
  );
}
