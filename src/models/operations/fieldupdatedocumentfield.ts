/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const FieldUpdateDocumentFieldTypeDropdownRequest1 = {
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateDocumentFieldTypeDropdownRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeDropdownRequest1
>;

export const FieldUpdateDocumentFieldTypeDropdownRequest2 = {
  Dropdown: "dropdown",
} as const;
export type FieldUpdateDocumentFieldTypeDropdownRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeDropdownRequest2
>;

export type FieldUpdateDocumentFieldValueDropdown = {
  value: string;
};

export type FieldUpdateDocumentFieldFieldMetaDropdownRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeDropdownRequest2;
  values?: Array<FieldUpdateDocumentFieldValueDropdown> | undefined;
  defaultValue?: string | undefined;
};

export type FieldUpdateDocumentFieldFieldDropdown = {
  type: FieldUpdateDocumentFieldTypeDropdownRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaDropdownRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeCheckboxRequest1 = {
  Checkbox: "CHECKBOX",
} as const;
export type FieldUpdateDocumentFieldTypeCheckboxRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeCheckboxRequest1
>;

export const FieldUpdateDocumentFieldTypeCheckboxRequest2 = {
  Checkbox: "checkbox",
} as const;
export type FieldUpdateDocumentFieldTypeCheckboxRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeCheckboxRequest2
>;

export type FieldUpdateDocumentFieldValueCheckbox = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldMetaCheckboxRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeCheckboxRequest2;
  values?: Array<FieldUpdateDocumentFieldValueCheckbox> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export type FieldUpdateDocumentFieldFieldCheckbox = {
  type: FieldUpdateDocumentFieldTypeCheckboxRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaCheckboxRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeRadioRequest1 = {
  Radio: "RADIO",
} as const;
export type FieldUpdateDocumentFieldTypeRadioRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeRadioRequest1
>;

export const FieldUpdateDocumentFieldTypeRadioRequest2 = {
  Radio: "radio",
} as const;
export type FieldUpdateDocumentFieldTypeRadioRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeRadioRequest2
>;

export type FieldUpdateDocumentFieldValueRadio = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldMetaRadioRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeRadioRequest2;
  values?: Array<FieldUpdateDocumentFieldValueRadio> | undefined;
};

export type FieldUpdateDocumentFieldFieldRadio = {
  type: FieldUpdateDocumentFieldTypeRadioRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaRadioRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeNumberRequest1 = {
  Number: "NUMBER",
} as const;
export type FieldUpdateDocumentFieldTypeNumberRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeNumberRequest1
>;

export const FieldUpdateDocumentFieldTypeNumberRequest2 = {
  Number: "number",
} as const;
export type FieldUpdateDocumentFieldTypeNumberRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeNumberRequest2
>;

export const FieldUpdateDocumentFieldTextAlignNumber = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignNumber = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignNumber
>;

export type FieldUpdateDocumentFieldFieldMetaNumberRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeNumberRequest2;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignNumber | undefined;
};

export type FieldUpdateDocumentFieldFieldNumber = {
  type: FieldUpdateDocumentFieldTypeNumberRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaNumberRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeTextRequest1 = {
  Text: "TEXT",
} as const;
export type FieldUpdateDocumentFieldTypeTextRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeTextRequest1
>;

export const FieldUpdateDocumentFieldTypeTextRequest2 = {
  Text: "text",
} as const;
export type FieldUpdateDocumentFieldTypeTextRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeTextRequest2
>;

export const FieldUpdateDocumentFieldTextAlignText = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignText = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignText
>;

export type FieldUpdateDocumentFieldFieldMetaTextRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeTextRequest2;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignText | undefined;
};

export type FieldUpdateDocumentFieldFieldText = {
  type: FieldUpdateDocumentFieldTypeTextRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaTextRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeDateRequest1 = {
  Date: "DATE",
} as const;
export type FieldUpdateDocumentFieldTypeDateRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeDateRequest1
>;

export const FieldUpdateDocumentFieldTypeDateRequest2 = {
  Date: "date",
} as const;
export type FieldUpdateDocumentFieldTypeDateRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeDateRequest2
>;

export const FieldUpdateDocumentFieldTextAlignDate = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignDate = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignDate
>;

export type FieldUpdateDocumentFieldFieldMetaDateRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeDateRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignDate | undefined;
};

export type FieldUpdateDocumentFieldFieldDate = {
  type: FieldUpdateDocumentFieldTypeDateRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaDateRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeEmailRequest1 = {
  Email: "EMAIL",
} as const;
export type FieldUpdateDocumentFieldTypeEmailRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeEmailRequest1
>;

export const FieldUpdateDocumentFieldTypeEmailRequest2 = {
  Email: "email",
} as const;
export type FieldUpdateDocumentFieldTypeEmailRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeEmailRequest2
>;

export const FieldUpdateDocumentFieldTextAlignEmail = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignEmail = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignEmail
>;

export type FieldUpdateDocumentFieldFieldMetaEmailRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeEmailRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignEmail | undefined;
};

export type FieldUpdateDocumentFieldFieldEmail = {
  type: FieldUpdateDocumentFieldTypeEmailRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaEmailRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeNameRequest1 = {
  Name: "NAME",
} as const;
export type FieldUpdateDocumentFieldTypeNameRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeNameRequest1
>;

export const FieldUpdateDocumentFieldTypeNameRequest2 = {
  Name: "name",
} as const;
export type FieldUpdateDocumentFieldTypeNameRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeNameRequest2
>;

export const FieldUpdateDocumentFieldTextAlignName = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignName = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignName
>;

export type FieldUpdateDocumentFieldFieldMetaNameRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeNameRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignName | undefined;
};

export type FieldUpdateDocumentFieldFieldName = {
  type: FieldUpdateDocumentFieldTypeNameRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaNameRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeInitialsRequest1 = {
  Initials: "INITIALS",
} as const;
export type FieldUpdateDocumentFieldTypeInitialsRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeInitialsRequest1
>;

export const FieldUpdateDocumentFieldTypeInitialsRequest2 = {
  Initials: "initials",
} as const;
export type FieldUpdateDocumentFieldTypeInitialsRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeInitialsRequest2
>;

export const FieldUpdateDocumentFieldTextAlignInitials = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignInitials = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignInitials
>;

export type FieldUpdateDocumentFieldFieldMetaInitialsRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldTypeInitialsRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignInitials | undefined;
};

export type FieldUpdateDocumentFieldFieldInitials = {
  type: FieldUpdateDocumentFieldTypeInitialsRequest1;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaInitialsRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeFreeSignature = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldTypeFreeSignature = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeFreeSignature
>;

export type FieldUpdateDocumentFieldFieldFreeSignature = {
  type: FieldUpdateDocumentFieldTypeFreeSignature;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldTypeSignature = {
  Signature: "SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldTypeSignature = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeSignature
>;

export type FieldUpdateDocumentFieldFieldSignature = {
  type: FieldUpdateDocumentFieldTypeSignature;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export type FieldUpdateDocumentFieldFieldUnion =
  | FieldUpdateDocumentFieldFieldSignature
  | FieldUpdateDocumentFieldFieldFreeSignature
  | FieldUpdateDocumentFieldFieldInitials
  | FieldUpdateDocumentFieldFieldName
  | FieldUpdateDocumentFieldFieldEmail
  | FieldUpdateDocumentFieldFieldDate
  | FieldUpdateDocumentFieldFieldText
  | FieldUpdateDocumentFieldFieldNumber
  | FieldUpdateDocumentFieldFieldRadio
  | FieldUpdateDocumentFieldFieldCheckbox
  | FieldUpdateDocumentFieldFieldDropdown;

export type FieldUpdateDocumentFieldRequest = {
  documentId: number;
  field:
    | FieldUpdateDocumentFieldFieldSignature
    | FieldUpdateDocumentFieldFieldFreeSignature
    | FieldUpdateDocumentFieldFieldInitials
    | FieldUpdateDocumentFieldFieldName
    | FieldUpdateDocumentFieldFieldEmail
    | FieldUpdateDocumentFieldFieldDate
    | FieldUpdateDocumentFieldFieldText
    | FieldUpdateDocumentFieldFieldNumber
    | FieldUpdateDocumentFieldFieldRadio
    | FieldUpdateDocumentFieldFieldCheckbox
    | FieldUpdateDocumentFieldFieldDropdown;
};

export const FieldUpdateDocumentFieldTypeResponse = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateDocumentFieldTypeResponse = ClosedEnum<
  typeof FieldUpdateDocumentFieldTypeResponse
>;

export const FieldUpdateDocumentFieldFieldMetaTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeDropdown = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeDropdown
>;

export type FieldUpdateDocumentFieldValueResponse3 = {
  value: string;
};

export type FieldUpdateDocumentFieldFieldMetaDropdownResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeDropdown;
  values?: Array<FieldUpdateDocumentFieldValueResponse3> | undefined;
  defaultValue?: string | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeCheckbox = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeCheckbox
>;

export type FieldUpdateDocumentFieldValueResponse2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldMetaCheckboxResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeCheckbox;
  values?: Array<FieldUpdateDocumentFieldValueResponse2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeRadio = {
  Radio: "radio",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeRadio = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeRadio
>;

export type FieldUpdateDocumentFieldValueResponse1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldMetaRadioResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeRadio;
  values?: Array<FieldUpdateDocumentFieldValueResponse1> | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeNumber = {
  Number: "number",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeNumber = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeNumber
>;

export const FieldUpdateDocumentFieldTextAlignResponse6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignResponse6 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignResponse6
>;

export type FieldUpdateDocumentFieldFieldMetaNumberResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignResponse6 | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeText = {
  Text: "text",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeText = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeText
>;

export const FieldUpdateDocumentFieldTextAlignResponse5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignResponse5 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignResponse5
>;

export type FieldUpdateDocumentFieldFieldMetaTextResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignResponse5 | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeDate = {
  Date: "date",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeDate = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeDate
>;

export const FieldUpdateDocumentFieldTextAlignResponse4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignResponse4 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignResponse4
>;

export type FieldUpdateDocumentFieldFieldMetaDateResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeDate;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignResponse4 | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeEmail = {
  Email: "email",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeEmail = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeEmail
>;

export const FieldUpdateDocumentFieldTextAlignResponse3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignResponse3 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignResponse3
>;

export type FieldUpdateDocumentFieldFieldMetaEmailResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeEmail;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignResponse3 | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeName = {
  Name: "name",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeName = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeName
>;

export const FieldUpdateDocumentFieldTextAlignResponse2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignResponse2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignResponse2
>;

export type FieldUpdateDocumentFieldFieldMetaNameResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeName;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignResponse2 | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaTypeInitials = {
  Initials: "initials",
} as const;
export type FieldUpdateDocumentFieldFieldMetaTypeInitials = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaTypeInitials
>;

export const FieldUpdateDocumentFieldTextAlignResponse1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldTextAlignResponse1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldTextAlignResponse1
>;

export type FieldUpdateDocumentFieldFieldMetaInitialsResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaTypeInitials;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldTextAlignResponse1 | undefined;
};

export type FieldUpdateDocumentFieldFieldMetaUnion =
  | FieldUpdateDocumentFieldFieldMetaInitialsResponse
  | FieldUpdateDocumentFieldFieldMetaNameResponse
  | FieldUpdateDocumentFieldFieldMetaEmailResponse
  | FieldUpdateDocumentFieldFieldMetaDateResponse
  | FieldUpdateDocumentFieldFieldMetaTextResponse
  | FieldUpdateDocumentFieldFieldMetaNumberResponse
  | FieldUpdateDocumentFieldFieldMetaRadioResponse
  | FieldUpdateDocumentFieldFieldMetaCheckboxResponse
  | FieldUpdateDocumentFieldFieldMetaDropdownResponse;

/**
 * Successful response
 */
export type FieldUpdateDocumentFieldResponse = {
  type: FieldUpdateDocumentFieldTypeResponse;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldFieldMetaInitialsResponse
    | FieldUpdateDocumentFieldFieldMetaNameResponse
    | FieldUpdateDocumentFieldFieldMetaEmailResponse
    | FieldUpdateDocumentFieldFieldMetaDateResponse
    | FieldUpdateDocumentFieldFieldMetaTextResponse
    | FieldUpdateDocumentFieldFieldMetaNumberResponse
    | FieldUpdateDocumentFieldFieldMetaRadioResponse
    | FieldUpdateDocumentFieldFieldMetaCheckboxResponse
    | FieldUpdateDocumentFieldFieldMetaDropdownResponse
    | null;
};

/** @internal */
export const FieldUpdateDocumentFieldTypeDropdownRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDropdownRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeDropdownRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeDropdownRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDropdownRequest1> =
    FieldUpdateDocumentFieldTypeDropdownRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeDropdownRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeDropdownRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeDropdownRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeDropdownRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeDropdownRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeDropdownRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDropdownRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeDropdownRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeDropdownRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDropdownRequest2> =
    FieldUpdateDocumentFieldTypeDropdownRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeDropdownRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeDropdownRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeDropdownRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeDropdownRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeDropdownRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldValueDropdown$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldValueDropdown$Outbound = {
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldValueDropdown$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueDropdown$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldValueDropdown
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldValueDropdown$ {
  /** @deprecated use `FieldUpdateDocumentFieldValueDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldValueDropdown$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldValueDropdown$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueDropdown$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldValueDropdown$Outbound;
}

export function fieldUpdateDocumentFieldValueDropdownToJSON(
  fieldUpdateDocumentFieldValueDropdown: FieldUpdateDocumentFieldValueDropdown,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldValueDropdown$outboundSchema.parse(
      fieldUpdateDocumentFieldValueDropdown,
    ),
  );
}

export function fieldUpdateDocumentFieldValueDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldValueDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldValueDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldValueDropdown' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDropdownRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDropdownRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeDropdownRequest2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueDropdown$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaDropdownRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldValueDropdown$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDropdownRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaDropdownRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeDropdownRequest2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueDropdown$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDropdownRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDropdownRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDropdownRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDropdownRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaDropdownRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaDropdownRequest:
    FieldUpdateDocumentFieldFieldMetaDropdownRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaDropdownRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaDropdownRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaDropdownRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaDropdownRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaDropdownRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDropdown$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeDropdownRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldDropdown$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldMetaDropdownRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldDropdown$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldDropdown$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldDropdown
> = z.object({
  type: FieldUpdateDocumentFieldTypeDropdownRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaDropdownRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDropdown$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDropdown$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDropdown$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDropdown$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldDropdown$Outbound;
}

export function fieldUpdateDocumentFieldFieldDropdownToJSON(
  fieldUpdateDocumentFieldFieldDropdown: FieldUpdateDocumentFieldFieldDropdown,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDropdown$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldDropdown,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDropdown' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeCheckboxRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeCheckboxRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeCheckboxRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeCheckboxRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeCheckboxRequest1> =
    FieldUpdateDocumentFieldTypeCheckboxRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeCheckboxRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeCheckboxRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeCheckboxRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeCheckboxRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeCheckboxRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeCheckboxRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeCheckboxRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeCheckboxRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeCheckboxRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeCheckboxRequest2> =
    FieldUpdateDocumentFieldTypeCheckboxRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeCheckboxRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeCheckboxRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeCheckboxRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeCheckboxRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeCheckboxRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldValueCheckbox$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldValueCheckbox$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldValueCheckbox$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueCheckbox$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldValueCheckbox
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldValueCheckbox$ {
  /** @deprecated use `FieldUpdateDocumentFieldValueCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldValueCheckbox$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldValueCheckbox$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueCheckbox$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldValueCheckbox$Outbound;
}

export function fieldUpdateDocumentFieldValueCheckboxToJSON(
  fieldUpdateDocumentFieldValueCheckbox: FieldUpdateDocumentFieldValueCheckbox,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldValueCheckbox$outboundSchema.parse(
      fieldUpdateDocumentFieldValueCheckbox,
    ),
  );
}

export function fieldUpdateDocumentFieldValueCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldValueCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldValueCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldValueCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaCheckboxRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeCheckboxRequest2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueCheckbox$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaCheckboxRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldValueCheckbox$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaCheckboxRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeCheckboxRequest2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueCheckbox$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaCheckboxRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaCheckboxRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaCheckboxRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaCheckboxRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaCheckboxRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaCheckboxRequest:
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaCheckboxRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaCheckboxRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaCheckboxRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaCheckboxRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaCheckboxRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldCheckbox$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeCheckboxRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldCheckbox$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldMetaCheckboxRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldCheckbox$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldCheckbox$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldCheckbox
> = z.object({
  type: FieldUpdateDocumentFieldTypeCheckboxRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaCheckboxRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldCheckbox$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldCheckbox$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldCheckbox$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldCheckbox$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldCheckbox$Outbound;
}

export function fieldUpdateDocumentFieldFieldCheckboxToJSON(
  fieldUpdateDocumentFieldFieldCheckbox: FieldUpdateDocumentFieldFieldCheckbox,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldCheckbox$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldCheckbox,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeRadioRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeRadioRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeRadioRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeRadioRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeRadioRequest1> =
    FieldUpdateDocumentFieldTypeRadioRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeRadioRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeRadioRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeRadioRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeRadioRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeRadioRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeRadioRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeRadioRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeRadioRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeRadioRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeRadioRequest2> =
    FieldUpdateDocumentFieldTypeRadioRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeRadioRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeRadioRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeRadioRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeRadioRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeRadioRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldValueRadio$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldValueRadio$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldValueRadio$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueRadio$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldValueRadio
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldValueRadio$ {
  /** @deprecated use `FieldUpdateDocumentFieldValueRadio$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldValueRadio$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldValueRadio$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueRadio$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldValueRadio$Outbound;
}

export function fieldUpdateDocumentFieldValueRadioToJSON(
  fieldUpdateDocumentFieldValueRadio: FieldUpdateDocumentFieldValueRadio,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldValueRadio$outboundSchema.parse(
      fieldUpdateDocumentFieldValueRadio,
    ),
  );
}

export function fieldUpdateDocumentFieldValueRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldValueRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldValueRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldValueRadio' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaRadioRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaRadioRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeRadioRequest2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueRadio$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaRadioRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldValueRadio$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaRadioRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaRadioRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaRadioRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeRadioRequest2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueRadio$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaRadioRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaRadioRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaRadioRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaRadioRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaRadioRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaRadioRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaRadioRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaRadioRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaRadioRequest:
    FieldUpdateDocumentFieldFieldMetaRadioRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaRadioRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaRadioRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaRadioRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaRadioRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaRadioRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaRadioRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldRadio$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeRadioRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaRadioRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldRadio$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldMetaRadioRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldRadio$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldRadio$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldRadio
> = z.object({
  type: FieldUpdateDocumentFieldTypeRadioRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaRadioRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldRadio$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldRadio$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldRadio$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldRadio$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldRadio$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldRadio$Outbound;
}

export function fieldUpdateDocumentFieldFieldRadioToJSON(
  fieldUpdateDocumentFieldFieldRadio: FieldUpdateDocumentFieldFieldRadio,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldRadio$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldRadio,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldRadio' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeNumberRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNumberRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeNumberRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeNumberRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNumberRequest1> =
    FieldUpdateDocumentFieldTypeNumberRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeNumberRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeNumberRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeNumberRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeNumberRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeNumberRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeNumberRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNumberRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeNumberRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeNumberRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNumberRequest2> =
    FieldUpdateDocumentFieldTypeNumberRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeNumberRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeNumberRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeNumberRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeNumberRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeNumberRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignNumber$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignNumber> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignNumber);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignNumber$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignNumber> =
    FieldUpdateDocumentFieldTextAlignNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignNumber$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignNumber$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignNumber$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNumberRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNumberRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeNumberRequest2$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignNumber$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaNumberRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNumberRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNumberRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaNumberRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeNumberRequest2$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignNumber$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaNumberRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNumberRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaNumberRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNumberRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaNumberRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNumberRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaNumberRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaNumberRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaNumberRequest:
    FieldUpdateDocumentFieldFieldMetaNumberRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaNumberRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaNumberRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaNumberRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaNumberRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaNumberRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaNumberRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldNumber$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeNumberRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaNumberRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldNumber$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldMetaNumberRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldNumber$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldNumber$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldNumber
> = z.object({
  type: FieldUpdateDocumentFieldTypeNumberRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaNumberRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldNumber$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldNumber$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldNumber$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldNumber$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldNumber$Outbound;
}

export function fieldUpdateDocumentFieldFieldNumberToJSON(
  fieldUpdateDocumentFieldFieldNumber: FieldUpdateDocumentFieldFieldNumber,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldNumber$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldNumber,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldNumberFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldNumber' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeTextRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeTextRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeTextRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeTextRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeTextRequest1> =
    FieldUpdateDocumentFieldTypeTextRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeTextRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeTextRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeTextRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeTextRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeTextRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeTextRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeTextRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeTextRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeTextRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeTextRequest2> =
    FieldUpdateDocumentFieldTypeTextRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeTextRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeTextRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeTextRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeTextRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeTextRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignText$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignText> = z.nativeEnum(
    FieldUpdateDocumentFieldTextAlignText,
  );

/** @internal */
export const FieldUpdateDocumentFieldTextAlignText$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignText> =
    FieldUpdateDocumentFieldTextAlignText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignText$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignText$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignText$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignText$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignText$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTextRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaTextRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeTextRequest2$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignText$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaTextRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTextRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaTextRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaTextRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeTextRequest2$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignText$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTextRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTextRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTextRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTextRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTextRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTextRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaTextRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaTextRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaTextRequest:
    FieldUpdateDocumentFieldFieldMetaTextRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaTextRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaTextRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaTextRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaTextRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaTextRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaTextRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldText$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldText,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeTextRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaTextRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldText$Outbound = {
  type: string;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaTextRequest$Outbound | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldText$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldText$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldText
> = z.object({
  type: FieldUpdateDocumentFieldTypeTextRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaTextRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldText$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldText$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldText$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldText$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldText$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldText$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldText$Outbound;
}

export function fieldUpdateDocumentFieldFieldTextToJSON(
  fieldUpdateDocumentFieldFieldText: FieldUpdateDocumentFieldFieldText,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldText$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldText,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldTextFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldFieldText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldText' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeDateRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDateRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeDateRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeDateRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDateRequest1> =
    FieldUpdateDocumentFieldTypeDateRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeDateRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeDateRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeDateRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeDateRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeDateRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeDateRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDateRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeDateRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeDateRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeDateRequest2> =
    FieldUpdateDocumentFieldTypeDateRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeDateRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeDateRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeDateRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeDateRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeDateRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignDate$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignDate> = z.nativeEnum(
    FieldUpdateDocumentFieldTextAlignDate,
  );

/** @internal */
export const FieldUpdateDocumentFieldTextAlignDate$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignDate> =
    FieldUpdateDocumentFieldTextAlignDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignDate$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignDate$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignDate$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignDate$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDateRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDateRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeDateRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignDate$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaDateRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDateRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDateRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaDateRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeDateRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignDate$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDateRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDateRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDateRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDateRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDateRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDateRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaDateRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaDateRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaDateRequest:
    FieldUpdateDocumentFieldFieldMetaDateRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaDateRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaDateRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaDateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaDateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaDateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaDateRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDate$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldDate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeDateRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaDateRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldDate$Outbound = {
  type: string;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaDateRequest$Outbound | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldDate$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldDate$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldDate
> = z.object({
  type: FieldUpdateDocumentFieldTypeDateRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaDateRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDate$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDate$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldDate$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDate$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDate$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldDate$Outbound;
}

export function fieldUpdateDocumentFieldFieldDateToJSON(
  fieldUpdateDocumentFieldFieldDate: FieldUpdateDocumentFieldFieldDate,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDate$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldDate,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldDateFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldDate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldFieldDate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDate' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeEmailRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeEmailRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeEmailRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeEmailRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeEmailRequest1> =
    FieldUpdateDocumentFieldTypeEmailRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeEmailRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeEmailRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeEmailRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeEmailRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeEmailRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeEmailRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeEmailRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeEmailRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeEmailRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeEmailRequest2> =
    FieldUpdateDocumentFieldTypeEmailRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeEmailRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeEmailRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeEmailRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeEmailRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeEmailRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignEmail$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignEmail> = z.nativeEnum(
    FieldUpdateDocumentFieldTextAlignEmail,
  );

/** @internal */
export const FieldUpdateDocumentFieldTextAlignEmail$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignEmail> =
    FieldUpdateDocumentFieldTextAlignEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignEmail$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignEmail$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignEmail$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaEmailRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaEmailRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeEmailRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignEmail$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaEmailRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaEmailRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaEmailRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaEmailRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeEmailRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignEmail$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaEmailRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaEmailRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaEmailRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaEmailRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaEmailRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaEmailRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaEmailRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaEmailRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaEmailRequest:
    FieldUpdateDocumentFieldFieldMetaEmailRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaEmailRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaEmailRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaEmailRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaEmailRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaEmailRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaEmailRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldEmail$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldEmail,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeEmailRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaEmailRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldEmail$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldMetaEmailRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldEmail$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldEmail$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldEmail
> = z.object({
  type: FieldUpdateDocumentFieldTypeEmailRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaEmailRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldEmail$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldEmail$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldEmail$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldEmail$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldEmail$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldEmail$Outbound;
}

export function fieldUpdateDocumentFieldFieldEmailToJSON(
  fieldUpdateDocumentFieldFieldEmail: FieldUpdateDocumentFieldFieldEmail,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldEmail$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldEmail,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldEmailFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldEmail' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeNameRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNameRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeNameRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeNameRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNameRequest1> =
    FieldUpdateDocumentFieldTypeNameRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeNameRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeNameRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeNameRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeNameRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeNameRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeNameRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNameRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeNameRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeNameRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeNameRequest2> =
    FieldUpdateDocumentFieldTypeNameRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeNameRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeNameRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeNameRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeNameRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeNameRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignName$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignName> = z.nativeEnum(
    FieldUpdateDocumentFieldTextAlignName,
  );

/** @internal */
export const FieldUpdateDocumentFieldTextAlignName$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignName> =
    FieldUpdateDocumentFieldTextAlignName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignName$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignName$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignName$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignName$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignName$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNameRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNameRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeNameRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignName$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaNameRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNameRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNameRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaNameRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeNameRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignName$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaNameRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNameRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaNameRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNameRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaNameRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNameRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaNameRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaNameRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaNameRequest:
    FieldUpdateDocumentFieldFieldMetaNameRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaNameRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaNameRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaNameRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaNameRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaNameRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaNameRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldName$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldName,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeNameRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaNameRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldName$Outbound = {
  type: string;
  fieldMeta?: FieldUpdateDocumentFieldFieldMetaNameRequest$Outbound | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldName$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldName$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldName
> = z.object({
  type: FieldUpdateDocumentFieldTypeNameRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaNameRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldName$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldName$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldName$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldName$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldName$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldName$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldName$Outbound;
}

export function fieldUpdateDocumentFieldFieldNameToJSON(
  fieldUpdateDocumentFieldFieldName: FieldUpdateDocumentFieldFieldName,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldName$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldName,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldNameFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldName, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldFieldName$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldName' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeInitialsRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeInitialsRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeInitialsRequest1);

/** @internal */
export const FieldUpdateDocumentFieldTypeInitialsRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeInitialsRequest1> =
    FieldUpdateDocumentFieldTypeInitialsRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeInitialsRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeInitialsRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeInitialsRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeInitialsRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeInitialsRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTypeInitialsRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeInitialsRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeInitialsRequest2);

/** @internal */
export const FieldUpdateDocumentFieldTypeInitialsRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeInitialsRequest2> =
    FieldUpdateDocumentFieldTypeInitialsRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeInitialsRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeInitialsRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeInitialsRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeInitialsRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeInitialsRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignInitials$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignInitials> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignInitials);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignInitials$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignInitials> =
    FieldUpdateDocumentFieldTextAlignInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignInitials$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignInitials$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignInitials$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaInitialsRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaInitialsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeInitialsRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignInitials$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaInitialsRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaInitialsRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaInitialsRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldTypeInitialsRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignInitials$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaInitialsRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaInitialsRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaInitialsRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaInitialsRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaInitialsRequestToJSON(
  fieldUpdateDocumentFieldFieldMetaInitialsRequest:
    FieldUpdateDocumentFieldFieldMetaInitialsRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaInitialsRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaInitialsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaInitialsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaInitialsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaInitialsRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldInitials$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldInitials,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeInitialsRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldInitials$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldMetaInitialsRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldInitials$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldInitials$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldInitials
> = z.object({
  type: FieldUpdateDocumentFieldTypeInitialsRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaInitialsRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldInitials$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldInitials$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldInitials$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldInitials$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldInitials$Outbound;
}

export function fieldUpdateDocumentFieldFieldInitialsToJSON(
  fieldUpdateDocumentFieldFieldInitials: FieldUpdateDocumentFieldFieldInitials,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldInitials$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldInitials,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldInitialsFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldInitials, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldInitials$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldInitials' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeFreeSignature$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeFreeSignature> = z
    .nativeEnum(FieldUpdateDocumentFieldTypeFreeSignature);

/** @internal */
export const FieldUpdateDocumentFieldTypeFreeSignature$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeFreeSignature> =
    FieldUpdateDocumentFieldTypeFreeSignature$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeFreeSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeFreeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeFreeSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeFreeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeFreeSignature$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldFreeSignature$inboundSchema:
  z.ZodType<FieldUpdateDocumentFieldFieldFreeSignature, z.ZodTypeDef, unknown> =
    z.object({
      type: FieldUpdateDocumentFieldTypeFreeSignature$inboundSchema,
      id: z.number(),
      pageNumber: z.number().optional(),
      pageX: z.number().optional(),
      pageY: z.number().optional(),
      width: z.number().optional(),
      height: z.number().optional(),
    });

/** @internal */
export type FieldUpdateDocumentFieldFieldFreeSignature$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldFreeSignature$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldFreeSignature$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldFreeSignature
  > = z.object({
    type: FieldUpdateDocumentFieldTypeFreeSignature$outboundSchema,
    id: z.number(),
    pageNumber: z.number().optional(),
    pageX: z.number().optional(),
    pageY: z.number().optional(),
    width: z.number().optional(),
    height: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldFreeSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldFreeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldFreeSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldFreeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldFreeSignature$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldFreeSignature$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldFreeSignature$Outbound;
}

export function fieldUpdateDocumentFieldFieldFreeSignatureToJSON(
  fieldUpdateDocumentFieldFieldFreeSignature:
    FieldUpdateDocumentFieldFieldFreeSignature,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldFreeSignature$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldFreeSignature,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldFreeSignatureFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldFreeSignature,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldFreeSignature$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldFreeSignature' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeSignature$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeSignature> = z.nativeEnum(
    FieldUpdateDocumentFieldTypeSignature,
  );

/** @internal */
export const FieldUpdateDocumentFieldTypeSignature$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeSignature> =
    FieldUpdateDocumentFieldTypeSignature$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeSignature$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldSignature$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldSignature,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeSignature$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldSignature$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldSignature$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldSignature$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldSignature
> = z.object({
  type: FieldUpdateDocumentFieldTypeSignature$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldSignature$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldSignature$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldSignature$Outbound;
}

export function fieldUpdateDocumentFieldFieldSignatureToJSON(
  fieldUpdateDocumentFieldFieldSignature:
    FieldUpdateDocumentFieldFieldSignature,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldSignature$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldSignature,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldSignatureFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldSignature, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldSignature$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldSignature' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldUnion$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldFieldSignature$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldFreeSignature$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldInitials$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldName$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldEmail$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldDate$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldText$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldNumber$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldRadio$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldCheckbox$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldDropdown$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldFieldUnion$Outbound =
  | FieldUpdateDocumentFieldFieldSignature$Outbound
  | FieldUpdateDocumentFieldFieldFreeSignature$Outbound
  | FieldUpdateDocumentFieldFieldInitials$Outbound
  | FieldUpdateDocumentFieldFieldName$Outbound
  | FieldUpdateDocumentFieldFieldEmail$Outbound
  | FieldUpdateDocumentFieldFieldDate$Outbound
  | FieldUpdateDocumentFieldFieldText$Outbound
  | FieldUpdateDocumentFieldFieldNumber$Outbound
  | FieldUpdateDocumentFieldFieldRadio$Outbound
  | FieldUpdateDocumentFieldFieldCheckbox$Outbound
  | FieldUpdateDocumentFieldFieldDropdown$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldFieldUnion$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldUnion$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldUnion
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldFieldSignature$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldFreeSignature$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldInitials$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldName$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldEmail$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldDate$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldText$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldNumber$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldRadio$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldCheckbox$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldDropdown$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldUnion$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldUnion$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldUnion$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldUnion$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldUnion$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldUnion$Outbound;
}

export function fieldUpdateDocumentFieldFieldUnionToJSON(
  fieldUpdateDocumentFieldFieldUnion: FieldUpdateDocumentFieldFieldUnion,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldUnion$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldUnion,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldUnionFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldUnion' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldRequest$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  field: z.union([
    z.lazy(() => FieldUpdateDocumentFieldFieldSignature$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldFreeSignature$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldInitials$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldName$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldEmail$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldDate$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldText$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldNumber$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldRadio$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldCheckbox$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldDropdown$inboundSchema),
  ]),
});

/** @internal */
export type FieldUpdateDocumentFieldRequest$Outbound = {
  documentId: number;
  field:
    | FieldUpdateDocumentFieldFieldSignature$Outbound
    | FieldUpdateDocumentFieldFieldFreeSignature$Outbound
    | FieldUpdateDocumentFieldFieldInitials$Outbound
    | FieldUpdateDocumentFieldFieldName$Outbound
    | FieldUpdateDocumentFieldFieldEmail$Outbound
    | FieldUpdateDocumentFieldFieldDate$Outbound
    | FieldUpdateDocumentFieldFieldText$Outbound
    | FieldUpdateDocumentFieldFieldNumber$Outbound
    | FieldUpdateDocumentFieldFieldRadio$Outbound
    | FieldUpdateDocumentFieldFieldCheckbox$Outbound
    | FieldUpdateDocumentFieldFieldDropdown$Outbound;
};

/** @internal */
export const FieldUpdateDocumentFieldRequest$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldRequest$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldRequest
> = z.object({
  documentId: z.number(),
  field: z.union([
    z.lazy(() => FieldUpdateDocumentFieldFieldSignature$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldFreeSignature$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldInitials$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldName$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldEmail$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldDate$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldText$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldNumber$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldRadio$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldCheckbox$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldFieldDropdown$outboundSchema),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldRequest$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldRequest$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldRequest$Outbound;
}

export function fieldUpdateDocumentFieldRequestToJSON(
  fieldUpdateDocumentFieldRequest: FieldUpdateDocumentFieldRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldRequestFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldTypeResponse$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeResponse> = z.nativeEnum(
    FieldUpdateDocumentFieldTypeResponse,
  );

/** @internal */
export const FieldUpdateDocumentFieldTypeResponse$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTypeResponse> =
    FieldUpdateDocumentFieldTypeResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTypeResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldTypeResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTypeResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTypeResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTypeResponse$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeDropdown> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeDropdown);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeDropdown> =
    FieldUpdateDocumentFieldFieldMetaTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeDropdown$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeDropdown$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeDropdown$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldValueResponse3$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldValueResponse3$Outbound = {
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldValueResponse3$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueResponse3$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldValueResponse3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldValueResponse3$ {
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse3$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldValueResponse3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldValueResponse3$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse3$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldValueResponse3$Outbound;
}

export function fieldUpdateDocumentFieldValueResponse3ToJSON(
  fieldUpdateDocumentFieldValueResponse3:
    FieldUpdateDocumentFieldValueResponse3,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldValueResponse3$outboundSchema.parse(
      fieldUpdateDocumentFieldValueResponse3,
    ),
  );
}

export function fieldUpdateDocumentFieldValueResponse3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldValueResponse3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldValueResponse3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldValueResponse3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDropdownResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDropdownResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueResponse3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaDropdownResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldValueResponse3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDropdownResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDropdownResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaDropdownResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueResponse3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDropdownResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDropdownResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDropdownResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDropdownResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDropdownResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDropdownResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaDropdownResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaDropdownResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaDropdownResponse:
    FieldUpdateDocumentFieldFieldMetaDropdownResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaDropdownResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaDropdownResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaDropdownResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaDropdownResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaDropdownResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaDropdownResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeCheckbox> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeCheckbox);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeCheckbox> =
    FieldUpdateDocumentFieldFieldMetaTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeCheckbox$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeCheckbox$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeCheckbox$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldValueResponse2$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldValueResponse2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldValueResponse2$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueResponse2$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldValueResponse2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldValueResponse2$ {
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldValueResponse2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldValueResponse2$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse2$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldValueResponse2$Outbound;
}

export function fieldUpdateDocumentFieldValueResponse2ToJSON(
  fieldUpdateDocumentFieldValueResponse2:
    FieldUpdateDocumentFieldValueResponse2,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldValueResponse2$outboundSchema.parse(
      fieldUpdateDocumentFieldValueResponse2,
    ),
  );
}

export function fieldUpdateDocumentFieldValueResponse2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldValueResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldValueResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldValueResponse2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaCheckboxResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueResponse2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaCheckboxResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldValueResponse2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaCheckboxResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueResponse2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaCheckboxResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaCheckboxResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaCheckboxResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaCheckboxResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaCheckboxResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaCheckboxResponse:
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaCheckboxResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaCheckboxResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaCheckboxResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaCheckboxResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaCheckboxResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeRadio> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeRadio);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeRadio> =
    FieldUpdateDocumentFieldFieldMetaTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeRadio$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeRadio$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeRadio$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldValueResponse1$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldValueResponse1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldValueResponse1$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldValueResponse1$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldValueResponse1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldValueResponse1$ {
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldValueResponse1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldValueResponse1$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldValueResponse1$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldValueResponse1$Outbound;
}

export function fieldUpdateDocumentFieldValueResponse1ToJSON(
  fieldUpdateDocumentFieldValueResponse1:
    FieldUpdateDocumentFieldValueResponse1,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldValueResponse1$outboundSchema.parse(
      fieldUpdateDocumentFieldValueResponse1,
    ),
  );
}

export function fieldUpdateDocumentFieldValueResponse1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldValueResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldValueResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldValueResponse1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaRadioResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaRadioResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueResponse1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaRadioResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldValueResponse1$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaRadioResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaRadioResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaRadioResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldValueResponse1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaRadioResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaRadioResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaRadioResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaRadioResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaRadioResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaRadioResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaRadioResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaRadioResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaRadioResponse:
    FieldUpdateDocumentFieldFieldMetaRadioResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaRadioResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaRadioResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaRadioResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaRadioResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaRadioResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaRadioResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeNumber> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeNumber);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeNumber> =
    FieldUpdateDocumentFieldFieldMetaTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeNumber$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeNumber$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeNumber$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse6$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse6> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignResponse6);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse6$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse6> =
    FieldUpdateDocumentFieldTextAlignResponse6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignResponse6$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse6$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse6$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse6$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse6$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNumberResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNumberResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse6$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaNumberResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNumberResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNumberResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaNumberResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaNumberResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNumberResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaNumberResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNumberResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaNumberResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNumberResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaNumberResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaNumberResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaNumberResponse:
    FieldUpdateDocumentFieldFieldMetaNumberResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaNumberResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaNumberResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaNumberResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaNumberResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaNumberResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaNumberResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeText$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeText> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeText);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeText$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeText> =
    FieldUpdateDocumentFieldFieldMetaTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeText$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeText$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeText$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeText$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeText$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse5$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse5> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignResponse5);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse5$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse5> =
    FieldUpdateDocumentFieldTextAlignResponse5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignResponse5$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse5$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse5$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse5$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse5$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTextResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaTextResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse5$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaTextResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTextResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaTextResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaTextResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTextResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTextResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTextResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTextResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTextResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTextResponse$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaTextResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaTextResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaTextResponse:
    FieldUpdateDocumentFieldFieldMetaTextResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaTextResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaTextResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaTextResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaTextResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaTextResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaTextResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeDate> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeDate);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeDate> =
    FieldUpdateDocumentFieldFieldMetaTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeDate$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeDate$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeDate$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse4$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse4> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignResponse4);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse4$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse4> =
    FieldUpdateDocumentFieldTextAlignResponse4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignResponse4$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse4$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse4$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse4$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse4$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDateResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDateResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse4$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaDateResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDateResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDateResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaDateResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDateResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDateResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDateResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDateResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDateResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDateResponse$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaDateResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaDateResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaDateResponse:
    FieldUpdateDocumentFieldFieldMetaDateResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaDateResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaDateResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaDateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaDateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaDateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaDateResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeEmail> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeEmail);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeEmail> =
    FieldUpdateDocumentFieldFieldMetaTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeEmail$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeEmail$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeEmail$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse3$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse3> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignResponse3);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse3$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse3> =
    FieldUpdateDocumentFieldTextAlignResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignResponse3$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse3$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse3$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaEmailResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaEmailResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse3$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaEmailResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaEmailResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaEmailResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaEmailResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaEmailResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaEmailResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaEmailResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaEmailResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaEmailResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaEmailResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaEmailResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaEmailResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaEmailResponse:
    FieldUpdateDocumentFieldFieldMetaEmailResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaEmailResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaEmailResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaEmailResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaEmailResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaEmailResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaEmailResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeName$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeName> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeName);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeName$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeName> =
    FieldUpdateDocumentFieldFieldMetaTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeName$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeName$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeName$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeName$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeName$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse2> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignResponse2);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse2> =
    FieldUpdateDocumentFieldTextAlignResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignResponse2$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNameResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNameResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse2$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaNameResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaNameResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaNameResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaNameResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaNameResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNameResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaNameResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNameResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaNameResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaNameResponse$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaNameResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaNameResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaNameResponse:
    FieldUpdateDocumentFieldFieldMetaNameResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaNameResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaNameResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaNameResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaNameResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaNameResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaNameResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeInitials> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldMetaTypeInitials);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaTypeInitials> =
    FieldUpdateDocumentFieldFieldMetaTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaTypeInitials$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeInitials$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaTypeInitials$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse1> = z
    .nativeEnum(FieldUpdateDocumentFieldTextAlignResponse1);

/** @internal */
export const FieldUpdateDocumentFieldTextAlignResponse1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldTextAlignResponse1> =
    FieldUpdateDocumentFieldTextAlignResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldTextAlignResponse1$ {
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldTextAlignResponse1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldTextAlignResponse1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaInitialsResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaInitialsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse1$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaInitialsResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaInitialsResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaInitialsResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaInitialsResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldFieldMetaTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldTextAlignResponse1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaInitialsResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaInitialsResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaInitialsResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaInitialsResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaInitialsResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaInitialsResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaInitialsResponse$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaInitialsResponseToJSON(
  fieldUpdateDocumentFieldFieldMetaInitialsResponse:
    FieldUpdateDocumentFieldFieldMetaInitialsResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaInitialsResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaInitialsResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaInitialsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaInitialsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaInitialsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaInitialsResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaUnion$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMetaUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaInitialsResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaNameResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaEmailResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaDateResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaTextResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaNumberResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaRadioResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaCheckboxResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaDropdownResponse$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaUnion$Outbound =
  | FieldUpdateDocumentFieldFieldMetaInitialsResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaNameResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaEmailResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaDateResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaTextResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaNumberResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaRadioResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaCheckboxResponse$Outbound
  | FieldUpdateDocumentFieldFieldMetaDropdownResponse$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaUnion$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMetaUnion$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMetaUnion
> = z.union([
  z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaInitialsResponse$outboundSchema
  ),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaNameResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaEmailResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaDateResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaTextResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaNumberResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMetaRadioResponse$outboundSchema),
  z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaCheckboxResponse$outboundSchema
  ),
  z.lazy(() =>
    FieldUpdateDocumentFieldFieldMetaDropdownResponse$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaUnion$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaUnion$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaUnion$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaUnion$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaUnion$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaUnionToJSON(
  fieldUpdateDocumentFieldFieldMetaUnion:
    FieldUpdateDocumentFieldFieldMetaUnion,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaUnion$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaUnion,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMetaUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldResponse$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldTypeResponse$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaInitialsResponse$inboundSchema
      ),
      z.lazy(() => FieldUpdateDocumentFieldFieldMetaNameResponse$inboundSchema),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaEmailResponse$inboundSchema
      ),
      z.lazy(() => FieldUpdateDocumentFieldFieldMetaDateResponse$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMetaTextResponse$inboundSchema),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaNumberResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaRadioResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaCheckboxResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaDropdownResponse$inboundSchema
      ),
    ]),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldResponse$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldFieldMetaInitialsResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaNameResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaEmailResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaDateResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaTextResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaNumberResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaRadioResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaCheckboxResponse$Outbound
    | FieldUpdateDocumentFieldFieldMetaDropdownResponse$Outbound
    | null;
};

/** @internal */
export const FieldUpdateDocumentFieldResponse$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldResponse$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldResponse
> = z.object({
  type: FieldUpdateDocumentFieldTypeResponse$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaInitialsResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaNameResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaEmailResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaDateResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaTextResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaNumberResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaRadioResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaCheckboxResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldMetaDropdownResponse$outboundSchema
      ),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldResponse$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldResponse$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldResponse$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldResponse$Outbound;
}

export function fieldUpdateDocumentFieldResponseToJSON(
  fieldUpdateDocumentFieldResponse: FieldUpdateDocumentFieldResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldResponseFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldResponse' from JSON`,
  );
}
