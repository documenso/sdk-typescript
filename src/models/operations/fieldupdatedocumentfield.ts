/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type =
  {
    Dropdown: "DROPDOWN",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType =
  {
    Dropdown: "dropdown",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues = {
  value: string;
};

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType;
    values?:
      | Array<FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues>
      | undefined;
    defaultValue?: string | undefined;
  };

export type FieldUpdateDocumentFieldField11 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type =
  {
    Checkbox: "CHECKBOX",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType =
  {
    Checkbox: "checkbox",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType;
    values?:
      | Array<FieldUpdateDocumentFieldFieldDocumentsFieldsValues>
      | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

export type FieldUpdateDocumentFieldField10 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type =
  {
    Radio: "RADIO",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType =
  {
    Radio: "radio",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType;
    values?: Array<FieldUpdateDocumentFieldFieldValues> | undefined;
  };

export type FieldUpdateDocumentFieldField9 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type =
  {
    Number: "NUMBER",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType =
  {
    Number: "number",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

export type FieldUpdateDocumentFieldField8 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type =
  {
    Text: "TEXT",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType =
  {
    Text: "text",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

export type FieldUpdateDocumentFieldField7 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type =
  {
    Date: "DATE",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType =
  {
    Date: "date",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType;
    fontSize?: number | undefined;
  };

export type FieldUpdateDocumentFieldField6 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type =
  {
    Email: "EMAIL",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType =
  {
    Email: "email",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldField5 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type =
  {
    Name: "NAME",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type
  >;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType =
  {
    Name: "name",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType
  >;

export type FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldField4 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type;
  fieldMeta?: FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType = {
  Initials: "INITIALS",
} as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType =
  ClosedEnum<typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType>;

export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType =
  {
    Initials: "initials",
  } as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType
  >;

export type FieldUpdateDocumentFieldFieldFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldField3 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType;
  fieldMeta?: FieldUpdateDocumentFieldFieldFieldMeta | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldDocumentsFieldsType = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldFieldDocumentsFieldsType = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldDocumentsFieldsType
>;

export type FieldUpdateDocumentFieldField2 = {
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsType;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldType = {
  Signature: "SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldFieldType = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldType
>;

export type FieldUpdateDocumentFieldField1 = {
  type: FieldUpdateDocumentFieldFieldType;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export type FieldUpdateDocumentFieldField =
  | FieldUpdateDocumentFieldField1
  | FieldUpdateDocumentFieldField2
  | FieldUpdateDocumentFieldField3
  | FieldUpdateDocumentFieldField4
  | FieldUpdateDocumentFieldField5
  | FieldUpdateDocumentFieldField6
  | FieldUpdateDocumentFieldField7
  | FieldUpdateDocumentFieldField8
  | FieldUpdateDocumentFieldField9
  | FieldUpdateDocumentFieldField10
  | FieldUpdateDocumentFieldField11;

export type FieldUpdateDocumentFieldRequestBody = {
  documentId: number;
  field:
    | FieldUpdateDocumentFieldField1
    | FieldUpdateDocumentFieldField2
    | FieldUpdateDocumentFieldField3
    | FieldUpdateDocumentFieldField4
    | FieldUpdateDocumentFieldField5
    | FieldUpdateDocumentFieldField6
    | FieldUpdateDocumentFieldField7
    | FieldUpdateDocumentFieldField8
    | FieldUpdateDocumentFieldField9
    | FieldUpdateDocumentFieldField10
    | FieldUpdateDocumentFieldField11;
};

export const FieldUpdateDocumentFieldType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateDocumentFieldType = ClosedEnum<
  typeof FieldUpdateDocumentFieldType
>;

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type
  >;

export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues = {
  value: string;
};

export type FieldUpdateDocumentFieldFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type;
  values?:
    | Array<FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues>
    | undefined;
  defaultValue?: string | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type
  >;

export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type;
  values?:
    | Array<FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type =
  {
    Radio: "radio",
  } as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type
  >;

export type FieldUpdateDocumentFieldFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type;
  values?: Array<FieldUpdateDocumentFieldFieldMetaValues> | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType
  >;

export type FieldUpdateDocumentFieldFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType
  >;

export type FieldUpdateDocumentFieldFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type = {
  Date: "date",
} as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type
  >;

export type FieldUpdateDocumentFieldFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType = {
  Email: "email",
} as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType
  >;

export type FieldUpdateDocumentFieldFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType = {
  Name: "name",
} as const;
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType
>;

export type FieldUpdateDocumentFieldFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldFieldMetaType = {
  Initials: "initials",
} as const;
export type FieldUpdateDocumentFieldFieldMetaType = ClosedEnum<
  typeof FieldUpdateDocumentFieldFieldMetaType
>;

export type FieldUpdateDocumentFieldFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldFieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldFieldMeta =
  | FieldUpdateDocumentFieldFieldMeta1
  | FieldUpdateDocumentFieldFieldMeta2
  | FieldUpdateDocumentFieldFieldMeta3
  | FieldUpdateDocumentFieldFieldMeta4
  | FieldUpdateDocumentFieldFieldMeta7
  | FieldUpdateDocumentFieldFieldMeta9
  | FieldUpdateDocumentFieldFieldMeta5
  | FieldUpdateDocumentFieldFieldMeta8
  | FieldUpdateDocumentFieldFieldMeta6;

/**
 * Successful response
 */
export type FieldUpdateDocumentFieldResponseBody = {
  type: FieldUpdateDocumentFieldType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldFieldMeta1
    | FieldUpdateDocumentFieldFieldMeta2
    | FieldUpdateDocumentFieldFieldMeta3
    | FieldUpdateDocumentFieldFieldMeta4
    | FieldUpdateDocumentFieldFieldMeta7
    | FieldUpdateDocumentFieldFieldMeta9
    | FieldUpdateDocumentFieldFieldMeta5
    | FieldUpdateDocumentFieldFieldMeta8
    | FieldUpdateDocumentFieldFieldMeta6
    | null;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestValuesToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$outboundSchema
      .parse(fieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$inboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<
        FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$Outbound
      >
      | undefined;
    defaultValue?: string | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldDocumentsFieldsRequestValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField11$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField11$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField11$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField11$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField11
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField11$ {
  /** @deprecated use `FieldUpdateDocumentFieldField11$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField11$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField11$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField11$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField11$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField11$Outbound;
}

export function fieldUpdateDocumentFieldField11ToJSON(
  fieldUpdateDocumentFieldField11: FieldUpdateDocumentFieldField11,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField11$outboundSchema.parse(
      fieldUpdateDocumentFieldField11,
    ),
  );
}

export function fieldUpdateDocumentFieldField11FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField11' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsValuesToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsValues:
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsValues$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldDocumentsFieldsValues,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldDocumentsFieldsValues$inboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<FieldUpdateDocumentFieldFieldDocumentsFieldsValues$Outbound>
      | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldFieldDocumentsFieldsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField10$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField10$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField10$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField10$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField10
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField10$ {
  /** @deprecated use `FieldUpdateDocumentFieldField10$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField10$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField10$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField10$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField10$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField10$Outbound;
}

export function fieldUpdateDocumentFieldField10ToJSON(
  fieldUpdateDocumentFieldField10: FieldUpdateDocumentFieldField10,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField10$outboundSchema.parse(
      fieldUpdateDocumentFieldField10,
    ),
  );
}

export function fieldUpdateDocumentFieldField10FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField10' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldValues$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldValues$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldValues$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldValues$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldValues$Outbound;
}

export function fieldUpdateDocumentFieldFieldValuesToJSON(
  fieldUpdateDocumentFieldFieldValues: FieldUpdateDocumentFieldFieldValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldValues$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldValues,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldValuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldFieldValues$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?: Array<FieldUpdateDocumentFieldFieldValues$Outbound> | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldFieldValues$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField9$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField9$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField9$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField9$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField9
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField9$ {
  /** @deprecated use `FieldUpdateDocumentFieldField9$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField9$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField9$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField9$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField9$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField9$Outbound;
}

export function fieldUpdateDocumentFieldField9ToJSON(
  fieldUpdateDocumentFieldField9: FieldUpdateDocumentFieldField9,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField9$outboundSchema.parse(
      fieldUpdateDocumentFieldField9,
    ),
  );
}

export function fieldUpdateDocumentFieldField9FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField9' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField8$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField8$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField8$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField8$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField8
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField8$ {
  /** @deprecated use `FieldUpdateDocumentFieldField8$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField8$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField8$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField8$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField8$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField8$Outbound;
}

export function fieldUpdateDocumentFieldField8ToJSON(
  fieldUpdateDocumentFieldField8: FieldUpdateDocumentFieldField8,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField8$outboundSchema.parse(
      fieldUpdateDocumentFieldField8,
    ),
  );
}

export function fieldUpdateDocumentFieldField8FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField8' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField7$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField7$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField7$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField7$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField7
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField7$ {
  /** @deprecated use `FieldUpdateDocumentFieldField7$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField7$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField7$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField7$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField7$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField7$Outbound;
}

export function fieldUpdateDocumentFieldField7ToJSON(
  fieldUpdateDocumentFieldField7: FieldUpdateDocumentFieldField7,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField7$outboundSchema.parse(
      fieldUpdateDocumentFieldField7,
    ),
  );
}

export function fieldUpdateDocumentFieldField7FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField7' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField6$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField6$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField6$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField6$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField6
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody6Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField6$ {
  /** @deprecated use `FieldUpdateDocumentFieldField6$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField6$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField6$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField6$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField6$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField6$Outbound;
}

export function fieldUpdateDocumentFieldField6ToJSON(
  fieldUpdateDocumentFieldField6: FieldUpdateDocumentFieldField6,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField6$outboundSchema.parse(
      fieldUpdateDocumentFieldField6,
    ),
  );
}

export function fieldUpdateDocumentFieldField6FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField6' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$outboundSchema
      .parse(fieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField5$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField5$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField5$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField5$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField5
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody5Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField5$ {
  /** @deprecated use `FieldUpdateDocumentFieldField5$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField5$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField5$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField5$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField5$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField5$Outbound;
}

export function fieldUpdateDocumentFieldField5ToJSON(
  fieldUpdateDocumentFieldField5: FieldUpdateDocumentFieldField5,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField5$outboundSchema.parse(
      fieldUpdateDocumentFieldField5,
    ),
  );
}

export function fieldUpdateDocumentFieldField5FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField5' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsFieldMetaToJSON(
  fieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta:
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldDocumentsFieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField4$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField4$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField4$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField4$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField4
> = z.object({
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBody4Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldFieldDocumentsFieldsFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField4$ {
  /** @deprecated use `FieldUpdateDocumentFieldField4$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField4$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField4$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField4$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField4$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField4$Outbound;
}

export function fieldUpdateDocumentFieldField4ToJSON(
  fieldUpdateDocumentFieldField4: FieldUpdateDocumentFieldField4,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField4$outboundSchema.parse(
      fieldUpdateDocumentFieldField4,
    ),
  );
}

export function fieldUpdateDocumentFieldField4FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField4' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType
  > = z.nativeEnum(FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType);

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType
  > = FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType
  > =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldFieldMeta$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldFieldMeta$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldFieldMeta
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldDocumentsFieldsRequestRequestBodyType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldFieldMeta$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldFieldMetaToJSON(
  fieldUpdateDocumentFieldFieldFieldMeta:
    FieldUpdateDocumentFieldFieldFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldFieldMeta$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldFieldMeta,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField3$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$inboundSchema,
  fieldMeta: z.lazy(() => FieldUpdateDocumentFieldFieldFieldMeta$inboundSchema)
    .optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField3$Outbound = {
  type: string;
  fieldMeta?: FieldUpdateDocumentFieldFieldFieldMeta$Outbound | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField3$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField3$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField3
> = z.object({
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsRequestType$outboundSchema,
  fieldMeta: z.lazy(() => FieldUpdateDocumentFieldFieldFieldMeta$outboundSchema)
    .optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField3$ {
  /** @deprecated use `FieldUpdateDocumentFieldField3$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField3$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField3$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField3$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField3$Outbound;
}

export function fieldUpdateDocumentFieldField3ToJSON(
  fieldUpdateDocumentFieldField3: FieldUpdateDocumentFieldField3,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField3$outboundSchema.parse(
      fieldUpdateDocumentFieldField3,
    ),
  );
}

export function fieldUpdateDocumentFieldField3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldDocumentsFieldsType> = z
    .nativeEnum(FieldUpdateDocumentFieldFieldDocumentsFieldsType);

/** @internal */
export const FieldUpdateDocumentFieldFieldDocumentsFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldDocumentsFieldsType> =
    FieldUpdateDocumentFieldFieldDocumentsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldDocumentsFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldDocumentsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldDocumentsFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldField2$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsType$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField2$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField2$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField2$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField2
> = z.object({
  type: FieldUpdateDocumentFieldFieldDocumentsFieldsType$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField2$ {
  /** @deprecated use `FieldUpdateDocumentFieldField2$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField2$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField2$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField2$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField2$Outbound;
}

export function fieldUpdateDocumentFieldField2ToJSON(
  fieldUpdateDocumentFieldField2: FieldUpdateDocumentFieldField2,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField2$outboundSchema.parse(
      fieldUpdateDocumentFieldField2,
    ),
  );
}

export function fieldUpdateDocumentFieldField2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldType$inboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldFieldType
> = z.nativeEnum(FieldUpdateDocumentFieldFieldType);

/** @internal */
export const FieldUpdateDocumentFieldFieldType$outboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldFieldType
> = FieldUpdateDocumentFieldFieldType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldType$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldField1$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldFieldType$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldField1$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldField1$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField1$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField1
> = z.object({
  type: FieldUpdateDocumentFieldFieldType$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField1$ {
  /** @deprecated use `FieldUpdateDocumentFieldField1$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField1$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField1$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField1$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField1$Outbound;
}

export function fieldUpdateDocumentFieldField1ToJSON(
  fieldUpdateDocumentFieldField1: FieldUpdateDocumentFieldField1,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField1$outboundSchema.parse(
      fieldUpdateDocumentFieldField1,
    ),
  );
}

export function fieldUpdateDocumentFieldField1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldField$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldField1$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField2$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField3$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField4$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField5$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField6$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField7$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField8$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField9$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField10$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField11$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldField$Outbound =
  | FieldUpdateDocumentFieldField1$Outbound
  | FieldUpdateDocumentFieldField2$Outbound
  | FieldUpdateDocumentFieldField3$Outbound
  | FieldUpdateDocumentFieldField4$Outbound
  | FieldUpdateDocumentFieldField5$Outbound
  | FieldUpdateDocumentFieldField6$Outbound
  | FieldUpdateDocumentFieldField7$Outbound
  | FieldUpdateDocumentFieldField8$Outbound
  | FieldUpdateDocumentFieldField9$Outbound
  | FieldUpdateDocumentFieldField10$Outbound
  | FieldUpdateDocumentFieldField11$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldField$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldField$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldField
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldField1$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField2$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField3$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField4$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField5$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField6$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField7$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField8$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField9$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField10$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldField11$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldField$ {
  /** @deprecated use `FieldUpdateDocumentFieldField$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldField$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldField$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldField$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldField$Outbound;
}

export function fieldUpdateDocumentFieldFieldToJSON(
  fieldUpdateDocumentFieldField: FieldUpdateDocumentFieldField,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldField$outboundSchema.parse(
      fieldUpdateDocumentFieldField,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldField' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldRequestBody$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  field: z.union([
    z.lazy(() => FieldUpdateDocumentFieldField1$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField2$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField3$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField4$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField5$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField6$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField7$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField8$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField9$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField10$inboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField11$inboundSchema),
  ]),
});

/** @internal */
export type FieldUpdateDocumentFieldRequestBody$Outbound = {
  documentId: number;
  field:
    | FieldUpdateDocumentFieldField1$Outbound
    | FieldUpdateDocumentFieldField2$Outbound
    | FieldUpdateDocumentFieldField3$Outbound
    | FieldUpdateDocumentFieldField4$Outbound
    | FieldUpdateDocumentFieldField5$Outbound
    | FieldUpdateDocumentFieldField6$Outbound
    | FieldUpdateDocumentFieldField7$Outbound
    | FieldUpdateDocumentFieldField8$Outbound
    | FieldUpdateDocumentFieldField9$Outbound
    | FieldUpdateDocumentFieldField10$Outbound
    | FieldUpdateDocumentFieldField11$Outbound;
};

/** @internal */
export const FieldUpdateDocumentFieldRequestBody$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldRequestBody$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldRequestBody
> = z.object({
  documentId: z.number(),
  field: z.union([
    z.lazy(() => FieldUpdateDocumentFieldField1$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField2$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField3$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField4$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField5$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField6$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField7$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField8$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField9$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField10$outboundSchema),
    z.lazy(() => FieldUpdateDocumentFieldField11$outboundSchema),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldRequestBody$ {
  /** @deprecated use `FieldUpdateDocumentFieldRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldRequestBody$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldRequestBody$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldRequestBody$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldRequestBody$Outbound;
}

export function fieldUpdateDocumentFieldRequestBodyToJSON(
  fieldUpdateDocumentFieldRequestBody: FieldUpdateDocumentFieldRequestBody,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldRequestBody$outboundSchema.parse(
      fieldUpdateDocumentFieldRequestBody,
    ),
  );
}

export function fieldUpdateDocumentFieldRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldType$inboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldType
> = z.nativeEnum(FieldUpdateDocumentFieldType);

/** @internal */
export const FieldUpdateDocumentFieldType$outboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldType
> = FieldUpdateDocumentFieldType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldType$ {
  /** @deprecated use `FieldUpdateDocumentFieldType$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldType$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValuesToJSON(
  fieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$outboundSchema
      .parse(fieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues),
  );
}

export function fieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta9$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta9$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta9$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta9
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseValues$outboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta9$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta9$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta9$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta9$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta9$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta9$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta9ToJSON(
  fieldUpdateDocumentFieldFieldMeta9: FieldUpdateDocumentFieldFieldMeta9,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta9$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta9,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta9' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaDocumentsFieldsValuesToJSON(
  fieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaDocumentsFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta8$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$inboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$Outbound>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta8$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta8$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta8
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldFieldMetaDocumentsFieldsValues$outboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta8$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta8$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta8$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta8$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta8$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta8$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta8ToJSON(
  fieldUpdateDocumentFieldFieldMeta8: FieldUpdateDocumentFieldFieldMeta8,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta8$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta8,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta8' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaValues$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMetaValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaValues$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMetaValues$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMetaValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaValues$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMetaValues$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaValuesToJSON(
  fieldUpdateDocumentFieldFieldMetaValues:
    FieldUpdateDocumentFieldFieldMetaValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMetaValues$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMetaValues,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta7$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema,
  values: z.array(
    z.lazy(() => FieldUpdateDocumentFieldFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldFieldMetaValues$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta7$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta7$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta7
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema,
  values: z.array(
    z.lazy(() => FieldUpdateDocumentFieldFieldMetaValues$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta7$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta7$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta7$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta7$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta7$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta7$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta7ToJSON(
  fieldUpdateDocumentFieldFieldMeta7: FieldUpdateDocumentFieldFieldMeta7,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta7$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta7,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta7' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta6$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta6$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta6$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta6
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta6$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta6$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta6$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta6$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta6$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta6$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta6ToJSON(
  fieldUpdateDocumentFieldFieldMeta6: FieldUpdateDocumentFieldFieldMeta6,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta6$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta6,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta6' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta5$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta5$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta5$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta5
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta5$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta5$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta5$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta5$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta5$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta5$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta5ToJSON(
  fieldUpdateDocumentFieldFieldMeta5: FieldUpdateDocumentFieldFieldMeta5,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta5$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta5,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta5' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta4$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta4$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta4$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta4
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponse200Type$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta4$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta4$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta4$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta4$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta4$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta4$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta4ToJSON(
  fieldUpdateDocumentFieldFieldMeta4: FieldUpdateDocumentFieldFieldMeta4,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta4$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta4,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta4' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType
  > =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta3$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta3$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta3$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta3
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsResponseType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta3$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta3$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta3$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta3$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta3$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta3ToJSON(
  fieldUpdateDocumentFieldFieldMeta3: FieldUpdateDocumentFieldFieldMeta3,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta3$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta3,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType> =
    z.nativeEnum(FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType);

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType> =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta2$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta2$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta2$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta2
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldFieldMetaDocumentsFieldsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta2$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta2$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta2$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta2$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta2$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta2ToJSON(
  fieldUpdateDocumentFieldFieldMeta2: FieldUpdateDocumentFieldFieldMeta2,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta2$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta2,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaType> = z.nativeEnum(
    FieldUpdateDocumentFieldFieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldFieldMetaType> =
    FieldUpdateDocumentFieldFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldFieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta1$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta1$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta1$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta1
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldFieldMetaType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta1$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta1$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta1$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta1$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta1$Outbound;
}

export function fieldUpdateDocumentFieldFieldMeta1ToJSON(
  fieldUpdateDocumentFieldFieldMeta1: FieldUpdateDocumentFieldFieldMeta1,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta1$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta1,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldFieldMeta1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta1$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta2$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta3$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta4$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta7$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta9$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta5$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta8$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta6$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldFieldMeta$Outbound =
  | FieldUpdateDocumentFieldFieldMeta1$Outbound
  | FieldUpdateDocumentFieldFieldMeta2$Outbound
  | FieldUpdateDocumentFieldFieldMeta3$Outbound
  | FieldUpdateDocumentFieldFieldMeta4$Outbound
  | FieldUpdateDocumentFieldFieldMeta7$Outbound
  | FieldUpdateDocumentFieldFieldMeta9$Outbound
  | FieldUpdateDocumentFieldFieldMeta5$Outbound
  | FieldUpdateDocumentFieldFieldMeta8$Outbound
  | FieldUpdateDocumentFieldFieldMeta6$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldFieldMeta$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldFieldMeta
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta1$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta2$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta3$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta4$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta7$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta9$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta5$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta8$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldFieldMeta$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldFieldMetaToJSON(
  fieldUpdateDocumentFieldFieldMeta: FieldUpdateDocumentFieldFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldFieldMeta$outboundSchema.parse(
      fieldUpdateDocumentFieldFieldMeta,
    ),
  );
}

export function fieldUpdateDocumentFieldFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldResponseBody$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta1$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta2$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta3$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta4$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta7$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta9$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta5$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta8$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldResponseBody$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldFieldMeta1$Outbound
    | FieldUpdateDocumentFieldFieldMeta2$Outbound
    | FieldUpdateDocumentFieldFieldMeta3$Outbound
    | FieldUpdateDocumentFieldFieldMeta4$Outbound
    | FieldUpdateDocumentFieldFieldMeta7$Outbound
    | FieldUpdateDocumentFieldFieldMeta9$Outbound
    | FieldUpdateDocumentFieldFieldMeta5$Outbound
    | FieldUpdateDocumentFieldFieldMeta8$Outbound
    | FieldUpdateDocumentFieldFieldMeta6$Outbound
    | null;
};

/** @internal */
export const FieldUpdateDocumentFieldResponseBody$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldResponseBody$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldResponseBody
> = z.object({
  type: FieldUpdateDocumentFieldType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta1$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta2$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta3$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta4$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta7$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta9$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta5$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta8$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldResponseBody$ {
  /** @deprecated use `FieldUpdateDocumentFieldResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldResponseBody$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldResponseBody$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldResponseBody$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldResponseBody$Outbound;
}

export function fieldUpdateDocumentFieldResponseBodyToJSON(
  fieldUpdateDocumentFieldResponseBody: FieldUpdateDocumentFieldResponseBody,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldResponseBody$outboundSchema.parse(
      fieldUpdateDocumentFieldResponseBody,
    ),
  );
}

export function fieldUpdateDocumentFieldResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldResponseBody' from JSON`,
  );
}
