/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientDeleteDocumentRecipientRequestBody = {
  recipientId: number;
};

/**
 * Successful response
 */
export type RecipientDeleteDocumentRecipientResponseBody = {
  success: boolean;
};

/** @internal */
export const RecipientDeleteDocumentRecipientRequestBody$inboundSchema:
  z.ZodType<
    RecipientDeleteDocumentRecipientRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipientId: z.number(),
  });

/** @internal */
export type RecipientDeleteDocumentRecipientRequestBody$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientDeleteDocumentRecipientRequestBody$outboundSchema:
  z.ZodType<
    RecipientDeleteDocumentRecipientRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientDeleteDocumentRecipientRequestBody
  > = z.object({
    recipientId: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientDeleteDocumentRecipientRequestBody$ {
  /** @deprecated use `RecipientDeleteDocumentRecipientRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientDeleteDocumentRecipientRequestBody$inboundSchema;
  /** @deprecated use `RecipientDeleteDocumentRecipientRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientDeleteDocumentRecipientRequestBody$outboundSchema;
  /** @deprecated use `RecipientDeleteDocumentRecipientRequestBody$Outbound` instead. */
  export type Outbound = RecipientDeleteDocumentRecipientRequestBody$Outbound;
}

export function recipientDeleteDocumentRecipientRequestBodyToJSON(
  recipientDeleteDocumentRecipientRequestBody:
    RecipientDeleteDocumentRecipientRequestBody,
): string {
  return JSON.stringify(
    RecipientDeleteDocumentRecipientRequestBody$outboundSchema.parse(
      recipientDeleteDocumentRecipientRequestBody,
    ),
  );
}

export function recipientDeleteDocumentRecipientRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientDeleteDocumentRecipientRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientDeleteDocumentRecipientRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientDeleteDocumentRecipientRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientDeleteDocumentRecipientResponseBody$inboundSchema:
  z.ZodType<
    RecipientDeleteDocumentRecipientResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    success: z.boolean(),
  });

/** @internal */
export type RecipientDeleteDocumentRecipientResponseBody$Outbound = {
  success: boolean;
};

/** @internal */
export const RecipientDeleteDocumentRecipientResponseBody$outboundSchema:
  z.ZodType<
    RecipientDeleteDocumentRecipientResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientDeleteDocumentRecipientResponseBody
  > = z.object({
    success: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientDeleteDocumentRecipientResponseBody$ {
  /** @deprecated use `RecipientDeleteDocumentRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientDeleteDocumentRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientDeleteDocumentRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientDeleteDocumentRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientDeleteDocumentRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientDeleteDocumentRecipientResponseBody$Outbound;
}

export function recipientDeleteDocumentRecipientResponseBodyToJSON(
  recipientDeleteDocumentRecipientResponseBody:
    RecipientDeleteDocumentRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientDeleteDocumentRecipientResponseBody$outboundSchema.parse(
      recipientDeleteDocumentRecipientResponseBody,
    ),
  );
}

export function recipientDeleteDocumentRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientDeleteDocumentRecipientResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientDeleteDocumentRecipientResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientDeleteDocumentRecipientResponseBody' from JSON`,
  );
}
