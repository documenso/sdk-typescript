/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FieldDeleteTemplateFieldRequestBody = {
  fieldId: number;
};

/** @internal */
export const FieldDeleteTemplateFieldRequestBody$inboundSchema: z.ZodType<
  FieldDeleteTemplateFieldRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  fieldId: z.number(),
});

/** @internal */
export type FieldDeleteTemplateFieldRequestBody$Outbound = {
  fieldId: number;
};

/** @internal */
export const FieldDeleteTemplateFieldRequestBody$outboundSchema: z.ZodType<
  FieldDeleteTemplateFieldRequestBody$Outbound,
  z.ZodTypeDef,
  FieldDeleteTemplateFieldRequestBody
> = z.object({
  fieldId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteTemplateFieldRequestBody$ {
  /** @deprecated use `FieldDeleteTemplateFieldRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldDeleteTemplateFieldRequestBody$inboundSchema;
  /** @deprecated use `FieldDeleteTemplateFieldRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldDeleteTemplateFieldRequestBody$outboundSchema;
  /** @deprecated use `FieldDeleteTemplateFieldRequestBody$Outbound` instead. */
  export type Outbound = FieldDeleteTemplateFieldRequestBody$Outbound;
}

export function fieldDeleteTemplateFieldRequestBodyToJSON(
  fieldDeleteTemplateFieldRequestBody: FieldDeleteTemplateFieldRequestBody,
): string {
  return JSON.stringify(
    FieldDeleteTemplateFieldRequestBody$outboundSchema.parse(
      fieldDeleteTemplateFieldRequestBody,
    ),
  );
}

export function fieldDeleteTemplateFieldRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldDeleteTemplateFieldRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldDeleteTemplateFieldRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldDeleteTemplateFieldRequestBody' from JSON`,
  );
}
