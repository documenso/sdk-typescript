/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentGetDocumentWithDetailsByIdRequest = {
  documentId: number;
  /**
   * Filter documents by folder ID
   */
  folderId?: string | undefined;
};

export const DocumentGetDocumentWithDetailsByIdVisibility = {
  Everyone: "EVERYONE",
  ManagerAndAbove: "MANAGER_AND_ABOVE",
  Admin: "ADMIN",
} as const;
export type DocumentGetDocumentWithDetailsByIdVisibility = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdVisibility
>;

export const DocumentGetDocumentWithDetailsByIdStatus = {
  Draft: "DRAFT",
  Pending: "PENDING",
  Completed: "COMPLETED",
  Rejected: "REJECTED",
} as const;
export type DocumentGetDocumentWithDetailsByIdStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdStatus
>;

export const DocumentGetDocumentWithDetailsByIdSource = {
  Document: "DOCUMENT",
  Template: "TEMPLATE",
  TemplateDirectLink: "TEMPLATE_DIRECT_LINK",
} as const;
export type DocumentGetDocumentWithDetailsByIdSource = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSource
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const DocumentGetDocumentWithDetailsByIdGlobalAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type DocumentGetDocumentWithDetailsByIdGlobalAccessAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdGlobalAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export const DocumentGetDocumentWithDetailsByIdGlobalActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
} as const;
/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export type DocumentGetDocumentWithDetailsByIdGlobalActionAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdGlobalActionAuth
>;

export type DocumentGetDocumentWithDetailsByIdAuthOptions = {
  globalAccessAuth: Array<DocumentGetDocumentWithDetailsByIdGlobalAccessAuth>;
  globalActionAuth: Array<DocumentGetDocumentWithDetailsByIdGlobalActionAuth>;
};

export type DocumentGetDocumentWithDetailsByIdFormValues =
  | string
  | boolean
  | number;

export const DocumentGetDocumentWithDetailsByIdDocumentDataType = {
  S3Path: "S3_PATH",
  Bytes: "BYTES",
  Bytes64: "BYTES_64",
} as const;
export type DocumentGetDocumentWithDetailsByIdDocumentDataType = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdDocumentDataType
>;

export type DocumentGetDocumentWithDetailsByIdDocumentData = {
  type: DocumentGetDocumentWithDetailsByIdDocumentDataType;
  id: string;
  data: string;
  initialData: string;
};

export const DocumentGetDocumentWithDetailsByIdSigningOrder = {
  Parallel: "PARALLEL",
  Sequential: "SEQUENTIAL",
} as const;
export type DocumentGetDocumentWithDetailsByIdSigningOrder = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSigningOrder
>;

export const DocumentGetDocumentWithDetailsByIdDistributionMethod = {
  Email: "EMAIL",
  None: "NONE",
} as const;
export type DocumentGetDocumentWithDetailsByIdDistributionMethod = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdDistributionMethod
>;

export type DocumentGetDocumentWithDetailsByIdEmailSettings = {
  /**
   * Whether to send an email to all recipients that the document is ready for them to sign.
   */
  recipientSigningRequest?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who was removed from a pending document.
   */
  recipientRemoved?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when a recipient has signed the document.
   */
  recipientSigned?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who has just signed the document indicating that there are still other recipients who need to sign the document. This will only be sent if the document is still pending after the recipient has signed.
   */
  documentPending?: boolean | undefined;
  /**
   * Whether to send an email to all recipients when the document is complete.
   */
  documentCompleted?: boolean | undefined;
  /**
   * Whether to send an email to all recipients if a pending document has been deleted.
   */
  documentDeleted?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when the document is complete.
   */
  ownerDocumentCompleted?: boolean | undefined;
};

export type DocumentGetDocumentWithDetailsByIdDocumentMeta = {
  signingOrder: DocumentGetDocumentWithDetailsByIdSigningOrder;
  distributionMethod: DocumentGetDocumentWithDetailsByIdDistributionMethod;
  id: string;
  subject: string | null;
  message: string | null;
  timezone: string | null;
  password: string | null;
  dateFormat: string | null;
  documentId: number;
  redirectUrl: string | null;
  typedSignatureEnabled: boolean;
  uploadSignatureEnabled: boolean;
  drawSignatureEnabled: boolean;
  allowDictateNextSigner: boolean;
  language: string;
  emailSettings: DocumentGetDocumentWithDetailsByIdEmailSettings | null;
};

export const DocumentGetDocumentWithDetailsByIdFolderType = {
  Document: "DOCUMENT",
  Template: "TEMPLATE",
} as const;
export type DocumentGetDocumentWithDetailsByIdFolderType = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdFolderType
>;

export const DocumentGetDocumentWithDetailsByIdFolderVisibility = {
  Everyone: "EVERYONE",
  ManagerAndAbove: "MANAGER_AND_ABOVE",
  Admin: "ADMIN",
} as const;
export type DocumentGetDocumentWithDetailsByIdFolderVisibility = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdFolderVisibility
>;

export type DocumentGetDocumentWithDetailsByIdFolder = {
  id: string;
  name: string;
  type: DocumentGetDocumentWithDetailsByIdFolderType;
  visibility: DocumentGetDocumentWithDetailsByIdFolderVisibility;
  userId: number;
  teamId: number;
  pinned: boolean;
  parentId: string | null;
  createdAt: string;
  updatedAt: string;
};

export const DocumentGetDocumentWithDetailsByIdRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type DocumentGetDocumentWithDetailsByIdRole = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdRole
>;

export const DocumentGetDocumentWithDetailsByIdReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type DocumentGetDocumentWithDetailsByIdReadStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdReadStatus
>;

export const DocumentGetDocumentWithDetailsByIdSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type DocumentGetDocumentWithDetailsByIdSigningStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSigningStatus
>;

export const DocumentGetDocumentWithDetailsByIdSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type DocumentGetDocumentWithDetailsByIdSendStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const DocumentGetDocumentWithDetailsByIdAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type DocumentGetDocumentWithDetailsByIdAccessAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const DocumentGetDocumentWithDetailsByIdActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type DocumentGetDocumentWithDetailsByIdActionAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdActionAuth
>;

export type DocumentGetDocumentWithDetailsByIdRecipientAuthOptions = {
  accessAuth: Array<DocumentGetDocumentWithDetailsByIdAccessAuth>;
  actionAuth: Array<DocumentGetDocumentWithDetailsByIdActionAuth>;
};

export type DocumentGetDocumentWithDetailsByIdRecipient = {
  role: DocumentGetDocumentWithDetailsByIdRole;
  readStatus: DocumentGetDocumentWithDetailsByIdReadStatus;
  signingStatus: DocumentGetDocumentWithDetailsByIdSigningStatus;
  sendStatus: DocumentGetDocumentWithDetailsByIdSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: DocumentGetDocumentWithDetailsByIdRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

export const DocumentGetDocumentWithDetailsByIdFieldType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type DocumentGetDocumentWithDetailsByIdFieldType = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdFieldType
>;

export const DocumentGetDocumentWithDetailsByIdTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeDropdown = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeDropdown
>;

export type DocumentGetDocumentWithDetailsByIdValue3 = {
  value: string;
};

export type DocumentGetDocumentWithDetailsByIdFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeDropdown;
  values?: Array<DocumentGetDocumentWithDetailsByIdValue3> | undefined;
  defaultValue?: string | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeCheckbox = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeCheckbox
>;

export type DocumentGetDocumentWithDetailsByIdValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeCheckbox;
  values?: Array<DocumentGetDocumentWithDetailsByIdValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeRadio = {
  Radio: "radio",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeRadio = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeRadio
>;

export type DocumentGetDocumentWithDetailsByIdValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentGetDocumentWithDetailsByIdFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeRadio;
  values?: Array<DocumentGetDocumentWithDetailsByIdValue1> | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeNumber = {
  Number: "number",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeNumber = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeNumber
>;

export const DocumentGetDocumentWithDetailsByIdTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type DocumentGetDocumentWithDetailsByIdTextAlign6 = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTextAlign6
>;

export type DocumentGetDocumentWithDetailsByIdFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: DocumentGetDocumentWithDetailsByIdTextAlign6 | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeText = {
  Text: "text",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeText = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeText
>;

export const DocumentGetDocumentWithDetailsByIdTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type DocumentGetDocumentWithDetailsByIdTextAlign5 = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTextAlign5
>;

export type DocumentGetDocumentWithDetailsByIdFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: DocumentGetDocumentWithDetailsByIdTextAlign5 | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeDate = {
  Date: "date",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeDate = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeDate
>;

export const DocumentGetDocumentWithDetailsByIdTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type DocumentGetDocumentWithDetailsByIdTextAlign4 = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTextAlign4
>;

export type DocumentGetDocumentWithDetailsByIdFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeDate;
  fontSize?: number | undefined;
  textAlign?: DocumentGetDocumentWithDetailsByIdTextAlign4 | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeEmail = {
  Email: "email",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeEmail = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeEmail
>;

export const DocumentGetDocumentWithDetailsByIdTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type DocumentGetDocumentWithDetailsByIdTextAlign3 = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTextAlign3
>;

export type DocumentGetDocumentWithDetailsByIdFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeEmail;
  fontSize?: number | undefined;
  textAlign?: DocumentGetDocumentWithDetailsByIdTextAlign3 | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeName = {
  Name: "name",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeName = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeName
>;

export const DocumentGetDocumentWithDetailsByIdTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type DocumentGetDocumentWithDetailsByIdTextAlign2 = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTextAlign2
>;

export type DocumentGetDocumentWithDetailsByIdFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeName;
  fontSize?: number | undefined;
  textAlign?: DocumentGetDocumentWithDetailsByIdTextAlign2 | undefined;
};

export const DocumentGetDocumentWithDetailsByIdTypeInitials = {
  Initials: "initials",
} as const;
export type DocumentGetDocumentWithDetailsByIdTypeInitials = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTypeInitials
>;

export const DocumentGetDocumentWithDetailsByIdTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type DocumentGetDocumentWithDetailsByIdTextAlign1 = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdTextAlign1
>;

export type DocumentGetDocumentWithDetailsByIdFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdTypeInitials;
  fontSize?: number | undefined;
  textAlign?: DocumentGetDocumentWithDetailsByIdTextAlign1 | undefined;
};

export type DocumentGetDocumentWithDetailsByIdFieldMetaUnion =
  | DocumentGetDocumentWithDetailsByIdFieldMetaInitials
  | DocumentGetDocumentWithDetailsByIdFieldMetaName
  | DocumentGetDocumentWithDetailsByIdFieldMetaEmail
  | DocumentGetDocumentWithDetailsByIdFieldMetaDate
  | DocumentGetDocumentWithDetailsByIdFieldMetaText
  | DocumentGetDocumentWithDetailsByIdFieldMetaNumber
  | DocumentGetDocumentWithDetailsByIdFieldMetaRadio
  | DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox
  | DocumentGetDocumentWithDetailsByIdFieldMetaDropdown;

export type DocumentGetDocumentWithDetailsByIdField = {
  type: DocumentGetDocumentWithDetailsByIdFieldType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | DocumentGetDocumentWithDetailsByIdFieldMetaInitials
    | DocumentGetDocumentWithDetailsByIdFieldMetaName
    | DocumentGetDocumentWithDetailsByIdFieldMetaEmail
    | DocumentGetDocumentWithDetailsByIdFieldMetaDate
    | DocumentGetDocumentWithDetailsByIdFieldMetaText
    | DocumentGetDocumentWithDetailsByIdFieldMetaNumber
    | DocumentGetDocumentWithDetailsByIdFieldMetaRadio
    | DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox
    | DocumentGetDocumentWithDetailsByIdFieldMetaDropdown
    | null;
};

/**
 * Successful response
 */
export type DocumentGetDocumentWithDetailsByIdResponse = {
  visibility: DocumentGetDocumentWithDetailsByIdVisibility;
  status: DocumentGetDocumentWithDetailsByIdStatus;
  source: DocumentGetDocumentWithDetailsByIdSource;
  id: number;
  /**
   * A custom external ID you can use to identify the document.
   */
  externalId: string | null;
  /**
   * The ID of the user that created this document.
   */
  userId: number;
  authOptions: DocumentGetDocumentWithDetailsByIdAuthOptions | null;
  formValues: { [k: string]: string | boolean | number } | null;
  title: string;
  documentDataId: string;
  createdAt: string;
  updatedAt: string;
  completedAt: string | null;
  deletedAt: string | null;
  teamId: number;
  templateId: number | null;
  folderId: string | null;
  documentData: DocumentGetDocumentWithDetailsByIdDocumentData;
  documentMeta: DocumentGetDocumentWithDetailsByIdDocumentMeta | null;
  folder: DocumentGetDocumentWithDetailsByIdFolder | null;
  recipients: Array<DocumentGetDocumentWithDetailsByIdRecipient>;
  fields: Array<DocumentGetDocumentWithDetailsByIdField>;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRequest$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  folderId: z.string().optional(),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdRequest$Outbound = {
  documentId: number;
  folderId?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRequest$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRequest$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdRequest
  > = z.object({
    documentId: z.number(),
    folderId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRequest$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRequest$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRequest$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRequest$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdRequest$Outbound;
}

export function documentGetDocumentWithDetailsByIdRequestToJSON(
  documentGetDocumentWithDetailsByIdRequest:
    DocumentGetDocumentWithDetailsByIdRequest,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdRequest$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdRequest,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdRequest' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdVisibility> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdVisibility);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdVisibility> =
    DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdVisibility$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdStatus> =
    DocumentGetDocumentWithDetailsByIdStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSource$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSource> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSource);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSource$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSource> =
    DocumentGetDocumentWithDetailsByIdSource$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSource$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSource$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSource$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSource$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSource$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalAccessAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdGlobalAccessAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalAccessAuth> =
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalActionAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdGlobalActionAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalActionAuth> =
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdGlobalActionAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    globalAccessAuth: z.array(
      DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema,
    ),
    globalActionAuth: z.array(
      DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound = {
  globalAccessAuth: Array<string>;
  globalActionAuth: Array<string>;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdAuthOptions
  > = z.object({
    globalAccessAuth: z.array(
      DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema,
    ),
    globalActionAuth: z.array(
      DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdAuthOptions$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound;
}

export function documentGetDocumentWithDetailsByIdAuthOptionsToJSON(
  documentGetDocumentWithDetailsByIdAuthOptions:
    DocumentGetDocumentWithDetailsByIdAuthOptions,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdAuthOptions,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdAuthOptions' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFormValues,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.boolean(), z.number()]);

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFormValues$Outbound =
  | string
  | boolean
  | number;

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFormValues$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFormValues
  > = z.union([z.string(), z.boolean(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFormValues$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFormValues$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFormValues$Outbound;
}

export function documentGetDocumentWithDetailsByIdFormValuesToJSON(
  documentGetDocumentWithDetailsByIdFormValues:
    DocumentGetDocumentWithDetailsByIdFormValues,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFormValues,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFormValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFormValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFormValues' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentDataType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDocumentDataType> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdDocumentDataType);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentDataType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDocumentDataType> =
    DocumentGetDocumentWithDetailsByIdDocumentDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdDocumentDataType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentDataType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentDataType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentDataType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentDataType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentData$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdDocumentData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: DocumentGetDocumentWithDetailsByIdDocumentDataType$inboundSchema,
    id: z.string(),
    data: z.string(),
    initialData: z.string(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdDocumentData$Outbound = {
  type: string;
  id: string;
  data: string;
  initialData: string;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentData$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdDocumentData$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdDocumentData
  > = z.object({
    type: DocumentGetDocumentWithDetailsByIdDocumentDataType$outboundSchema,
    id: z.string(),
    data: z.string(),
    initialData: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdDocumentData$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentData$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentData$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentData$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentData$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentData$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdDocumentData$Outbound;
}

export function documentGetDocumentWithDetailsByIdDocumentDataToJSON(
  documentGetDocumentWithDetailsByIdDocumentData:
    DocumentGetDocumentWithDetailsByIdDocumentData,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdDocumentData$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdDocumentData,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdDocumentDataFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdDocumentData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdDocumentData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdDocumentData' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningOrder> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSigningOrder);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningOrder> =
    DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSigningOrder$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDistributionMethod> =
    z.nativeEnum(DocumentGetDocumentWithDetailsByIdDistributionMethod);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDistributionMethod> =
    DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdDistributionMethod$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdEmailSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipientSigningRequest: z.boolean().default(true),
    recipientRemoved: z.boolean().default(true),
    recipientSigned: z.boolean().default(true),
    documentPending: z.boolean().default(true),
    documentCompleted: z.boolean().default(true),
    documentDeleted: z.boolean().default(true),
    ownerDocumentCompleted: z.boolean().default(true),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound = {
  recipientSigningRequest: boolean;
  recipientRemoved: boolean;
  recipientSigned: boolean;
  documentPending: boolean;
  documentCompleted: boolean;
  documentDeleted: boolean;
  ownerDocumentCompleted: boolean;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdEmailSettings
  > = z.object({
    recipientSigningRequest: z.boolean().default(true),
    recipientRemoved: z.boolean().default(true),
    recipientSigned: z.boolean().default(true),
    documentPending: z.boolean().default(true),
    documentCompleted: z.boolean().default(true),
    documentDeleted: z.boolean().default(true),
    ownerDocumentCompleted: z.boolean().default(true),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdEmailSettings$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound;
}

export function documentGetDocumentWithDetailsByIdEmailSettingsToJSON(
  documentGetDocumentWithDetailsByIdEmailSettings:
    DocumentGetDocumentWithDetailsByIdEmailSettings,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdEmailSettings,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdEmailSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdEmailSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdEmailSettings' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentMeta$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdDocumentMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    signingOrder: DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema,
    distributionMethod:
      DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema,
    id: z.string(),
    subject: z.nullable(z.string()),
    message: z.nullable(z.string()),
    timezone: z.nullable(z.string()),
    password: z.nullable(z.string()),
    dateFormat: z.nullable(z.string()),
    documentId: z.number(),
    redirectUrl: z.nullable(z.string()),
    typedSignatureEnabled: z.boolean(),
    uploadSignatureEnabled: z.boolean(),
    drawSignatureEnabled: z.boolean(),
    allowDictateNextSigner: z.boolean(),
    language: z.string(),
    emailSettings: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema
      ),
    ),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdDocumentMeta$Outbound = {
  signingOrder: string;
  distributionMethod: string;
  id: string;
  subject: string | null;
  message: string | null;
  timezone: string | null;
  password: string | null;
  dateFormat: string | null;
  documentId: number;
  redirectUrl: string | null;
  typedSignatureEnabled: boolean;
  uploadSignatureEnabled: boolean;
  drawSignatureEnabled: boolean;
  allowDictateNextSigner: boolean;
  language: string;
  emailSettings:
    | DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound
    | null;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentMeta$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdDocumentMeta$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdDocumentMeta
  > = z.object({
    signingOrder: DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema,
    distributionMethod:
      DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema,
    id: z.string(),
    subject: z.nullable(z.string()),
    message: z.nullable(z.string()),
    timezone: z.nullable(z.string()),
    password: z.nullable(z.string()),
    dateFormat: z.nullable(z.string()),
    documentId: z.number(),
    redirectUrl: z.nullable(z.string()),
    typedSignatureEnabled: z.boolean(),
    uploadSignatureEnabled: z.boolean(),
    drawSignatureEnabled: z.boolean(),
    allowDictateNextSigner: z.boolean(),
    language: z.string(),
    emailSettings: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdDocumentMeta$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentMeta$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentMeta$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentMeta$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdDocumentMeta$Outbound;
}

export function documentGetDocumentWithDetailsByIdDocumentMetaToJSON(
  documentGetDocumentWithDetailsByIdDocumentMeta:
    DocumentGetDocumentWithDetailsByIdDocumentMeta,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdDocumentMeta$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdDocumentMeta,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdDocumentMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdDocumentMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdDocumentMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdDocumentMeta' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFolderType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFolderType> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdFolderType);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFolderType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFolderType> =
    DocumentGetDocumentWithDetailsByIdFolderType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFolderType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolderType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFolderType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolderType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFolderType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFolderVisibility$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFolderVisibility> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdFolderVisibility);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFolderVisibility$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFolderVisibility> =
    DocumentGetDocumentWithDetailsByIdFolderVisibility$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFolderVisibility$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolderVisibility$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFolderVisibility$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolderVisibility$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFolderVisibility$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFolder$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdFolder,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  type: DocumentGetDocumentWithDetailsByIdFolderType$inboundSchema,
  visibility: DocumentGetDocumentWithDetailsByIdFolderVisibility$inboundSchema,
  userId: z.number(),
  teamId: z.number(),
  pinned: z.boolean(),
  parentId: z.nullable(z.string()),
  createdAt: z.string(),
  updatedAt: z.string(),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFolder$Outbound = {
  id: string;
  name: string;
  type: string;
  visibility: string;
  userId: number;
  teamId: number;
  pinned: boolean;
  parentId: string | null;
  createdAt: string;
  updatedAt: string;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFolder$outboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdFolder$Outbound,
  z.ZodTypeDef,
  DocumentGetDocumentWithDetailsByIdFolder
> = z.object({
  id: z.string(),
  name: z.string(),
  type: DocumentGetDocumentWithDetailsByIdFolderType$outboundSchema,
  visibility: DocumentGetDocumentWithDetailsByIdFolderVisibility$outboundSchema,
  userId: z.number(),
  teamId: z.number(),
  pinned: z.boolean(),
  parentId: z.nullable(z.string()),
  createdAt: z.string(),
  updatedAt: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFolder$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolder$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFolder$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolder$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFolder$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFolder$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFolder$Outbound;
}

export function documentGetDocumentWithDetailsByIdFolderToJSON(
  documentGetDocumentWithDetailsByIdFolder:
    DocumentGetDocumentWithDetailsByIdFolder,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFolder$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFolder,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFolderFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFolder,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFolder$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFolder' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRole$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdRole> = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdRole,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRole$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdRole> =
    DocumentGetDocumentWithDetailsByIdRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRole$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRole$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRole$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRole$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRole$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdReadStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdReadStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdReadStatus> =
    DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdReadStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSigningStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningStatus> =
    DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSigningStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSendStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSendStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSendStatus> =
    DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSendStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdAccessAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdAccessAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdAccessAuth> =
    DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdAccessAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdActionAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdActionAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdActionAuth> =
    DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdActionAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.array(
      DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema,
    ),
    actionAuth: z.array(
      DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions
  > = z.object({
    accessAuth: z.array(
      DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema,
    ),
    actionAuth: z.array(
      DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$Outbound;
}

export function documentGetDocumentWithDetailsByIdRecipientAuthOptionsToJSON(
  documentGetDocumentWithDetailsByIdRecipientAuthOptions:
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdRecipientAuthOptions,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRecipient$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRecipient,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: DocumentGetDocumentWithDetailsByIdRole$inboundSchema,
    readStatus: DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema,
    signingStatus:
      DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema,
    sendStatus: DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema,
    id: z.number(),
    documentId: z.nullable(z.number()),
    templateId: z.nullable(z.number()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$inboundSchema
      ),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdRecipient$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions:
    | DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$Outbound
    | null;
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRecipient$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRecipient$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdRecipient
  > = z.object({
    role: DocumentGetDocumentWithDetailsByIdRole$outboundSchema,
    readStatus: DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema,
    signingStatus:
      DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema,
    sendStatus: DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema,
    id: z.number(),
    documentId: z.nullable(z.number()),
    templateId: z.nullable(z.number()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdRecipientAuthOptions$outboundSchema
      ),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRecipient$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipient$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRecipient$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipient$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRecipient$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipient$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdRecipient$Outbound;
}

export function documentGetDocumentWithDetailsByIdRecipientToJSON(
  documentGetDocumentWithDetailsByIdRecipient:
    DocumentGetDocumentWithDetailsByIdRecipient,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdRecipient$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdRecipient,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdRecipientFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdRecipient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdRecipient$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdRecipient' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFieldType> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdFieldType);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFieldType> =
    DocumentGetDocumentWithDetailsByIdFieldType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeDropdown> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeDropdown);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeDropdown> =
    DocumentGetDocumentWithDetailsByIdTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeDropdown$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeDropdown$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeDropdown$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdValue3$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdValue3$Outbound = {
  value: string;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdValue3$outboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdValue3$Outbound,
  z.ZodTypeDef,
  DocumentGetDocumentWithDetailsByIdValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdValue3$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue3$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdValue3$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue3$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdValue3$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue3$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdValue3$Outbound;
}

export function documentGetDocumentWithDetailsByIdValue3ToJSON(
  documentGetDocumentWithDetailsByIdValue3:
    DocumentGetDocumentWithDetailsByIdValue3,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdValue3$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdValue3,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdValue3FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdValue3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdValue3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdValue3' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<DocumentGetDocumentWithDetailsByIdValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaDropdownToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaDropdown:
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaDropdown,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeCheckbox> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeCheckbox);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeCheckbox> =
    DocumentGetDocumentWithDetailsByIdTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeCheckbox$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeCheckbox$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeCheckbox$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdValue2$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdValue2$outboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdValue2$Outbound,
  z.ZodTypeDef,
  DocumentGetDocumentWithDetailsByIdValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdValue2$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue2$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdValue2$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue2$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdValue2$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue2$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdValue2$Outbound;
}

export function documentGetDocumentWithDetailsByIdValue2ToJSON(
  documentGetDocumentWithDetailsByIdValue2:
    DocumentGetDocumentWithDetailsByIdValue2,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdValue2$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdValue2,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdValue2FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdValue2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdValue2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdValue2' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<DocumentGetDocumentWithDetailsByIdValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaCheckboxToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaCheckbox:
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaCheckbox,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeRadio> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeRadio);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeRadio> =
    DocumentGetDocumentWithDetailsByIdTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeRadio$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeRadio$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeRadio$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdValue1$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdValue1$outboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdValue1$Outbound,
  z.ZodTypeDef,
  DocumentGetDocumentWithDetailsByIdValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdValue1$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue1$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdValue1$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue1$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdValue1$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdValue1$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdValue1$Outbound;
}

export function documentGetDocumentWithDetailsByIdValue1ToJSON(
  documentGetDocumentWithDetailsByIdValue1:
    DocumentGetDocumentWithDetailsByIdValue1,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdValue1$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdValue1,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdValue1FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdValue1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdValue1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdValue1' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaRadio$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<DocumentGetDocumentWithDetailsByIdValue1$Outbound> | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaRadio$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaRadio$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaRadio$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaRadioToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaRadio:
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaRadio$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaRadio,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeNumber> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeNumber);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeNumber> =
    DocumentGetDocumentWithDetailsByIdTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeNumber$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeNumber$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeNumber$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign6> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTextAlign6);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign6> =
    DocumentGetDocumentWithDetailsByIdTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTextAlign6$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign6$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign6$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaNumber$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign6$inboundSchema
      .optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaNumber$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaNumber$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaNumber$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaNumberToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaNumber:
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaNumber$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaNumber,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeText$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeText> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeText);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeText$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeText> =
    DocumentGetDocumentWithDetailsByIdTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeText$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeText$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeText$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeText$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeText$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign5> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTextAlign5);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign5> =
    DocumentGetDocumentWithDetailsByIdTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTextAlign5$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign5$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign5$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaText$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaText,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign5$inboundSchema
      .optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaText$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaText$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaText$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaText$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaText$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaText$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaText$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaTextToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaText:
    DocumentGetDocumentWithDetailsByIdFieldMetaText,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaText$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaText,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaText' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeDate> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeDate);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeDate> =
    DocumentGetDocumentWithDetailsByIdTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeDate$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeDate$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeDate$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign4> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTextAlign4);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign4> =
    DocumentGetDocumentWithDetailsByIdTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTextAlign4$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign4$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign4$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDate$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign4$inboundSchema
      .optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDate$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDate$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDate$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDate$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDate$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDate$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaDate$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaDateToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaDate:
    DocumentGetDocumentWithDetailsByIdFieldMetaDate,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaDate$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaDate,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeEmail> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeEmail);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeEmail> =
    DocumentGetDocumentWithDetailsByIdTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeEmail$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeEmail$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeEmail$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign3> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTextAlign3);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign3> =
    DocumentGetDocumentWithDetailsByIdTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTextAlign3$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign3$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign3$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaEmail$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign3$inboundSchema
      .optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaEmail$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaEmail$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaEmail$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaEmailToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaEmail:
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaEmail$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaEmail,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeName$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeName> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeName);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeName$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeName> =
    DocumentGetDocumentWithDetailsByIdTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeName$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeName$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeName$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeName$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeName$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign2> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTextAlign2);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign2> =
    DocumentGetDocumentWithDetailsByIdTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTextAlign2$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign2$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign2$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaName$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaName,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign2$inboundSchema
      .optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaName$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaName$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaName$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaName$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaName$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaName$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaName$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaNameToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaName:
    DocumentGetDocumentWithDetailsByIdFieldMetaName,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaName$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaName,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaName' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeInitials> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTypeInitials);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTypeInitials> =
    DocumentGetDocumentWithDetailsByIdTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTypeInitials$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeInitials$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTypeInitials$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign1> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdTextAlign1);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdTextAlign1> =
    DocumentGetDocumentWithDetailsByIdTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdTextAlign1$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign1$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdTextAlign1$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaInitials$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign1$inboundSchema
      .optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaInitials$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: DocumentGetDocumentWithDetailsByIdTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaInitials$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaInitialsToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaInitials:
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaInitials$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaInitials,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaUnion$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaInitials$inboundSchema
    ),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMetaName$inboundSchema),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaEmail$inboundSchema
    ),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMetaDate$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMetaText$inboundSchema),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaNumber$inboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaRadio$inboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$inboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$inboundSchema
    ),
  ]);

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaUnion$Outbound =
  | DocumentGetDocumentWithDetailsByIdFieldMetaInitials$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaName$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaEmail$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaDate$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaText$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaNumber$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaRadio$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$Outbound;

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaUnion$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion
  > = z.union([
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaInitials$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaName$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaEmail$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDate$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaText$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaNumber$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaRadio$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$outboundSchema
    ),
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaUnion$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaUnion$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaUnionToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaUnion:
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaUnion$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaUnion,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdField$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdField,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: DocumentGetDocumentWithDetailsByIdFieldType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaInitials$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaName$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaEmail$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDate$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaText$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaNumber$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaRadio$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$inboundSchema
      ),
    ]),
  ),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdField$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | DocumentGetDocumentWithDetailsByIdFieldMetaInitials$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaName$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaEmail$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaDate$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaText$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaNumber$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaRadio$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$Outbound
    | null;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdField$outboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdField$Outbound,
  z.ZodTypeDef,
  DocumentGetDocumentWithDetailsByIdField
> = z.object({
  type: DocumentGetDocumentWithDetailsByIdFieldType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaName$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaEmail$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDate$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaText$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaNumber$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaRadio$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDropdown$outboundSchema
      ),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdField$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdField$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdField$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdField$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdField$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdField$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdField$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldToJSON(
  documentGetDocumentWithDetailsByIdField:
    DocumentGetDocumentWithDetailsByIdField,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdField$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdField,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdField,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdField$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdField' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdResponse$inboundSchema:
  z.ZodType<DocumentGetDocumentWithDetailsByIdResponse, z.ZodTypeDef, unknown> =
    z.object({
      visibility: DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema,
      status: DocumentGetDocumentWithDetailsByIdStatus$inboundSchema,
      source: DocumentGetDocumentWithDetailsByIdSource$inboundSchema,
      id: z.number(),
      externalId: z.nullable(z.string()),
      userId: z.number(),
      authOptions: z.nullable(
        z.lazy(() =>
          DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema
        ),
      ),
      formValues: z.nullable(
        z.record(z.union([z.string(), z.boolean(), z.number()])),
      ),
      title: z.string(),
      documentDataId: z.string(),
      createdAt: z.string(),
      updatedAt: z.string(),
      completedAt: z.nullable(z.string()),
      deletedAt: z.nullable(z.string()),
      teamId: z.number(),
      templateId: z.nullable(z.number()),
      folderId: z.nullable(z.string()),
      documentData: z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdDocumentData$inboundSchema
      ),
      documentMeta: z.nullable(
        z.lazy(() =>
          DocumentGetDocumentWithDetailsByIdDocumentMeta$inboundSchema
        ),
      ),
      folder: z.nullable(
        z.lazy(() => DocumentGetDocumentWithDetailsByIdFolder$inboundSchema),
      ),
      recipients: z.array(
        z.lazy(() => DocumentGetDocumentWithDetailsByIdRecipient$inboundSchema),
      ),
      fields: z.array(
        z.lazy(() => DocumentGetDocumentWithDetailsByIdField$inboundSchema),
      ),
    });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdResponse$Outbound = {
  visibility: string;
  status: string;
  source: string;
  id: number;
  externalId: string | null;
  userId: number;
  authOptions: DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound | null;
  formValues: { [k: string]: string | boolean | number } | null;
  title: string;
  documentDataId: string;
  createdAt: string;
  updatedAt: string;
  completedAt: string | null;
  deletedAt: string | null;
  teamId: number;
  templateId: number | null;
  folderId: string | null;
  documentData: DocumentGetDocumentWithDetailsByIdDocumentData$Outbound;
  documentMeta: DocumentGetDocumentWithDetailsByIdDocumentMeta$Outbound | null;
  folder: DocumentGetDocumentWithDetailsByIdFolder$Outbound | null;
  recipients: Array<DocumentGetDocumentWithDetailsByIdRecipient$Outbound>;
  fields: Array<DocumentGetDocumentWithDetailsByIdField$Outbound>;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdResponse$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdResponse$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdResponse
  > = z.object({
    visibility: DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema,
    status: DocumentGetDocumentWithDetailsByIdStatus$outboundSchema,
    source: DocumentGetDocumentWithDetailsByIdSource$outboundSchema,
    id: z.number(),
    externalId: z.nullable(z.string()),
    userId: z.number(),
    authOptions: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema
      ),
    ),
    formValues: z.nullable(
      z.record(z.union([z.string(), z.boolean(), z.number()])),
    ),
    title: z.string(),
    documentDataId: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
    completedAt: z.nullable(z.string()),
    deletedAt: z.nullable(z.string()),
    teamId: z.number(),
    templateId: z.nullable(z.number()),
    folderId: z.nullable(z.string()),
    documentData: z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdDocumentData$outboundSchema
    ),
    documentMeta: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdDocumentMeta$outboundSchema
      ),
    ),
    folder: z.nullable(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFolder$outboundSchema),
    ),
    recipients: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdRecipient$outboundSchema),
    ),
    fields: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdField$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdResponse$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdResponse$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdResponse$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdResponse$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdResponse$Outbound;
}

export function documentGetDocumentWithDetailsByIdResponseToJSON(
  documentGetDocumentWithDetailsByIdResponse:
    DocumentGetDocumentWithDetailsByIdResponse,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdResponse$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdResponse,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdResponse' from JSON`,
  );
}
