/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentGetDocumentWithDetailsByIdRequest = {
  documentId: number;
};

export const DocumentGetDocumentWithDetailsByIdVisibility = {
  Everyone: "EVERYONE",
  ManagerAndAbove: "MANAGER_AND_ABOVE",
  Admin: "ADMIN",
} as const;
export type DocumentGetDocumentWithDetailsByIdVisibility = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdVisibility
>;

export const DocumentGetDocumentWithDetailsByIdStatus = {
  Draft: "DRAFT",
  Pending: "PENDING",
  Completed: "COMPLETED",
} as const;
export type DocumentGetDocumentWithDetailsByIdStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdStatus
>;

export const DocumentGetDocumentWithDetailsByIdSource = {
  Document: "DOCUMENT",
  Template: "TEMPLATE",
  TemplateDirectLink: "TEMPLATE_DIRECT_LINK",
} as const;
export type DocumentGetDocumentWithDetailsByIdSource = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSource
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const DocumentGetDocumentWithDetailsByIdGlobalAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type DocumentGetDocumentWithDetailsByIdGlobalAccessAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdGlobalAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export const DocumentGetDocumentWithDetailsByIdGlobalActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
} as const;
/**
 * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
 */
export type DocumentGetDocumentWithDetailsByIdGlobalActionAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdGlobalActionAuth
>;

export type AuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  globalAccessAuth: DocumentGetDocumentWithDetailsByIdGlobalAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document. This field is restricted to Enterprise plan users only.
   */
  globalActionAuth: DocumentGetDocumentWithDetailsByIdGlobalActionAuth | null;
};

export type DocumentGetDocumentWithDetailsByIdFormValues =
  | string
  | boolean
  | number;

export const DocumentGetDocumentWithDetailsByIdDocumentsType = {
  S3Path: "S3_PATH",
  Bytes: "BYTES",
  Bytes64: "BYTES_64",
} as const;
export type DocumentGetDocumentWithDetailsByIdDocumentsType = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdDocumentsType
>;

export type DocumentData = {
  type: DocumentGetDocumentWithDetailsByIdDocumentsType;
  id: string;
  data: string;
  initialData: string;
};

export const DocumentGetDocumentWithDetailsByIdSigningOrder = {
  Parallel: "PARALLEL",
  Sequential: "SEQUENTIAL",
} as const;
export type DocumentGetDocumentWithDetailsByIdSigningOrder = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSigningOrder
>;

export const DocumentGetDocumentWithDetailsByIdDistributionMethod = {
  Email: "EMAIL",
  None: "NONE",
} as const;
export type DocumentGetDocumentWithDetailsByIdDistributionMethod = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdDistributionMethod
>;

export type DocumentGetDocumentWithDetailsByIdEmailSettings = {
  /**
   * Whether to send an email to all recipients that the document is ready for them to sign.
   */
  recipientSigningRequest?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who was removed from a pending document.
   */
  recipientRemoved?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when a recipient has signed the document.
   */
  recipientSigned?: boolean | undefined;
  /**
   * Whether to send an email to the recipient who has just signed the document indicating that there are still other recipients who need to sign the document. This will only be sent if the document is still pending after the recipient has signed.
   */
  documentPending?: boolean | undefined;
  /**
   * Whether to send an email to all recipients when the document is complete.
   */
  documentCompleted?: boolean | undefined;
  /**
   * Whether to send an email to all recipients if a pending document has been deleted.
   */
  documentDeleted?: boolean | undefined;
  /**
   * Whether to send an email to the document owner when the document is complete.
   */
  ownerDocumentCompleted?: boolean | undefined;
};

export type DocumentMeta = {
  signingOrder: DocumentGetDocumentWithDetailsByIdSigningOrder;
  distributionMethod: DocumentGetDocumentWithDetailsByIdDistributionMethod;
  id: string;
  subject: string | null;
  message: string | null;
  timezone: string | null;
  password: string | null;
  dateFormat: string | null;
  documentId: number;
  redirectUrl: string | null;
  typedSignatureEnabled: boolean;
  language: string;
  emailSettings: DocumentGetDocumentWithDetailsByIdEmailSettings | null;
};

export const DocumentGetDocumentWithDetailsByIdRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type DocumentGetDocumentWithDetailsByIdRole = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdRole
>;

export const DocumentGetDocumentWithDetailsByIdReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type DocumentGetDocumentWithDetailsByIdReadStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdReadStatus
>;

export const DocumentGetDocumentWithDetailsByIdSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type DocumentGetDocumentWithDetailsByIdSigningStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSigningStatus
>;

export const DocumentGetDocumentWithDetailsByIdSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type DocumentGetDocumentWithDetailsByIdSendStatus = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const DocumentGetDocumentWithDetailsByIdAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type DocumentGetDocumentWithDetailsByIdAccessAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const DocumentGetDocumentWithDetailsByIdActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type DocumentGetDocumentWithDetailsByIdActionAuth = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdActionAuth
>;

export type DocumentGetDocumentWithDetailsByIdAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: DocumentGetDocumentWithDetailsByIdAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: DocumentGetDocumentWithDetailsByIdActionAuth | null;
};

export type DocumentGetDocumentWithDetailsByIdRecipients = {
  role: DocumentGetDocumentWithDetailsByIdRole;
  readStatus: DocumentGetDocumentWithDetailsByIdReadStatus;
  signingStatus: DocumentGetDocumentWithDetailsByIdSigningStatus;
  sendStatus: DocumentGetDocumentWithDetailsByIdSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: DocumentGetDocumentWithDetailsByIdAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

export const DocumentGetDocumentWithDetailsByIdType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type DocumentGetDocumentWithDetailsByIdType = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdType
>;

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMetaValues = {
  value: string;
};

export type DocumentGetDocumentWithDetailsByIdFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type;
  values?: Array<DocumentGetDocumentWithDetailsByIdFieldMetaValues> | undefined;
  defaultValue?: string | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Checkbox: "checkbox",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues =
  {
    id: number;
    checked: boolean;
    value: string;
  };

export type DocumentGetDocumentWithDetailsByIdFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType;
  values?:
    | Array<DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType =
  {
    Radio: "radio",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type DocumentGetDocumentWithDetailsByIdFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType;
  values?:
    | Array<DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues>
    | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType =
  {
    Number: "number",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type =
  {
    Text: "text",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType =
  {
    Date: "date",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType;
  fontSize?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType = {
  Email: "email",
} as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType =
  ClosedEnum<typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType>;

export type DocumentGetDocumentWithDetailsByIdFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType;
  fontSize?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaType = {
  Name: "name",
} as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaType = ClosedEnum<
  typeof DocumentGetDocumentWithDetailsByIdFieldMetaType
>;

export type DocumentGetDocumentWithDetailsByIdFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: DocumentGetDocumentWithDetailsByIdFieldMetaType;
  fontSize?: number | undefined;
};

export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type =
  {
    Initials: "initials",
  } as const;
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type =
  ClosedEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type
  >;

export type DocumentGetDocumentWithDetailsByIdFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type;
  fontSize?: number | undefined;
};

export type DocumentGetDocumentWithDetailsByIdFieldMeta =
  | DocumentGetDocumentWithDetailsByIdFieldMeta1
  | DocumentGetDocumentWithDetailsByIdFieldMeta2
  | DocumentGetDocumentWithDetailsByIdFieldMeta3
  | DocumentGetDocumentWithDetailsByIdFieldMeta4
  | DocumentGetDocumentWithDetailsByIdFieldMeta7
  | DocumentGetDocumentWithDetailsByIdFieldMeta9
  | DocumentGetDocumentWithDetailsByIdFieldMeta5
  | DocumentGetDocumentWithDetailsByIdFieldMeta8
  | DocumentGetDocumentWithDetailsByIdFieldMeta6;

export type DocumentGetDocumentWithDetailsByIdFields = {
  type: DocumentGetDocumentWithDetailsByIdType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | DocumentGetDocumentWithDetailsByIdFieldMeta1
    | DocumentGetDocumentWithDetailsByIdFieldMeta2
    | DocumentGetDocumentWithDetailsByIdFieldMeta3
    | DocumentGetDocumentWithDetailsByIdFieldMeta4
    | DocumentGetDocumentWithDetailsByIdFieldMeta7
    | DocumentGetDocumentWithDetailsByIdFieldMeta9
    | DocumentGetDocumentWithDetailsByIdFieldMeta5
    | DocumentGetDocumentWithDetailsByIdFieldMeta8
    | DocumentGetDocumentWithDetailsByIdFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type DocumentGetDocumentWithDetailsByIdResponseBody = {
  visibility: DocumentGetDocumentWithDetailsByIdVisibility;
  status: DocumentGetDocumentWithDetailsByIdStatus;
  source: DocumentGetDocumentWithDetailsByIdSource;
  id: number;
  /**
   * A custom external ID you can use to identify the document.
   */
  externalId: string | null;
  /**
   * The ID of the user that created this document.
   */
  userId: number;
  authOptions: AuthOptions | null;
  formValues: { [k: string]: string | boolean | number } | null;
  title: string;
  documentDataId: string;
  createdAt: string;
  updatedAt: string;
  completedAt: string | null;
  deletedAt: string | null;
  teamId: number | null;
  templateId: number | null;
  documentData: DocumentData;
  documentMeta: DocumentMeta | null;
  recipients: Array<DocumentGetDocumentWithDetailsByIdRecipients>;
  fields: Array<DocumentGetDocumentWithDetailsByIdFields>;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRequest$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdRequest$Outbound = {
  documentId: number;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRequest$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRequest$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdRequest
  > = z.object({
    documentId: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRequest$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRequest$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRequest$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRequest$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdRequest$Outbound;
}

export function documentGetDocumentWithDetailsByIdRequestToJSON(
  documentGetDocumentWithDetailsByIdRequest:
    DocumentGetDocumentWithDetailsByIdRequest,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdRequest$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdRequest,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdRequest' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdVisibility> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdVisibility);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdVisibility> =
    DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdVisibility$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdStatus> =
    DocumentGetDocumentWithDetailsByIdStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSource$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSource> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSource);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSource$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSource> =
    DocumentGetDocumentWithDetailsByIdSource$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSource$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSource$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSource$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSource$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSource$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalAccessAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdGlobalAccessAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalAccessAuth> =
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalActionAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdGlobalActionAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdGlobalActionAuth> =
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdGlobalActionAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema;
}

/** @internal */
export const AuthOptions$inboundSchema: z.ZodType<
  AuthOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  globalAccessAuth: z.nullable(
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$inboundSchema,
  ),
  globalActionAuth: z.nullable(
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$inboundSchema,
  ),
});

/** @internal */
export type AuthOptions$Outbound = {
  globalAccessAuth: string | null;
  globalActionAuth: string | null;
};

/** @internal */
export const AuthOptions$outboundSchema: z.ZodType<
  AuthOptions$Outbound,
  z.ZodTypeDef,
  AuthOptions
> = z.object({
  globalAccessAuth: z.nullable(
    DocumentGetDocumentWithDetailsByIdGlobalAccessAuth$outboundSchema,
  ),
  globalActionAuth: z.nullable(
    DocumentGetDocumentWithDetailsByIdGlobalActionAuth$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthOptions$ {
  /** @deprecated use `AuthOptions$inboundSchema` instead. */
  export const inboundSchema = AuthOptions$inboundSchema;
  /** @deprecated use `AuthOptions$outboundSchema` instead. */
  export const outboundSchema = AuthOptions$outboundSchema;
  /** @deprecated use `AuthOptions$Outbound` instead. */
  export type Outbound = AuthOptions$Outbound;
}

export function authOptionsToJSON(authOptions: AuthOptions): string {
  return JSON.stringify(AuthOptions$outboundSchema.parse(authOptions));
}

export function authOptionsFromJSON(
  jsonString: string,
): SafeParseResult<AuthOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AuthOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AuthOptions' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFormValues,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.boolean(), z.number()]);

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFormValues$Outbound =
  | string
  | boolean
  | number;

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFormValues$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFormValues
  > = z.union([z.string(), z.boolean(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFormValues$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFormValues$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFormValues$Outbound;
}

export function documentGetDocumentWithDetailsByIdFormValuesToJSON(
  documentGetDocumentWithDetailsByIdFormValues:
    DocumentGetDocumentWithDetailsByIdFormValues,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFormValues$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFormValues,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFormValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFormValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFormValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFormValues' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentsType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDocumentsType> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdDocumentsType);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDocumentsType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDocumentsType> =
    DocumentGetDocumentWithDetailsByIdDocumentsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdDocumentsType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentsType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDocumentsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdDocumentsType$outboundSchema;
}

/** @internal */
export const DocumentData$inboundSchema: z.ZodType<
  DocumentData,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: DocumentGetDocumentWithDetailsByIdDocumentsType$inboundSchema,
  id: z.string(),
  data: z.string(),
  initialData: z.string(),
});

/** @internal */
export type DocumentData$Outbound = {
  type: string;
  id: string;
  data: string;
  initialData: string;
};

/** @internal */
export const DocumentData$outboundSchema: z.ZodType<
  DocumentData$Outbound,
  z.ZodTypeDef,
  DocumentData
> = z.object({
  type: DocumentGetDocumentWithDetailsByIdDocumentsType$outboundSchema,
  id: z.string(),
  data: z.string(),
  initialData: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentData$ {
  /** @deprecated use `DocumentData$inboundSchema` instead. */
  export const inboundSchema = DocumentData$inboundSchema;
  /** @deprecated use `DocumentData$outboundSchema` instead. */
  export const outboundSchema = DocumentData$outboundSchema;
  /** @deprecated use `DocumentData$Outbound` instead. */
  export type Outbound = DocumentData$Outbound;
}

export function documentDataToJSON(documentData: DocumentData): string {
  return JSON.stringify(DocumentData$outboundSchema.parse(documentData));
}

export function documentDataFromJSON(
  jsonString: string,
): SafeParseResult<DocumentData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentData' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningOrder> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSigningOrder);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningOrder> =
    DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSigningOrder$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDistributionMethod> =
    z.nativeEnum(DocumentGetDocumentWithDetailsByIdDistributionMethod);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdDistributionMethod> =
    DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdDistributionMethod$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdEmailSettings,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipientSigningRequest: z.boolean().default(true),
    recipientRemoved: z.boolean().default(true),
    recipientSigned: z.boolean().default(true),
    documentPending: z.boolean().default(true),
    documentCompleted: z.boolean().default(true),
    documentDeleted: z.boolean().default(true),
    ownerDocumentCompleted: z.boolean().default(true),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound = {
  recipientSigningRequest: boolean;
  recipientRemoved: boolean;
  recipientSigned: boolean;
  documentPending: boolean;
  documentCompleted: boolean;
  documentDeleted: boolean;
  ownerDocumentCompleted: boolean;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdEmailSettings
  > = z.object({
    recipientSigningRequest: z.boolean().default(true),
    recipientRemoved: z.boolean().default(true),
    recipientSigned: z.boolean().default(true),
    documentPending: z.boolean().default(true),
    documentCompleted: z.boolean().default(true),
    documentDeleted: z.boolean().default(true),
    ownerDocumentCompleted: z.boolean().default(true),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdEmailSettings$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound;
}

export function documentGetDocumentWithDetailsByIdEmailSettingsToJSON(
  documentGetDocumentWithDetailsByIdEmailSettings:
    DocumentGetDocumentWithDetailsByIdEmailSettings,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdEmailSettings,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdEmailSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdEmailSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdEmailSettings' from JSON`,
  );
}

/** @internal */
export const DocumentMeta$inboundSchema: z.ZodType<
  DocumentMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  signingOrder: DocumentGetDocumentWithDetailsByIdSigningOrder$inboundSchema,
  distributionMethod:
    DocumentGetDocumentWithDetailsByIdDistributionMethod$inboundSchema,
  id: z.string(),
  subject: z.nullable(z.string()),
  message: z.nullable(z.string()),
  timezone: z.nullable(z.string()),
  password: z.nullable(z.string()),
  dateFormat: z.nullable(z.string()),
  documentId: z.number().int(),
  redirectUrl: z.nullable(z.string()),
  typedSignatureEnabled: z.boolean(),
  language: z.string(),
  emailSettings: z.nullable(
    z.lazy(() => DocumentGetDocumentWithDetailsByIdEmailSettings$inboundSchema),
  ),
});

/** @internal */
export type DocumentMeta$Outbound = {
  signingOrder: string;
  distributionMethod: string;
  id: string;
  subject: string | null;
  message: string | null;
  timezone: string | null;
  password: string | null;
  dateFormat: string | null;
  documentId: number;
  redirectUrl: string | null;
  typedSignatureEnabled: boolean;
  language: string;
  emailSettings:
    | DocumentGetDocumentWithDetailsByIdEmailSettings$Outbound
    | null;
};

/** @internal */
export const DocumentMeta$outboundSchema: z.ZodType<
  DocumentMeta$Outbound,
  z.ZodTypeDef,
  DocumentMeta
> = z.object({
  signingOrder: DocumentGetDocumentWithDetailsByIdSigningOrder$outboundSchema,
  distributionMethod:
    DocumentGetDocumentWithDetailsByIdDistributionMethod$outboundSchema,
  id: z.string(),
  subject: z.nullable(z.string()),
  message: z.nullable(z.string()),
  timezone: z.nullable(z.string()),
  password: z.nullable(z.string()),
  dateFormat: z.nullable(z.string()),
  documentId: z.number().int(),
  redirectUrl: z.nullable(z.string()),
  typedSignatureEnabled: z.boolean(),
  language: z.string(),
  emailSettings: z.nullable(
    z.lazy(() =>
      DocumentGetDocumentWithDetailsByIdEmailSettings$outboundSchema
    ),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentMeta$ {
  /** @deprecated use `DocumentMeta$inboundSchema` instead. */
  export const inboundSchema = DocumentMeta$inboundSchema;
  /** @deprecated use `DocumentMeta$outboundSchema` instead. */
  export const outboundSchema = DocumentMeta$outboundSchema;
  /** @deprecated use `DocumentMeta$Outbound` instead. */
  export type Outbound = DocumentMeta$Outbound;
}

export function documentMetaToJSON(documentMeta: DocumentMeta): string {
  return JSON.stringify(DocumentMeta$outboundSchema.parse(documentMeta));
}

export function documentMetaFromJSON(
  jsonString: string,
): SafeParseResult<DocumentMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentMeta' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRole$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdRole> = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdRole,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRole$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdRole> =
    DocumentGetDocumentWithDetailsByIdRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRole$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRole$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRole$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRole$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRole$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdReadStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdReadStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdReadStatus> =
    DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdReadStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSigningStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSigningStatus> =
    DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSigningStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSendStatus> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdSendStatus);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdSendStatus> =
    DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdSendStatus$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdAccessAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdAccessAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdAccessAuth> =
    DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdAccessAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdActionAuth> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdActionAuth);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdActionAuth> =
    DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdActionAuth$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      DocumentGetDocumentWithDetailsByIdAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      DocumentGetDocumentWithDetailsByIdActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      DocumentGetDocumentWithDetailsByIdAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      DocumentGetDocumentWithDetailsByIdActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdAuthOptions$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound;
}

export function documentGetDocumentWithDetailsByIdAuthOptionsToJSON(
  documentGetDocumentWithDetailsByIdAuthOptions:
    DocumentGetDocumentWithDetailsByIdAuthOptions,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdAuthOptions,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdAuthOptions' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRecipients$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: DocumentGetDocumentWithDetailsByIdRole$inboundSchema,
    readStatus: DocumentGetDocumentWithDetailsByIdReadStatus$inboundSchema,
    signingStatus:
      DocumentGetDocumentWithDetailsByIdSigningStatus$inboundSchema,
    sendStatus: DocumentGetDocumentWithDetailsByIdSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdRecipients$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: DocumentGetDocumentWithDetailsByIdAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdRecipients$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdRecipients$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdRecipients
  > = z.object({
    role: DocumentGetDocumentWithDetailsByIdRole$outboundSchema,
    readStatus: DocumentGetDocumentWithDetailsByIdReadStatus$outboundSchema,
    signingStatus:
      DocumentGetDocumentWithDetailsByIdSigningStatus$outboundSchema,
    sendStatus: DocumentGetDocumentWithDetailsByIdSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdAuthOptions$outboundSchema
      ),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdRecipients$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipients$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdRecipients$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipients$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdRecipients$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdRecipients$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdRecipients$Outbound;
}

export function documentGetDocumentWithDetailsByIdRecipientsToJSON(
  documentGetDocumentWithDetailsByIdRecipients:
    DocumentGetDocumentWithDetailsByIdRecipients,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdRecipients$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdRecipients,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdRecipients$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdRecipients' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdType> = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdType,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdType> =
    DocumentGetDocumentWithDetailsByIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaValues$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaValues$Outbound = {
  value: string;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaValues$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaValues$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaValues$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaValues$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaValues$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaValues$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaValues$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaValuesToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaValues:
    DocumentGetDocumentWithDetailsByIdFieldMetaValues,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaValues$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMetaValues,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta9$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta9,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaValues$inboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<DocumentGetDocumentWithDetailsByIdFieldMetaValues$Outbound>
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta9$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta9$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta9
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta9$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta9$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta9$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta9$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta9$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta9ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta9:
    DocumentGetDocumentWithDetailsByIdFieldMeta9,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta9$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta9,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta9' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValuesToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$outboundSchema
      .parse(
        documentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues,
      ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta8$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta8,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$inboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta8$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta8$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta8
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta8$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta8$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta8$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta8$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta8$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta8ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta8:
    DocumentGetDocumentWithDetailsByIdFieldMeta8,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta8$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta8,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta8' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaDocumentsValuesToJSON(
  documentGetDocumentWithDetailsByIdFieldMetaDocumentsValues:
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$outboundSchema
      .parse(documentGetDocumentWithDetailsByIdFieldMetaDocumentsValues),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaDocumentsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta7$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta7,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$inboundSchema
      ),
    ).optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$Outbound>
    | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta7$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta7$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta7
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsValues$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta7$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta7$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta7$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta7$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta7$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta7ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta7:
    DocumentGetDocumentWithDetailsByIdFieldMeta7,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta7$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta7,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta7' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta6$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta6,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta6$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta6$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta6
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta6$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta6$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta6$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta6$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta6$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta6ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta6:
    DocumentGetDocumentWithDetailsByIdFieldMeta6,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta6$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta6,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta6' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta5$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta5,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta5$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta5$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta5
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200Type$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta5$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta5$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta5$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta5$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta5$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta5ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta5:
    DocumentGetDocumentWithDetailsByIdFieldMeta5,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta5$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta5,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta5' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta4$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta4$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta4$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta4
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponseType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta4$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta4$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta4$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta4$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta4$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta4ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta4:
    DocumentGetDocumentWithDetailsByIdFieldMeta4,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta4$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta4,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta4' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType
  > = z.nativeEnum(DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType
  > = DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta3$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta3$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta3$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta3
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta3$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta3$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta3$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta3$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta3$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta3ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta3:
    DocumentGetDocumentWithDetailsByIdFieldMeta3,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta3$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta3,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta3' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFieldMetaType> = z
    .nativeEnum(DocumentGetDocumentWithDetailsByIdFieldMetaType);

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof DocumentGetDocumentWithDetailsByIdFieldMetaType> =
    DocumentGetDocumentWithDetailsByIdFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaType$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaType$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaType$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta2$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdFieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta2$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta2$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta2
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: DocumentGetDocumentWithDetailsByIdFieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta2$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta2$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta2$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta2$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta2$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta2ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta2:
    DocumentGetDocumentWithDetailsByIdFieldMeta2,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta2$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta2,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta2' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type
  > = z.nativeEnum(
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type,
  );

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type
  > =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$outboundSchema;
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta1$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta1$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta1$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta1
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      DocumentGetDocumentWithDetailsByIdFieldMetaDocumentsResponse200ApplicationJSONResponseBodyFields1Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta1$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta1$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta1$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta1$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta1$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMeta1ToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta1:
    DocumentGetDocumentWithDetailsByIdFieldMeta1,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta1$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta1,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta1' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta1$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta2$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta3$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta4$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta7$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta9$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta5$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta8$inboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta6$inboundSchema),
  ]);

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFieldMeta$Outbound =
  | DocumentGetDocumentWithDetailsByIdFieldMeta1$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta2$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta3$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta4$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta7$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta9$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta5$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta8$Outbound
  | DocumentGetDocumentWithDetailsByIdFieldMeta6$Outbound;

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFieldMeta$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdFieldMeta$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdFieldMeta
  > = z.union([
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta1$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta2$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta3$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta4$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta7$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta9$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta5$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta8$outboundSchema),
    z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta6$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFieldMeta$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFieldMeta$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFieldMeta$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFieldMeta$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldMetaToJSON(
  documentGetDocumentWithDetailsByIdFieldMeta:
    DocumentGetDocumentWithDetailsByIdFieldMeta,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFieldMeta$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFieldMeta,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFieldMeta' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFields$inboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: DocumentGetDocumentWithDetailsByIdType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta1$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta2$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta3$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta4$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta7$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta9$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta5$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta8$inboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type DocumentGetDocumentWithDetailsByIdFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | DocumentGetDocumentWithDetailsByIdFieldMeta1$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta2$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta3$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta4$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta7$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta9$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta5$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta8$Outbound
    | DocumentGetDocumentWithDetailsByIdFieldMeta6$Outbound
    | null;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdFields$outboundSchema: z.ZodType<
  DocumentGetDocumentWithDetailsByIdFields$Outbound,
  z.ZodTypeDef,
  DocumentGetDocumentWithDetailsByIdFields
> = z.object({
  type: DocumentGetDocumentWithDetailsByIdType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta1$outboundSchema),
      z.lazy(() =>
        DocumentGetDocumentWithDetailsByIdFieldMeta2$outboundSchema
      ),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta3$outboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta4$outboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta7$outboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta9$outboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta5$outboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta8$outboundSchema),
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdFields$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFields$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdFields$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFields$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdFields$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdFields$Outbound` instead. */
  export type Outbound = DocumentGetDocumentWithDetailsByIdFields$Outbound;
}

export function documentGetDocumentWithDetailsByIdFieldsToJSON(
  documentGetDocumentWithDetailsByIdFields:
    DocumentGetDocumentWithDetailsByIdFields,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdFields$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdFields,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdFieldsFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdFields,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdFields$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdFields' from JSON`,
  );
}

/** @internal */
export const DocumentGetDocumentWithDetailsByIdResponseBody$inboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    visibility: DocumentGetDocumentWithDetailsByIdVisibility$inboundSchema,
    status: DocumentGetDocumentWithDetailsByIdStatus$inboundSchema,
    source: DocumentGetDocumentWithDetailsByIdSource$inboundSchema,
    id: z.number().int(),
    externalId: z.nullable(z.string()),
    userId: z.number(),
    authOptions: z.nullable(z.lazy(() => AuthOptions$inboundSchema)),
    formValues: z.nullable(
      z.record(z.union([z.string(), z.boolean(), z.number()])),
    ),
    title: z.string(),
    documentDataId: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
    completedAt: z.nullable(z.string()),
    deletedAt: z.nullable(z.string()),
    teamId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    documentData: z.lazy(() => DocumentData$inboundSchema),
    documentMeta: z.nullable(z.lazy(() => DocumentMeta$inboundSchema)),
    recipients: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdRecipients$inboundSchema),
    ),
    fields: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFields$inboundSchema),
    ),
  });

/** @internal */
export type DocumentGetDocumentWithDetailsByIdResponseBody$Outbound = {
  visibility: string;
  status: string;
  source: string;
  id: number;
  externalId: string | null;
  userId: number;
  authOptions: AuthOptions$Outbound | null;
  formValues: { [k: string]: string | boolean | number } | null;
  title: string;
  documentDataId: string;
  createdAt: string;
  updatedAt: string;
  completedAt: string | null;
  deletedAt: string | null;
  teamId: number | null;
  templateId: number | null;
  documentData: DocumentData$Outbound;
  documentMeta: DocumentMeta$Outbound | null;
  recipients: Array<DocumentGetDocumentWithDetailsByIdRecipients$Outbound>;
  fields: Array<DocumentGetDocumentWithDetailsByIdFields$Outbound>;
};

/** @internal */
export const DocumentGetDocumentWithDetailsByIdResponseBody$outboundSchema:
  z.ZodType<
    DocumentGetDocumentWithDetailsByIdResponseBody$Outbound,
    z.ZodTypeDef,
    DocumentGetDocumentWithDetailsByIdResponseBody
  > = z.object({
    visibility: DocumentGetDocumentWithDetailsByIdVisibility$outboundSchema,
    status: DocumentGetDocumentWithDetailsByIdStatus$outboundSchema,
    source: DocumentGetDocumentWithDetailsByIdSource$outboundSchema,
    id: z.number().int(),
    externalId: z.nullable(z.string()),
    userId: z.number(),
    authOptions: z.nullable(z.lazy(() => AuthOptions$outboundSchema)),
    formValues: z.nullable(
      z.record(z.union([z.string(), z.boolean(), z.number()])),
    ),
    title: z.string(),
    documentDataId: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
    completedAt: z.nullable(z.string()),
    deletedAt: z.nullable(z.string()),
    teamId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    documentData: z.lazy(() => DocumentData$outboundSchema),
    documentMeta: z.nullable(z.lazy(() => DocumentMeta$outboundSchema)),
    recipients: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdRecipients$outboundSchema),
    ),
    fields: z.array(
      z.lazy(() => DocumentGetDocumentWithDetailsByIdFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentGetDocumentWithDetailsByIdResponseBody$ {
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DocumentGetDocumentWithDetailsByIdResponseBody$inboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DocumentGetDocumentWithDetailsByIdResponseBody$outboundSchema;
  /** @deprecated use `DocumentGetDocumentWithDetailsByIdResponseBody$Outbound` instead. */
  export type Outbound =
    DocumentGetDocumentWithDetailsByIdResponseBody$Outbound;
}

export function documentGetDocumentWithDetailsByIdResponseBodyToJSON(
  documentGetDocumentWithDetailsByIdResponseBody:
    DocumentGetDocumentWithDetailsByIdResponseBody,
): string {
  return JSON.stringify(
    DocumentGetDocumentWithDetailsByIdResponseBody$outboundSchema.parse(
      documentGetDocumentWithDetailsByIdResponseBody,
    ),
  );
}

export function documentGetDocumentWithDetailsByIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentGetDocumentWithDetailsByIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentGetDocumentWithDetailsByIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentGetDocumentWithDetailsByIdResponseBody' from JSON`,
  );
}
