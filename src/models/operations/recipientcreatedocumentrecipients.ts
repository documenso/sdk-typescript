/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientCreateDocumentRecipientsRoleRequestBody = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientCreateDocumentRecipientsRoleRequestBody = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsRoleRequestBody
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientsAccessAuthRequestBody = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientsAccessAuthRequestBody = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsAccessAuthRequestBody
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientsActionAuthRequestBody = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientsActionAuthRequestBody = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsActionAuthRequestBody
>;

export type RecipientCreateDocumentRecipientsRecipientRequestBody = {
  email: string;
  name: string;
  role: RecipientCreateDocumentRecipientsRoleRequestBody;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?:
    | RecipientCreateDocumentRecipientsAccessAuthRequestBody
    | null
    | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?:
    | RecipientCreateDocumentRecipientsActionAuthRequestBody
    | null
    | undefined;
};

export type RecipientCreateDocumentRecipientsRequest = {
  documentId: number;
  recipients: Array<RecipientCreateDocumentRecipientsRecipientRequestBody>;
};

export const RecipientCreateDocumentRecipientsRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientCreateDocumentRecipientsRoleResponse = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsRoleResponse
>;

export const RecipientCreateDocumentRecipientsReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientCreateDocumentRecipientsReadStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsReadStatus
>;

export const RecipientCreateDocumentRecipientsSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientCreateDocumentRecipientsSigningStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsSigningStatus
>;

export const RecipientCreateDocumentRecipientsSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientCreateDocumentRecipientsSendStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientsAccessAuthResponse = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientsAccessAuthResponse = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientsActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientsActionAuthResponse = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsActionAuthResponse
>;

export type RecipientCreateDocumentRecipientsAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: RecipientCreateDocumentRecipientsAccessAuthResponse | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: RecipientCreateDocumentRecipientsActionAuthResponse | null;
};

export type RecipientCreateDocumentRecipientsRecipientResponse = {
  role: RecipientCreateDocumentRecipientsRoleResponse;
  readStatus: RecipientCreateDocumentRecipientsReadStatus;
  signingStatus: RecipientCreateDocumentRecipientsSigningStatus;
  sendStatus: RecipientCreateDocumentRecipientsSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

/**
 * Successful response
 */
export type RecipientCreateDocumentRecipientsResponse = {
  recipients: Array<RecipientCreateDocumentRecipientsRecipientResponse>;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRoleRequestBody$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsRoleRequestBody> = z
    .nativeEnum(RecipientCreateDocumentRecipientsRoleRequestBody);

/** @internal */
export const RecipientCreateDocumentRecipientsRoleRequestBody$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsRoleRequestBody> =
    RecipientCreateDocumentRecipientsRoleRequestBody$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRoleRequestBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRoleRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRoleRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRoleRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRoleRequestBody$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsAccessAuthRequestBody$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsAccessAuthRequestBody
  > = z.nativeEnum(RecipientCreateDocumentRecipientsAccessAuthRequestBody);

/** @internal */
export const RecipientCreateDocumentRecipientsAccessAuthRequestBody$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsAccessAuthRequestBody
  > = RecipientCreateDocumentRecipientsAccessAuthRequestBody$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsAccessAuthRequestBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsAccessAuthRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsAccessAuthRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAccessAuthRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsAccessAuthRequestBody$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsActionAuthRequestBody$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsActionAuthRequestBody
  > = z.nativeEnum(RecipientCreateDocumentRecipientsActionAuthRequestBody);

/** @internal */
export const RecipientCreateDocumentRecipientsActionAuthRequestBody$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsActionAuthRequestBody
  > = RecipientCreateDocumentRecipientsActionAuthRequestBody$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsActionAuthRequestBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsActionAuthRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsActionAuthRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsActionAuthRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsActionAuthRequestBody$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsRecipientRequestBody$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRecipientRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    email: z.string(),
    name: z.string(),
    role: RecipientCreateDocumentRecipientsRoleRequestBody$inboundSchema,
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsAccessAuthRequestBody$inboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsActionAuthRequestBody$inboundSchema,
    ).optional(),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsRecipientRequestBody$Outbound = {
  email: string;
  name: string;
  role: string;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRecipientRequestBody$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRecipientRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsRecipientRequestBody
  > = z.object({
    email: z.string(),
    name: z.string(),
    role: RecipientCreateDocumentRecipientsRoleRequestBody$outboundSchema,
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsAccessAuthRequestBody$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsActionAuthRequestBody$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRecipientRequestBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipientRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRecipientRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipientRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRecipientRequestBody$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipientRequestBody$Outbound` instead. */
  export type Outbound =
    RecipientCreateDocumentRecipientsRecipientRequestBody$Outbound;
}

export function recipientCreateDocumentRecipientsRecipientRequestBodyToJSON(
  recipientCreateDocumentRecipientsRecipientRequestBody:
    RecipientCreateDocumentRecipientsRecipientRequestBody,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsRecipientRequestBody$outboundSchema.parse(
      recipientCreateDocumentRecipientsRecipientRequestBody,
    ),
  );
}

export function recipientCreateDocumentRecipientsRecipientRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsRecipientRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsRecipientRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsRecipientRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsRequest$inboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  recipients: z.array(
    z.lazy(() =>
      RecipientCreateDocumentRecipientsRecipientRequestBody$inboundSchema
    ),
  ),
});

/** @internal */
export type RecipientCreateDocumentRecipientsRequest$Outbound = {
  documentId: number;
  recipients: Array<
    RecipientCreateDocumentRecipientsRecipientRequestBody$Outbound
  >;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRequest$outboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientsRequest$Outbound,
  z.ZodTypeDef,
  RecipientCreateDocumentRecipientsRequest
> = z.object({
  documentId: z.number(),
  recipients: z.array(
    z.lazy(() =>
      RecipientCreateDocumentRecipientsRecipientRequestBody$outboundSchema
    ),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRequest$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRequest$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRequest$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRequest$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsRequest$Outbound;
}

export function recipientCreateDocumentRecipientsRequestToJSON(
  recipientCreateDocumentRecipientsRequest:
    RecipientCreateDocumentRecipientsRequest,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsRequest$outboundSchema.parse(
      recipientCreateDocumentRecipientsRequest,
    ),
  );
}

export function recipientCreateDocumentRecipientsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsRequest' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsRoleResponse> = z
    .nativeEnum(RecipientCreateDocumentRecipientsRoleResponse);

/** @internal */
export const RecipientCreateDocumentRecipientsRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsRoleResponse> =
    RecipientCreateDocumentRecipientsRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRoleResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRoleResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsReadStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientsReadStatus);

/** @internal */
export const RecipientCreateDocumentRecipientsReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsReadStatus> =
    RecipientCreateDocumentRecipientsReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsReadStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsReadStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsReadStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSigningStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientsSigningStatus);

/** @internal */
export const RecipientCreateDocumentRecipientsSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSigningStatus> =
    RecipientCreateDocumentRecipientsSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsSigningStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsSigningStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSendStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientsSendStatus);

/** @internal */
export const RecipientCreateDocumentRecipientsSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSendStatus> =
    RecipientCreateDocumentRecipientsSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsSendStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsSendStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsSendStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsAccessAuthResponse> =
    z.nativeEnum(RecipientCreateDocumentRecipientsAccessAuthResponse);

/** @internal */
export const RecipientCreateDocumentRecipientsAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsAccessAuthResponse> =
    RecipientCreateDocumentRecipientsAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsAccessAuthResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsActionAuthResponse> =
    z.nativeEnum(RecipientCreateDocumentRecipientsActionAuthResponse);

/** @internal */
export const RecipientCreateDocumentRecipientsActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsActionAuthResponse> =
    RecipientCreateDocumentRecipientsActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsActionAuthResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsAuthOptions$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientCreateDocumentRecipientsAuthOptions$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsAuthOptions$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsAuthOptions$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsAuthOptions$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAuthOptions$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsAuthOptions$Outbound;
}

export function recipientCreateDocumentRecipientsAuthOptionsToJSON(
  recipientCreateDocumentRecipientsAuthOptions:
    RecipientCreateDocumentRecipientsAuthOptions,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsAuthOptions$outboundSchema.parse(
      recipientCreateDocumentRecipientsAuthOptions,
    ),
  );
}

export function recipientCreateDocumentRecipientsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsRecipientResponse$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRecipientResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: RecipientCreateDocumentRecipientsRoleResponse$inboundSchema,
    readStatus: RecipientCreateDocumentRecipientsReadStatus$inboundSchema,
    signingStatus: RecipientCreateDocumentRecipientsSigningStatus$inboundSchema,
    sendStatus: RecipientCreateDocumentRecipientsSendStatus$inboundSchema,
    id: z.number(),
    documentId: z.nullable(z.number()),
    templateId: z.nullable(z.number()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientCreateDocumentRecipientsAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsRecipientResponse$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientsAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRecipientResponse$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRecipientResponse$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsRecipientResponse
  > = z.object({
    role: RecipientCreateDocumentRecipientsRoleResponse$outboundSchema,
    readStatus: RecipientCreateDocumentRecipientsReadStatus$outboundSchema,
    signingStatus:
      RecipientCreateDocumentRecipientsSigningStatus$outboundSchema,
    sendStatus: RecipientCreateDocumentRecipientsSendStatus$outboundSchema,
    id: z.number(),
    documentId: z.nullable(z.number()),
    templateId: z.nullable(z.number()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientCreateDocumentRecipientsAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRecipientResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipientResponse$Outbound` instead. */
  export type Outbound =
    RecipientCreateDocumentRecipientsRecipientResponse$Outbound;
}

export function recipientCreateDocumentRecipientsRecipientResponseToJSON(
  recipientCreateDocumentRecipientsRecipientResponse:
    RecipientCreateDocumentRecipientsRecipientResponse,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsRecipientResponse$outboundSchema.parse(
      recipientCreateDocumentRecipientsRecipientResponse,
    ),
  );
}

export function recipientCreateDocumentRecipientsRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsRecipientResponse' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsResponse$inboundSchema: z.ZodType<
  RecipientCreateDocumentRecipientsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipients: z.array(
    z.lazy(() =>
      RecipientCreateDocumentRecipientsRecipientResponse$inboundSchema
    ),
  ),
});

/** @internal */
export type RecipientCreateDocumentRecipientsResponse$Outbound = {
  recipients: Array<
    RecipientCreateDocumentRecipientsRecipientResponse$Outbound
  >;
};

/** @internal */
export const RecipientCreateDocumentRecipientsResponse$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsResponse$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsResponse
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientCreateDocumentRecipientsRecipientResponse$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsResponse$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsResponse$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsResponse$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsResponse$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsResponse$Outbound;
}

export function recipientCreateDocumentRecipientsResponseToJSON(
  recipientCreateDocumentRecipientsResponse:
    RecipientCreateDocumentRecipientsResponse,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsResponse$outboundSchema.parse(
      recipientCreateDocumentRecipientsResponse,
    ),
  );
}

export function recipientCreateDocumentRecipientsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsResponse' from JSON`,
  );
}
