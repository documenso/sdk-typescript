/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientCreateDocumentRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientCreateDocumentRecipientsRole = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsRole
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientsAccessAuth = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientsActionAuth = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsActionAuth
>;

export type RecipientCreateDocumentRecipientsRecipients = {
  email: string;
  name: string;
  role: RecipientCreateDocumentRecipientsRole;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: RecipientCreateDocumentRecipientsAccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: RecipientCreateDocumentRecipientsActionAuth | null | undefined;
};

export type RecipientCreateDocumentRecipientsRequestBody = {
  documentId: number;
  recipients: Array<RecipientCreateDocumentRecipientsRecipients>;
};

export const RecipientCreateDocumentRecipientsDocumentsRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientCreateDocumentRecipientsDocumentsRecipientsRole =
  ClosedEnum<typeof RecipientCreateDocumentRecipientsDocumentsRecipientsRole>;

export const RecipientCreateDocumentRecipientsReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientCreateDocumentRecipientsReadStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsReadStatus
>;

export const RecipientCreateDocumentRecipientsSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientCreateDocumentRecipientsSigningStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsSigningStatus
>;

export const RecipientCreateDocumentRecipientsSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientCreateDocumentRecipientsSendStatus = ClosedEnum<
  typeof RecipientCreateDocumentRecipientsSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth =
  ClosedEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth
  >;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth =
  ClosedEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth
  >;

export type RecipientCreateDocumentRecipientsAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth:
    | RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth
    | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth:
    | RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth
    | null;
};

export type RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients = {
  role: RecipientCreateDocumentRecipientsDocumentsRecipientsRole;
  readStatus: RecipientCreateDocumentRecipientsReadStatus;
  signingStatus: RecipientCreateDocumentRecipientsSigningStatus;
  sendStatus: RecipientCreateDocumentRecipientsSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientCreateDocumentRecipientsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
};

/**
 * Successful response
 */
export type RecipientCreateDocumentRecipientsResponseBody = {
  recipients: Array<
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients
  >;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRole$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsRole> = z.nativeEnum(
    RecipientCreateDocumentRecipientsRole,
  );

/** @internal */
export const RecipientCreateDocumentRecipientsRole$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsRole> =
    RecipientCreateDocumentRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRole$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsAccessAuth> = z
    .nativeEnum(RecipientCreateDocumentRecipientsAccessAuth);

/** @internal */
export const RecipientCreateDocumentRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsAccessAuth> =
    RecipientCreateDocumentRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsAccessAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsActionAuth> = z
    .nativeEnum(RecipientCreateDocumentRecipientsActionAuth);

/** @internal */
export const RecipientCreateDocumentRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsActionAuth> =
    RecipientCreateDocumentRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsActionAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsRecipients$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    email: z.string(),
    name: z.string(),
    role: RecipientCreateDocumentRecipientsRole$inboundSchema,
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsAccessAuth$inboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsActionAuth$inboundSchema,
    ).optional(),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsRecipients$Outbound = {
  email: string;
  name: string;
  role: string;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRecipients$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRecipients$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsRecipients
  > = z.object({
    email: z.string(),
    name: z.string(),
    role: RecipientCreateDocumentRecipientsRole$outboundSchema,
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsAccessAuth$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsActionAuth$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRecipients$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipients$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRecipients$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipients$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRecipients$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRecipients$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsRecipients$Outbound;
}

export function recipientCreateDocumentRecipientsRecipientsToJSON(
  recipientCreateDocumentRecipientsRecipients:
    RecipientCreateDocumentRecipientsRecipients,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsRecipients$outboundSchema.parse(
      recipientCreateDocumentRecipientsRecipients,
    ),
  );
}

export function recipientCreateDocumentRecipientsRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsRecipients$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsRecipients' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsRequestBody$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    documentId: z.number(),
    recipients: z.array(
      z.lazy(() => RecipientCreateDocumentRecipientsRecipients$inboundSchema),
    ),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsRequestBody$Outbound = {
  documentId: number;
  recipients: Array<RecipientCreateDocumentRecipientsRecipients$Outbound>;
};

/** @internal */
export const RecipientCreateDocumentRecipientsRequestBody$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsRequestBody
  > = z.object({
    documentId: z.number(),
    recipients: z.array(
      z.lazy(() => RecipientCreateDocumentRecipientsRecipients$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsRequestBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsRequestBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsRequestBody$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsRequestBody$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsRequestBody$Outbound;
}

export function recipientCreateDocumentRecipientsRequestBodyToJSON(
  recipientCreateDocumentRecipientsRequestBody:
    RecipientCreateDocumentRecipientsRequestBody,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsRequestBody$outboundSchema.parse(
      recipientCreateDocumentRecipientsRequestBody,
    ),
  );
}

export function recipientCreateDocumentRecipientsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsRole
  > = z.nativeEnum(RecipientCreateDocumentRecipientsDocumentsRecipientsRole);

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsRole
  > = RecipientCreateDocumentRecipientsDocumentsRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsDocumentsRecipientsRole$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsReadStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientsReadStatus);

/** @internal */
export const RecipientCreateDocumentRecipientsReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsReadStatus> =
    RecipientCreateDocumentRecipientsReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsReadStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsReadStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsReadStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSigningStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientsSigningStatus);

/** @internal */
export const RecipientCreateDocumentRecipientsSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSigningStatus> =
    RecipientCreateDocumentRecipientsSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsSigningStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsSigningStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSendStatus> = z
    .nativeEnum(RecipientCreateDocumentRecipientsSendStatus);

/** @internal */
export const RecipientCreateDocumentRecipientsSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientCreateDocumentRecipientsSendStatus> =
    RecipientCreateDocumentRecipientsSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsSendStatus$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsSendStatus$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsSendStatus$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth
  > = z.nativeEnum(
    RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth,
  );

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth
  > =
    RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth
  > = z.nativeEnum(
    RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth,
  );

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth
  > =
    RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientCreateDocumentRecipientsAuthOptions$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientCreateDocumentRecipientsAuthOptions$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientCreateDocumentRecipientsDocumentsRecipientsAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientCreateDocumentRecipientsDocumentsRecipientsActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsAuthOptions$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsAuthOptions$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsAuthOptions$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsAuthOptions$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsAuthOptions$Outbound;
}

export function recipientCreateDocumentRecipientsAuthOptionsToJSON(
  recipientCreateDocumentRecipientsAuthOptions:
    RecipientCreateDocumentRecipientsAuthOptions,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsAuthOptions$outboundSchema.parse(
      recipientCreateDocumentRecipientsAuthOptions,
    ),
  );
}

export function recipientCreateDocumentRecipientsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      RecipientCreateDocumentRecipientsDocumentsRecipientsRole$inboundSchema,
    readStatus: RecipientCreateDocumentRecipientsReadStatus$inboundSchema,
    signingStatus: RecipientCreateDocumentRecipientsSigningStatus$inboundSchema,
    sendStatus: RecipientCreateDocumentRecipientsSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientCreateDocumentRecipientsAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$Outbound =
  {
    role: string;
    readStatus: string;
    signingStatus: string;
    sendStatus: string;
    id: number;
    documentId: number | null;
    templateId: number | null;
    email: string;
    name: string;
    token: string;
    documentDeletedAt: string | null;
    expired: string | null;
    signedAt: string | null;
    authOptions: RecipientCreateDocumentRecipientsAuthOptions$Outbound | null;
    signingOrder: number | null;
    rejectionReason: string | null;
  };

/** @internal */
export const RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients
  > = z.object({
    role:
      RecipientCreateDocumentRecipientsDocumentsRecipientsRole$outboundSchema,
    readStatus: RecipientCreateDocumentRecipientsReadStatus$outboundSchema,
    signingStatus:
      RecipientCreateDocumentRecipientsSigningStatus$outboundSchema,
    sendStatus: RecipientCreateDocumentRecipientsSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientCreateDocumentRecipientsAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$Outbound` instead. */
  export type Outbound =
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$Outbound;
}

export function recipientCreateDocumentRecipientsDocumentsRecipientsRecipientsToJSON(
  recipientCreateDocumentRecipientsDocumentsRecipientsRecipients:
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema
      .parse(recipientCreateDocumentRecipientsDocumentsRecipientsRecipients),
  );
}

export function recipientCreateDocumentRecipientsDocumentsRecipientsRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients' from JSON`,
  );
}

/** @internal */
export const RecipientCreateDocumentRecipientsResponseBody$inboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$inboundSchema
      ),
    ),
  });

/** @internal */
export type RecipientCreateDocumentRecipientsResponseBody$Outbound = {
  recipients: Array<
    RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$Outbound
  >;
};

/** @internal */
export const RecipientCreateDocumentRecipientsResponseBody$outboundSchema:
  z.ZodType<
    RecipientCreateDocumentRecipientsResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientCreateDocumentRecipientsResponseBody
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientCreateDocumentRecipientsDocumentsRecipientsRecipients$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientCreateDocumentRecipientsResponseBody$ {
  /** @deprecated use `RecipientCreateDocumentRecipientsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientCreateDocumentRecipientsResponseBody$inboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientCreateDocumentRecipientsResponseBody$outboundSchema;
  /** @deprecated use `RecipientCreateDocumentRecipientsResponseBody$Outbound` instead. */
  export type Outbound = RecipientCreateDocumentRecipientsResponseBody$Outbound;
}

export function recipientCreateDocumentRecipientsResponseBodyToJSON(
  recipientCreateDocumentRecipientsResponseBody:
    RecipientCreateDocumentRecipientsResponseBody,
): string {
  return JSON.stringify(
    RecipientCreateDocumentRecipientsResponseBody$outboundSchema.parse(
      recipientCreateDocumentRecipientsResponseBody,
    ),
  );
}

export function recipientCreateDocumentRecipientsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientCreateDocumentRecipientsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientCreateDocumentRecipientsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientCreateDocumentRecipientsResponseBody' from JSON`,
  );
}
