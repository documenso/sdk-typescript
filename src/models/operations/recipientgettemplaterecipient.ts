/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientGetTemplateRecipientRequest = {
  recipientId: number;
};

export const RecipientGetTemplateRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientGetTemplateRecipientRole = ClosedEnum<
  typeof RecipientGetTemplateRecipientRole
>;

export const RecipientGetTemplateRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientGetTemplateRecipientReadStatus = ClosedEnum<
  typeof RecipientGetTemplateRecipientReadStatus
>;

export const RecipientGetTemplateRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientGetTemplateRecipientSigningStatus = ClosedEnum<
  typeof RecipientGetTemplateRecipientSigningStatus
>;

export const RecipientGetTemplateRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientGetTemplateRecipientSendStatus = ClosedEnum<
  typeof RecipientGetTemplateRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientGetTemplateRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientGetTemplateRecipientAccessAuth = ClosedEnum<
  typeof RecipientGetTemplateRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientGetTemplateRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientGetTemplateRecipientActionAuth = ClosedEnum<
  typeof RecipientGetTemplateRecipientActionAuth
>;

export type RecipientGetTemplateRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: RecipientGetTemplateRecipientAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: RecipientGetTemplateRecipientActionAuth | null;
};

export const RecipientGetTemplateRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientGetTemplateRecipientType = ClosedEnum<
  typeof RecipientGetTemplateRecipientType
>;

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues =
  {
    value: string;
  };

export type RecipientGetTemplateRecipientFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type;
  values?:
    | Array<
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues
    >
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  >;

export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetTemplateRecipientFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type;
  values?:
    | Array<RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Radio: "radio",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type RecipientGetTemplateRecipientFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetTemplateRecipientFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType;
  values?: Array<RecipientGetTemplateRecipientFieldMetaValues> | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientGetTemplateRecipientFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  >;

export type RecipientGetTemplateRecipientFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type =
  {
    Date: "date",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type
  >;

export type RecipientGetTemplateRecipientFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType =
  {
    Email: "email",
  } as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType
  >;

export type RecipientGetTemplateRecipientFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType = {
  Name: "name",
} as const;
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType =
  ClosedEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType
  >;

export type RecipientGetTemplateRecipientFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientGetTemplateRecipientFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientGetTemplateRecipientFieldMetaType = ClosedEnum<
  typeof RecipientGetTemplateRecipientFieldMetaType
>;

export type RecipientGetTemplateRecipientFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientGetTemplateRecipientFieldMeta =
  | RecipientGetTemplateRecipientFieldMeta1
  | RecipientGetTemplateRecipientFieldMeta2
  | RecipientGetTemplateRecipientFieldMeta3
  | RecipientGetTemplateRecipientFieldMeta4
  | RecipientGetTemplateRecipientFieldMeta7
  | RecipientGetTemplateRecipientFieldMeta9
  | RecipientGetTemplateRecipientFieldMeta5
  | RecipientGetTemplateRecipientFieldMeta8
  | RecipientGetTemplateRecipientFieldMeta6;

export type RecipientGetTemplateRecipientFields = {
  type: RecipientGetTemplateRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetTemplateRecipientFieldMeta1
    | RecipientGetTemplateRecipientFieldMeta2
    | RecipientGetTemplateRecipientFieldMeta3
    | RecipientGetTemplateRecipientFieldMeta4
    | RecipientGetTemplateRecipientFieldMeta7
    | RecipientGetTemplateRecipientFieldMeta9
    | RecipientGetTemplateRecipientFieldMeta5
    | RecipientGetTemplateRecipientFieldMeta8
    | RecipientGetTemplateRecipientFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type RecipientGetTemplateRecipientResponseBody = {
  role: RecipientGetTemplateRecipientRole;
  readStatus: RecipientGetTemplateRecipientReadStatus;
  signingStatus: RecipientGetTemplateRecipientSigningStatus;
  sendStatus: RecipientGetTemplateRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetTemplateRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetTemplateRecipientFields>;
};

/** @internal */
export const RecipientGetTemplateRecipientRequest$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipientId: z.number(),
});

/** @internal */
export type RecipientGetTemplateRecipientRequest$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientGetTemplateRecipientRequest$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientRequest
> = z.object({
  recipientId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientRequest$ {
  /** @deprecated use `RecipientGetTemplateRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientRequest$Outbound;
}

export function recipientGetTemplateRecipientRequestToJSON(
  recipientGetTemplateRecipientRequest: RecipientGetTemplateRecipientRequest,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientRequest$outboundSchema.parse(
      recipientGetTemplateRecipientRequest,
    ),
  );
}

export function recipientGetTemplateRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientRole$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientRole
> = z.nativeEnum(RecipientGetTemplateRecipientRole);

/** @internal */
export const RecipientGetTemplateRecipientRole$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientRole
> = RecipientGetTemplateRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientRole$ {
  /** @deprecated use `RecipientGetTemplateRecipientRole$inboundSchema` instead. */
  export const inboundSchema = RecipientGetTemplateRecipientRole$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientRole$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientReadStatus> = z
    .nativeEnum(RecipientGetTemplateRecipientReadStatus);

/** @internal */
export const RecipientGetTemplateRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientReadStatus> =
    RecipientGetTemplateRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientReadStatus$ {
  /** @deprecated use `RecipientGetTemplateRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSigningStatus> = z
    .nativeEnum(RecipientGetTemplateRecipientSigningStatus);

/** @internal */
export const RecipientGetTemplateRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSigningStatus> =
    RecipientGetTemplateRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientSigningStatus$ {
  /** @deprecated use `RecipientGetTemplateRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSendStatus> = z
    .nativeEnum(RecipientGetTemplateRecipientSendStatus);

/** @internal */
export const RecipientGetTemplateRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSendStatus> =
    RecipientGetTemplateRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientSendStatus$ {
  /** @deprecated use `RecipientGetTemplateRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientAccessAuth> = z
    .nativeEnum(RecipientGetTemplateRecipientAccessAuth);

/** @internal */
export const RecipientGetTemplateRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientAccessAuth> =
    RecipientGetTemplateRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientAccessAuth$ {
  /** @deprecated use `RecipientGetTemplateRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientActionAuth> = z
    .nativeEnum(RecipientGetTemplateRecipientActionAuth);

/** @internal */
export const RecipientGetTemplateRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientActionAuth> =
    RecipientGetTemplateRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientActionAuth$ {
  /** @deprecated use `RecipientGetTemplateRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientAuthOptions$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientAuthOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessAuth: z.nullable(RecipientGetTemplateRecipientAccessAuth$inboundSchema),
  actionAuth: z.nullable(RecipientGetTemplateRecipientActionAuth$inboundSchema),
});

/** @internal */
export type RecipientGetTemplateRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientGetTemplateRecipientAuthOptions$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientAuthOptions$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientAuthOptions
> = z.object({
  accessAuth: z.nullable(
    RecipientGetTemplateRecipientAccessAuth$outboundSchema,
  ),
  actionAuth: z.nullable(
    RecipientGetTemplateRecipientActionAuth$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientAuthOptions$ {
  /** @deprecated use `RecipientGetTemplateRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientAuthOptions$Outbound;
}

export function recipientGetTemplateRecipientAuthOptionsToJSON(
  recipientGetTemplateRecipientAuthOptions:
    RecipientGetTemplateRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientAuthOptions$outboundSchema.parse(
      recipientGetTemplateRecipientAuthOptions,
    ),
  );
}

export function recipientGetTemplateRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientType$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientType
> = z.nativeEnum(RecipientGetTemplateRecipientType);

/** @internal */
export const RecipientGetTemplateRecipientType$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientType
> = RecipientGetTemplateRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientType$ {
  /** @deprecated use `RecipientGetTemplateRecipientType$inboundSchema` instead. */
  export const inboundSchema = RecipientGetTemplateRecipientType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValuesToJSON(
  recipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema
      .parse(
        recipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
      ),
  );
}

export function recipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta9$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta9$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta9$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta9
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseValues$outboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta9$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta9$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta9ToJSON(
  recipientGetTemplateRecipientFieldMeta9:
    RecipientGetTemplateRecipientFieldMeta9,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta9$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta9,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaTemplatesRecipientsValuesToJSON(
  recipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema
      .parse(recipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues),
  );
}

export function recipientGetTemplateRecipientFieldMetaTemplatesRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta8$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$inboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta8$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta8$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta8
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsValues$outboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta8$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta8$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta8ToJSON(
  recipientGetTemplateRecipientFieldMeta8:
    RecipientGetTemplateRecipientFieldMeta8,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta8$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta8,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaValues$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaValues$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaValues$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaValues$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaValues$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaValues$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaValuesToJSON(
  recipientGetTemplateRecipientFieldMetaValues:
    RecipientGetTemplateRecipientFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaValues$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaValues,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta7$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientGetTemplateRecipientFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta7$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta7$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta7
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaValues$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta7$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta7$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta7ToJSON(
  recipientGetTemplateRecipientFieldMeta7:
    RecipientGetTemplateRecipientFieldMeta7,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta7$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta7,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta6$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta6$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta6$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta6
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta6$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta6$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta6ToJSON(
  recipientGetTemplateRecipientFieldMeta6:
    RecipientGetTemplateRecipientFieldMeta6,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta6$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta6,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta5$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta5$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta5$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta5
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta5$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta5$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta5ToJSON(
  recipientGetTemplateRecipientFieldMeta5:
    RecipientGetTemplateRecipientFieldMeta5,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta5$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta5,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta4$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta4$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta4$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta4
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponse200Type$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta4$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta4$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta4ToJSON(
  recipientGetTemplateRecipientFieldMeta4:
    RecipientGetTemplateRecipientFieldMeta4,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta4$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta4,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta3$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta3$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta3$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta3
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsResponseType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta3$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta3$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta3ToJSON(
  recipientGetTemplateRecipientFieldMeta3:
    RecipientGetTemplateRecipientFieldMeta3,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta3$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta3,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType
  > = z.nativeEnum(
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType,
  );

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType
  > =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta2$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta2$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta2$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta2
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetTemplateRecipientFieldMetaTemplatesRecipientsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta2$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta2$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta2ToJSON(
  recipientGetTemplateRecipientFieldMeta2:
    RecipientGetTemplateRecipientFieldMeta2,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta2$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta2,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientFieldMetaType> = z
    .nativeEnum(RecipientGetTemplateRecipientFieldMetaType);

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientFieldMetaType> =
    RecipientGetTemplateRecipientFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaType$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta1$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetTemplateRecipientFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta1$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta1$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta1
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetTemplateRecipientFieldMetaType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta1$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta1$Outbound;
}

export function recipientGetTemplateRecipientFieldMeta1ToJSON(
  recipientGetTemplateRecipientFieldMeta1:
    RecipientGetTemplateRecipientFieldMeta1,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta1$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta1,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta1$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta2$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta3$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta4$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta7$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta9$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta5$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta8$inboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta6$inboundSchema),
]);

/** @internal */
export type RecipientGetTemplateRecipientFieldMeta$Outbound =
  | RecipientGetTemplateRecipientFieldMeta1$Outbound
  | RecipientGetTemplateRecipientFieldMeta2$Outbound
  | RecipientGetTemplateRecipientFieldMeta3$Outbound
  | RecipientGetTemplateRecipientFieldMeta4$Outbound
  | RecipientGetTemplateRecipientFieldMeta7$Outbound
  | RecipientGetTemplateRecipientFieldMeta9$Outbound
  | RecipientGetTemplateRecipientFieldMeta5$Outbound
  | RecipientGetTemplateRecipientFieldMeta8$Outbound
  | RecipientGetTemplateRecipientFieldMeta6$Outbound;

/** @internal */
export const RecipientGetTemplateRecipientFieldMeta$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFieldMeta$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFieldMeta
> = z.union([
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta1$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta2$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta3$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta4$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta7$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta9$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta5$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta8$outboundSchema),
  z.lazy(() => RecipientGetTemplateRecipientFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMeta$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMeta$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMeta$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMeta$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMeta$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaToJSON(
  recipientGetTemplateRecipientFieldMeta:
    RecipientGetTemplateRecipientFieldMeta,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMeta$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMeta,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFields$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientGetTemplateRecipientType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta1$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta2$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta3$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta4$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta7$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta9$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta5$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta8$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientGetTemplateRecipientFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetTemplateRecipientFieldMeta1$Outbound
    | RecipientGetTemplateRecipientFieldMeta2$Outbound
    | RecipientGetTemplateRecipientFieldMeta3$Outbound
    | RecipientGetTemplateRecipientFieldMeta4$Outbound
    | RecipientGetTemplateRecipientFieldMeta7$Outbound
    | RecipientGetTemplateRecipientFieldMeta9$Outbound
    | RecipientGetTemplateRecipientFieldMeta5$Outbound
    | RecipientGetTemplateRecipientFieldMeta8$Outbound
    | RecipientGetTemplateRecipientFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientGetTemplateRecipientFields$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientFields$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientFields
> = z.object({
  type: RecipientGetTemplateRecipientType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta1$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta2$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta3$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta4$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta7$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta9$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta5$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta8$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFields$ {
  /** @deprecated use `RecipientGetTemplateRecipientFields$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFields$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFields$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFields$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFields$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFields$Outbound;
}

export function recipientGetTemplateRecipientFieldsToJSON(
  recipientGetTemplateRecipientFields: RecipientGetTemplateRecipientFields,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFields$outboundSchema.parse(
      recipientGetTemplateRecipientFields,
    ),
  );
}

export function recipientGetTemplateRecipientFieldsFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientFields' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientResponseBody$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: RecipientGetTemplateRecipientRole$inboundSchema,
  readStatus: RecipientGetTemplateRecipientReadStatus$inboundSchema,
  signingStatus: RecipientGetTemplateRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientGetTemplateRecipientSendStatus$inboundSchema,
  id: z.number().int(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetTemplateRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientGetTemplateRecipientFields$inboundSchema),
  ),
});

/** @internal */
export type RecipientGetTemplateRecipientResponseBody$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetTemplateRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetTemplateRecipientFields$Outbound>;
};

/** @internal */
export const RecipientGetTemplateRecipientResponseBody$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientResponseBody
  > = z.object({
    role: RecipientGetTemplateRecipientRole$outboundSchema,
    readStatus: RecipientGetTemplateRecipientReadStatus$outboundSchema,
    signingStatus: RecipientGetTemplateRecipientSigningStatus$outboundSchema,
    sendStatus: RecipientGetTemplateRecipientSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientGetTemplateRecipientAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientGetTemplateRecipientFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientResponseBody$ {
  /** @deprecated use `RecipientGetTemplateRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientResponseBody$Outbound;
}

export function recipientGetTemplateRecipientResponseBodyToJSON(
  recipientGetTemplateRecipientResponseBody:
    RecipientGetTemplateRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientResponseBody$outboundSchema.parse(
      recipientGetTemplateRecipientResponseBody,
    ),
  );
}

export function recipientGetTemplateRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientResponseBody' from JSON`,
  );
}
