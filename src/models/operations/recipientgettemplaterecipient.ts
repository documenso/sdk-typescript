/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientGetTemplateRecipientRequest = {
  recipientId: number;
};

export const RecipientGetTemplateRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientGetTemplateRecipientRole = ClosedEnum<
  typeof RecipientGetTemplateRecipientRole
>;

export const RecipientGetTemplateRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientGetTemplateRecipientReadStatus = ClosedEnum<
  typeof RecipientGetTemplateRecipientReadStatus
>;

export const RecipientGetTemplateRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientGetTemplateRecipientSigningStatus = ClosedEnum<
  typeof RecipientGetTemplateRecipientSigningStatus
>;

export const RecipientGetTemplateRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientGetTemplateRecipientSendStatus = ClosedEnum<
  typeof RecipientGetTemplateRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientGetTemplateRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientGetTemplateRecipientAccessAuth = ClosedEnum<
  typeof RecipientGetTemplateRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientGetTemplateRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientGetTemplateRecipientActionAuth = ClosedEnum<
  typeof RecipientGetTemplateRecipientActionAuth
>;

export type RecipientGetTemplateRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: RecipientGetTemplateRecipientAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: RecipientGetTemplateRecipientActionAuth | null;
};

export const RecipientGetTemplateRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientGetTemplateRecipientType = ClosedEnum<
  typeof RecipientGetTemplateRecipientType
>;

export const RecipientGetTemplateRecipientTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type RecipientGetTemplateRecipientTypeDropdown = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeDropdown
>;

export type RecipientGetTemplateRecipientValue3 = {
  value: string;
};

export type RecipientGetTemplateRecipientFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeDropdown;
  values?: Array<RecipientGetTemplateRecipientValue3> | undefined;
  defaultValue?: string | undefined;
};

export const RecipientGetTemplateRecipientTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type RecipientGetTemplateRecipientTypeCheckbox = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeCheckbox
>;

export type RecipientGetTemplateRecipientValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetTemplateRecipientFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeCheckbox;
  values?: Array<RecipientGetTemplateRecipientValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientGetTemplateRecipientTypeRadio = {
  Radio: "radio",
} as const;
export type RecipientGetTemplateRecipientTypeRadio = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeRadio
>;

export type RecipientGetTemplateRecipientValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetTemplateRecipientFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeRadio;
  values?: Array<RecipientGetTemplateRecipientValue1> | undefined;
};

export const RecipientGetTemplateRecipientTypeNumber = {
  Number: "number",
} as const;
export type RecipientGetTemplateRecipientTypeNumber = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeNumber
>;

export const RecipientGetTemplateRecipientTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetTemplateRecipientTextAlign6 = ClosedEnum<
  typeof RecipientGetTemplateRecipientTextAlign6
>;

export type RecipientGetTemplateRecipientFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientGetTemplateRecipientTextAlign6 | undefined;
};

export const RecipientGetTemplateRecipientTypeText = {
  Text: "text",
} as const;
export type RecipientGetTemplateRecipientTypeText = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeText
>;

export const RecipientGetTemplateRecipientTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetTemplateRecipientTextAlign5 = ClosedEnum<
  typeof RecipientGetTemplateRecipientTextAlign5
>;

export type RecipientGetTemplateRecipientFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientGetTemplateRecipientTextAlign5 | undefined;
};

export const RecipientGetTemplateRecipientTypeDate = {
  Date: "date",
} as const;
export type RecipientGetTemplateRecipientTypeDate = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeDate
>;

export const RecipientGetTemplateRecipientTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetTemplateRecipientTextAlign4 = ClosedEnum<
  typeof RecipientGetTemplateRecipientTextAlign4
>;

export type RecipientGetTemplateRecipientFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeDate;
  fontSize?: number | undefined;
  textAlign?: RecipientGetTemplateRecipientTextAlign4 | undefined;
};

export const RecipientGetTemplateRecipientTypeEmail = {
  Email: "email",
} as const;
export type RecipientGetTemplateRecipientTypeEmail = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeEmail
>;

export const RecipientGetTemplateRecipientTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetTemplateRecipientTextAlign3 = ClosedEnum<
  typeof RecipientGetTemplateRecipientTextAlign3
>;

export type RecipientGetTemplateRecipientFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeEmail;
  fontSize?: number | undefined;
  textAlign?: RecipientGetTemplateRecipientTextAlign3 | undefined;
};

export const RecipientGetTemplateRecipientTypeName = {
  Name: "name",
} as const;
export type RecipientGetTemplateRecipientTypeName = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeName
>;

export const RecipientGetTemplateRecipientTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetTemplateRecipientTextAlign2 = ClosedEnum<
  typeof RecipientGetTemplateRecipientTextAlign2
>;

export type RecipientGetTemplateRecipientFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeName;
  fontSize?: number | undefined;
  textAlign?: RecipientGetTemplateRecipientTextAlign2 | undefined;
};

export const RecipientGetTemplateRecipientTypeInitials = {
  Initials: "initials",
} as const;
export type RecipientGetTemplateRecipientTypeInitials = ClosedEnum<
  typeof RecipientGetTemplateRecipientTypeInitials
>;

export const RecipientGetTemplateRecipientTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetTemplateRecipientTextAlign1 = ClosedEnum<
  typeof RecipientGetTemplateRecipientTextAlign1
>;

export type RecipientGetTemplateRecipientFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetTemplateRecipientTypeInitials;
  fontSize?: number | undefined;
  textAlign?: RecipientGetTemplateRecipientTextAlign1 | undefined;
};

export type RecipientGetTemplateRecipientFieldMetaUnion =
  | RecipientGetTemplateRecipientFieldMetaRadio
  | RecipientGetTemplateRecipientFieldMetaInitials
  | RecipientGetTemplateRecipientFieldMetaName
  | RecipientGetTemplateRecipientFieldMetaEmail
  | RecipientGetTemplateRecipientFieldMetaDate
  | RecipientGetTemplateRecipientFieldMetaDropdown
  | RecipientGetTemplateRecipientFieldMetaCheckbox
  | RecipientGetTemplateRecipientFieldMetaText
  | RecipientGetTemplateRecipientFieldMetaNumber;

export type RecipientGetTemplateRecipientField = {
  type: RecipientGetTemplateRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetTemplateRecipientFieldMetaRadio
    | RecipientGetTemplateRecipientFieldMetaInitials
    | RecipientGetTemplateRecipientFieldMetaName
    | RecipientGetTemplateRecipientFieldMetaEmail
    | RecipientGetTemplateRecipientFieldMetaDate
    | RecipientGetTemplateRecipientFieldMetaDropdown
    | RecipientGetTemplateRecipientFieldMetaCheckbox
    | RecipientGetTemplateRecipientFieldMetaText
    | RecipientGetTemplateRecipientFieldMetaNumber
    | null;
};

/**
 * Successful response
 */
export type RecipientGetTemplateRecipientResponse = {
  role: RecipientGetTemplateRecipientRole;
  readStatus: RecipientGetTemplateRecipientReadStatus;
  signingStatus: RecipientGetTemplateRecipientSigningStatus;
  sendStatus: RecipientGetTemplateRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetTemplateRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetTemplateRecipientField>;
};

/** @internal */
export const RecipientGetTemplateRecipientRequest$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipientId: z.number(),
});

/** @internal */
export type RecipientGetTemplateRecipientRequest$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientGetTemplateRecipientRequest$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientRequest
> = z.object({
  recipientId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientRequest$ {
  /** @deprecated use `RecipientGetTemplateRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientRequest$Outbound;
}

export function recipientGetTemplateRecipientRequestToJSON(
  recipientGetTemplateRecipientRequest: RecipientGetTemplateRecipientRequest,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientRequest$outboundSchema.parse(
      recipientGetTemplateRecipientRequest,
    ),
  );
}

export function recipientGetTemplateRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientRole$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientRole
> = z.nativeEnum(RecipientGetTemplateRecipientRole);

/** @internal */
export const RecipientGetTemplateRecipientRole$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientRole
> = RecipientGetTemplateRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientRole$ {
  /** @deprecated use `RecipientGetTemplateRecipientRole$inboundSchema` instead. */
  export const inboundSchema = RecipientGetTemplateRecipientRole$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientRole$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientReadStatus> = z
    .nativeEnum(RecipientGetTemplateRecipientReadStatus);

/** @internal */
export const RecipientGetTemplateRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientReadStatus> =
    RecipientGetTemplateRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientReadStatus$ {
  /** @deprecated use `RecipientGetTemplateRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSigningStatus> = z
    .nativeEnum(RecipientGetTemplateRecipientSigningStatus);

/** @internal */
export const RecipientGetTemplateRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSigningStatus> =
    RecipientGetTemplateRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientSigningStatus$ {
  /** @deprecated use `RecipientGetTemplateRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSendStatus> = z
    .nativeEnum(RecipientGetTemplateRecipientSendStatus);

/** @internal */
export const RecipientGetTemplateRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientSendStatus> =
    RecipientGetTemplateRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientSendStatus$ {
  /** @deprecated use `RecipientGetTemplateRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientAccessAuth> = z
    .nativeEnum(RecipientGetTemplateRecipientAccessAuth);

/** @internal */
export const RecipientGetTemplateRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientAccessAuth> =
    RecipientGetTemplateRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientAccessAuth$ {
  /** @deprecated use `RecipientGetTemplateRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientActionAuth> = z
    .nativeEnum(RecipientGetTemplateRecipientActionAuth);

/** @internal */
export const RecipientGetTemplateRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientActionAuth> =
    RecipientGetTemplateRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientActionAuth$ {
  /** @deprecated use `RecipientGetTemplateRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientAuthOptions$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientAuthOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessAuth: z.nullable(RecipientGetTemplateRecipientAccessAuth$inboundSchema),
  actionAuth: z.nullable(RecipientGetTemplateRecipientActionAuth$inboundSchema),
});

/** @internal */
export type RecipientGetTemplateRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientGetTemplateRecipientAuthOptions$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientAuthOptions$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientAuthOptions
> = z.object({
  accessAuth: z.nullable(
    RecipientGetTemplateRecipientAccessAuth$outboundSchema,
  ),
  actionAuth: z.nullable(
    RecipientGetTemplateRecipientActionAuth$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientAuthOptions$ {
  /** @deprecated use `RecipientGetTemplateRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientAuthOptions$Outbound;
}

export function recipientGetTemplateRecipientAuthOptionsToJSON(
  recipientGetTemplateRecipientAuthOptions:
    RecipientGetTemplateRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientAuthOptions$outboundSchema.parse(
      recipientGetTemplateRecipientAuthOptions,
    ),
  );
}

export function recipientGetTemplateRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientType$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientType
> = z.nativeEnum(RecipientGetTemplateRecipientType);

/** @internal */
export const RecipientGetTemplateRecipientType$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetTemplateRecipientType
> = RecipientGetTemplateRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientType$ {
  /** @deprecated use `RecipientGetTemplateRecipientType$inboundSchema` instead. */
  export const inboundSchema = RecipientGetTemplateRecipientType$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientType$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeDropdown> = z
    .nativeEnum(RecipientGetTemplateRecipientTypeDropdown);

/** @internal */
export const RecipientGetTemplateRecipientTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeDropdown> =
    RecipientGetTemplateRecipientTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeDropdown$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeDropdown$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeDropdown$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientValue3$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type RecipientGetTemplateRecipientValue3$Outbound = {
  value: string;
};

/** @internal */
export const RecipientGetTemplateRecipientValue3$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientValue3$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientValue3$ {
  /** @deprecated use `RecipientGetTemplateRecipientValue3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientValue3$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientValue3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientValue3$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientValue3$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientValue3$Outbound;
}

export function recipientGetTemplateRecipientValue3ToJSON(
  recipientGetTemplateRecipientValue3: RecipientGetTemplateRecipientValue3,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientValue3$outboundSchema.parse(
      recipientGetTemplateRecipientValue3,
    ),
  );
}

export function recipientGetTemplateRecipientValue3FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientValue3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientValue3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientValue3' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaDropdown$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetTemplateRecipientValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetTemplateRecipientValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaDropdown$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetTemplateRecipientValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaDropdown$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaDropdown$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaDropdown$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    RecipientGetTemplateRecipientFieldMetaDropdown$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaDropdownToJSON(
  recipientGetTemplateRecipientFieldMetaDropdown:
    RecipientGetTemplateRecipientFieldMetaDropdown,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaDropdown$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaDropdown,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeCheckbox> = z
    .nativeEnum(RecipientGetTemplateRecipientTypeCheckbox);

/** @internal */
export const RecipientGetTemplateRecipientTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeCheckbox> =
    RecipientGetTemplateRecipientTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeCheckbox$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeCheckbox$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeCheckbox$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientValue2$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientGetTemplateRecipientValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetTemplateRecipientValue2$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientValue2$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientValue2$ {
  /** @deprecated use `RecipientGetTemplateRecipientValue2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientValue2$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientValue2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientValue2$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientValue2$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientValue2$Outbound;
}

export function recipientGetTemplateRecipientValue2ToJSON(
  recipientGetTemplateRecipientValue2: RecipientGetTemplateRecipientValue2,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientValue2$outboundSchema.parse(
      recipientGetTemplateRecipientValue2,
    ),
  );
}

export function recipientGetTemplateRecipientValue2FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientValue2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientValue2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientValue2' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetTemplateRecipientValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetTemplateRecipientValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetTemplateRecipientValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaCheckbox$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    RecipientGetTemplateRecipientFieldMetaCheckbox$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaCheckboxToJSON(
  recipientGetTemplateRecipientFieldMetaCheckbox:
    RecipientGetTemplateRecipientFieldMetaCheckbox,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaCheckbox$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaCheckbox,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeRadio> = z.nativeEnum(
    RecipientGetTemplateRecipientTypeRadio,
  );

/** @internal */
export const RecipientGetTemplateRecipientTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeRadio> =
    RecipientGetTemplateRecipientTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeRadio$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeRadio$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeRadio$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientValue1$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientGetTemplateRecipientValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetTemplateRecipientValue1$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientValue1$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientValue1$ {
  /** @deprecated use `RecipientGetTemplateRecipientValue1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientValue1$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientValue1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientValue1$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientValue1$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientValue1$Outbound;
}

export function recipientGetTemplateRecipientValue1ToJSON(
  recipientGetTemplateRecipientValue1: RecipientGetTemplateRecipientValue1,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientValue1$outboundSchema.parse(
      recipientGetTemplateRecipientValue1,
    ),
  );
}

export function recipientGetTemplateRecipientValue1FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientValue1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientValue1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientValue1' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaRadio$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetTemplateRecipientValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetTemplateRecipientValue1$Outbound> | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaRadio$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetTemplateRecipientValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaRadio$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaRadio$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaRadio$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaRadio$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaRadio$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaRadioToJSON(
  recipientGetTemplateRecipientFieldMetaRadio:
    RecipientGetTemplateRecipientFieldMetaRadio,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaRadio$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaRadio,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeNumber> = z
    .nativeEnum(RecipientGetTemplateRecipientTypeNumber);

/** @internal */
export const RecipientGetTemplateRecipientTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeNumber> =
    RecipientGetTemplateRecipientTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeNumber$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeNumber$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeNumber$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign6> = z
    .nativeEnum(RecipientGetTemplateRecipientTextAlign6);

/** @internal */
export const RecipientGetTemplateRecipientTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign6> =
    RecipientGetTemplateRecipientTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTextAlign6$ {
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTextAlign6$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTextAlign6$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaNumber$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign6$inboundSchema.optional(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaNumber$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaNumber$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaNumber$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaNumber$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaNumber$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaNumber$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaNumberToJSON(
  recipientGetTemplateRecipientFieldMetaNumber:
    RecipientGetTemplateRecipientFieldMetaNumber,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaNumber$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaNumber,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeText$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeText> = z.nativeEnum(
    RecipientGetTemplateRecipientTypeText,
  );

/** @internal */
export const RecipientGetTemplateRecipientTypeText$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeText> =
    RecipientGetTemplateRecipientTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeText$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeText$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeText$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign5> = z
    .nativeEnum(RecipientGetTemplateRecipientTextAlign5);

/** @internal */
export const RecipientGetTemplateRecipientTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign5> =
    RecipientGetTemplateRecipientTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTextAlign5$ {
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTextAlign5$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTextAlign5$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaText$inboundSchema:
  z.ZodType<RecipientGetTemplateRecipientFieldMetaText, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientGetTemplateRecipientTypeText$inboundSchema,
      text: z.string().optional(),
      characterLimit: z.number().optional(),
      fontSize: z.number().optional(),
      textAlign: RecipientGetTemplateRecipientTextAlign5$inboundSchema
        .optional(),
    });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaText$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaText$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaText$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaText$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaText$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaText$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaText$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaTextToJSON(
  recipientGetTemplateRecipientFieldMetaText:
    RecipientGetTemplateRecipientFieldMetaText,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaText$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaText,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaText' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeDate> = z.nativeEnum(
    RecipientGetTemplateRecipientTypeDate,
  );

/** @internal */
export const RecipientGetTemplateRecipientTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeDate> =
    RecipientGetTemplateRecipientTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeDate$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeDate$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeDate$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign4> = z
    .nativeEnum(RecipientGetTemplateRecipientTextAlign4);

/** @internal */
export const RecipientGetTemplateRecipientTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign4> =
    RecipientGetTemplateRecipientTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTextAlign4$ {
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTextAlign4$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTextAlign4$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaDate$inboundSchema:
  z.ZodType<RecipientGetTemplateRecipientFieldMetaDate, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientGetTemplateRecipientTypeDate$inboundSchema,
      fontSize: z.number().optional(),
      textAlign: RecipientGetTemplateRecipientTextAlign4$inboundSchema
        .optional(),
    });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaDate$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaDate$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaDate$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaDate$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaDate$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaDate$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaDate$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaDateToJSON(
  recipientGetTemplateRecipientFieldMetaDate:
    RecipientGetTemplateRecipientFieldMetaDate,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaDate$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaDate,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeEmail> = z.nativeEnum(
    RecipientGetTemplateRecipientTypeEmail,
  );

/** @internal */
export const RecipientGetTemplateRecipientTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeEmail> =
    RecipientGetTemplateRecipientTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeEmail$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeEmail$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeEmail$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign3> = z
    .nativeEnum(RecipientGetTemplateRecipientTextAlign3);

/** @internal */
export const RecipientGetTemplateRecipientTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign3> =
    RecipientGetTemplateRecipientTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTextAlign3$ {
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTextAlign3$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTextAlign3$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaEmail$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign3$inboundSchema.optional(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaEmail$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaEmail$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaEmail$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaEmail$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaEmail$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaEmail$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaEmailToJSON(
  recipientGetTemplateRecipientFieldMetaEmail:
    RecipientGetTemplateRecipientFieldMetaEmail,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaEmail$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaEmail,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeName$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeName> = z.nativeEnum(
    RecipientGetTemplateRecipientTypeName,
  );

/** @internal */
export const RecipientGetTemplateRecipientTypeName$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeName> =
    RecipientGetTemplateRecipientTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeName$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeName$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeName$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign2> = z
    .nativeEnum(RecipientGetTemplateRecipientTextAlign2);

/** @internal */
export const RecipientGetTemplateRecipientTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign2> =
    RecipientGetTemplateRecipientTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTextAlign2$ {
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTextAlign2$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTextAlign2$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaName$inboundSchema:
  z.ZodType<RecipientGetTemplateRecipientFieldMetaName, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientGetTemplateRecipientTypeName$inboundSchema,
      fontSize: z.number().optional(),
      textAlign: RecipientGetTemplateRecipientTextAlign2$inboundSchema
        .optional(),
    });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaName$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaName$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaName$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaName$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaName$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaName$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaName$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaNameToJSON(
  recipientGetTemplateRecipientFieldMetaName:
    RecipientGetTemplateRecipientFieldMetaName,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaName$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaName,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaName' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeInitials> = z
    .nativeEnum(RecipientGetTemplateRecipientTypeInitials);

/** @internal */
export const RecipientGetTemplateRecipientTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTypeInitials> =
    RecipientGetTemplateRecipientTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTypeInitials$ {
  /** @deprecated use `RecipientGetTemplateRecipientTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTypeInitials$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTypeInitials$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign1> = z
    .nativeEnum(RecipientGetTemplateRecipientTextAlign1);

/** @internal */
export const RecipientGetTemplateRecipientTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetTemplateRecipientTextAlign1> =
    RecipientGetTemplateRecipientTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientTextAlign1$ {
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientTextAlign1$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientTextAlign1$outboundSchema;
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaInitials$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign1$inboundSchema.optional(),
  });

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaInitials$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetTemplateRecipientTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetTemplateRecipientTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaInitials$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaInitials$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaInitials$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    RecipientGetTemplateRecipientFieldMetaInitials$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaInitialsToJSON(
  recipientGetTemplateRecipientFieldMetaInitials:
    RecipientGetTemplateRecipientFieldMetaInitials,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaInitials$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaInitials,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaUnion$inboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaRadio$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaInitials$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaName$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaEmail$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaDate$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaDropdown$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaCheckbox$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaText$inboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaNumber$inboundSchema),
  ]);

/** @internal */
export type RecipientGetTemplateRecipientFieldMetaUnion$Outbound =
  | RecipientGetTemplateRecipientFieldMetaRadio$Outbound
  | RecipientGetTemplateRecipientFieldMetaInitials$Outbound
  | RecipientGetTemplateRecipientFieldMetaName$Outbound
  | RecipientGetTemplateRecipientFieldMetaEmail$Outbound
  | RecipientGetTemplateRecipientFieldMetaDate$Outbound
  | RecipientGetTemplateRecipientFieldMetaDropdown$Outbound
  | RecipientGetTemplateRecipientFieldMetaCheckbox$Outbound
  | RecipientGetTemplateRecipientFieldMetaText$Outbound
  | RecipientGetTemplateRecipientFieldMetaNumber$Outbound;

/** @internal */
export const RecipientGetTemplateRecipientFieldMetaUnion$outboundSchema:
  z.ZodType<
    RecipientGetTemplateRecipientFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    RecipientGetTemplateRecipientFieldMetaUnion
  > = z.union([
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaRadio$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaInitials$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaName$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaEmail$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaDate$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaDropdown$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaCheckbox$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaText$outboundSchema),
    z.lazy(() => RecipientGetTemplateRecipientFieldMetaNumber$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientFieldMetaUnion$ {
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientFieldMetaUnion$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientFieldMetaUnion$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientFieldMetaUnion$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientFieldMetaUnion$Outbound;
}

export function recipientGetTemplateRecipientFieldMetaUnionToJSON(
  recipientGetTemplateRecipientFieldMetaUnion:
    RecipientGetTemplateRecipientFieldMetaUnion,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientFieldMetaUnion$outboundSchema.parse(
      recipientGetTemplateRecipientFieldMetaUnion,
    ),
  );
}

export function recipientGetTemplateRecipientFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetTemplateRecipientFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetTemplateRecipientFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientField$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientField,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientGetTemplateRecipientType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaRadio$inboundSchema),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaInitials$inboundSchema
      ),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaName$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaEmail$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaDate$inboundSchema),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaDropdown$inboundSchema
      ),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaText$inboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaNumber$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientGetTemplateRecipientField$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetTemplateRecipientFieldMetaRadio$Outbound
    | RecipientGetTemplateRecipientFieldMetaInitials$Outbound
    | RecipientGetTemplateRecipientFieldMetaName$Outbound
    | RecipientGetTemplateRecipientFieldMetaEmail$Outbound
    | RecipientGetTemplateRecipientFieldMetaDate$Outbound
    | RecipientGetTemplateRecipientFieldMetaDropdown$Outbound
    | RecipientGetTemplateRecipientFieldMetaCheckbox$Outbound
    | RecipientGetTemplateRecipientFieldMetaText$Outbound
    | RecipientGetTemplateRecipientFieldMetaNumber$Outbound
    | null;
};

/** @internal */
export const RecipientGetTemplateRecipientField$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientField$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientField
> = z.object({
  type: RecipientGetTemplateRecipientType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaRadio$outboundSchema),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaName$outboundSchema
      ),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaEmail$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaDate$outboundSchema),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaDropdown$outboundSchema
      ),
      z.lazy(() =>
        RecipientGetTemplateRecipientFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaText$outboundSchema),
      z.lazy(() => RecipientGetTemplateRecipientFieldMetaNumber$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientField$ {
  /** @deprecated use `RecipientGetTemplateRecipientField$inboundSchema` instead. */
  export const inboundSchema = RecipientGetTemplateRecipientField$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientField$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientField$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientField$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientField$Outbound;
}

export function recipientGetTemplateRecipientFieldToJSON(
  recipientGetTemplateRecipientField: RecipientGetTemplateRecipientField,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientField$outboundSchema.parse(
      recipientGetTemplateRecipientField,
    ),
  );
}

export function recipientGetTemplateRecipientFieldFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientField' from JSON`,
  );
}

/** @internal */
export const RecipientGetTemplateRecipientResponse$inboundSchema: z.ZodType<
  RecipientGetTemplateRecipientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: RecipientGetTemplateRecipientRole$inboundSchema,
  readStatus: RecipientGetTemplateRecipientReadStatus$inboundSchema,
  signingStatus: RecipientGetTemplateRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientGetTemplateRecipientSendStatus$inboundSchema,
  id: z.number(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetTemplateRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientGetTemplateRecipientField$inboundSchema),
  ),
});

/** @internal */
export type RecipientGetTemplateRecipientResponse$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetTemplateRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetTemplateRecipientField$Outbound>;
};

/** @internal */
export const RecipientGetTemplateRecipientResponse$outboundSchema: z.ZodType<
  RecipientGetTemplateRecipientResponse$Outbound,
  z.ZodTypeDef,
  RecipientGetTemplateRecipientResponse
> = z.object({
  role: RecipientGetTemplateRecipientRole$outboundSchema,
  readStatus: RecipientGetTemplateRecipientReadStatus$outboundSchema,
  signingStatus: RecipientGetTemplateRecipientSigningStatus$outboundSchema,
  sendStatus: RecipientGetTemplateRecipientSendStatus$outboundSchema,
  id: z.number(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetTemplateRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientGetTemplateRecipientField$outboundSchema),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetTemplateRecipientResponse$ {
  /** @deprecated use `RecipientGetTemplateRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetTemplateRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetTemplateRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientGetTemplateRecipientResponse$Outbound` instead. */
  export type Outbound = RecipientGetTemplateRecipientResponse$Outbound;
}

export function recipientGetTemplateRecipientResponseToJSON(
  recipientGetTemplateRecipientResponse: RecipientGetTemplateRecipientResponse,
): string {
  return JSON.stringify(
    RecipientGetTemplateRecipientResponse$outboundSchema.parse(
      recipientGetTemplateRecipientResponse,
    ),
  );
}

export function recipientGetTemplateRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetTemplateRecipientResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetTemplateRecipientResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetTemplateRecipientResponse' from JSON`,
  );
}
