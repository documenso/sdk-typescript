/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentRedistributeRequest = {
  documentId: number;
  /**
   * The IDs of the recipients to redistribute the document to.
   */
  recipients: Array<number>;
};

/**
 * Successful response
 */
export type DocumentRedistributeResponse = {
  success: boolean;
};

/** @internal */
export const DocumentRedistributeRequest$inboundSchema: z.ZodType<
  DocumentRedistributeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  recipients: z.array(z.number()),
});

/** @internal */
export type DocumentRedistributeRequest$Outbound = {
  documentId: number;
  recipients: Array<number>;
};

/** @internal */
export const DocumentRedistributeRequest$outboundSchema: z.ZodType<
  DocumentRedistributeRequest$Outbound,
  z.ZodTypeDef,
  DocumentRedistributeRequest
> = z.object({
  documentId: z.number(),
  recipients: z.array(z.number()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentRedistributeRequest$ {
  /** @deprecated use `DocumentRedistributeRequest$inboundSchema` instead. */
  export const inboundSchema = DocumentRedistributeRequest$inboundSchema;
  /** @deprecated use `DocumentRedistributeRequest$outboundSchema` instead. */
  export const outboundSchema = DocumentRedistributeRequest$outboundSchema;
  /** @deprecated use `DocumentRedistributeRequest$Outbound` instead. */
  export type Outbound = DocumentRedistributeRequest$Outbound;
}

export function documentRedistributeRequestToJSON(
  documentRedistributeRequest: DocumentRedistributeRequest,
): string {
  return JSON.stringify(
    DocumentRedistributeRequest$outboundSchema.parse(
      documentRedistributeRequest,
    ),
  );
}

export function documentRedistributeRequestFromJSON(
  jsonString: string,
): SafeParseResult<DocumentRedistributeRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentRedistributeRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentRedistributeRequest' from JSON`,
  );
}

/** @internal */
export const DocumentRedistributeResponse$inboundSchema: z.ZodType<
  DocumentRedistributeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
});

/** @internal */
export type DocumentRedistributeResponse$Outbound = {
  success: boolean;
};

/** @internal */
export const DocumentRedistributeResponse$outboundSchema: z.ZodType<
  DocumentRedistributeResponse$Outbound,
  z.ZodTypeDef,
  DocumentRedistributeResponse
> = z.object({
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentRedistributeResponse$ {
  /** @deprecated use `DocumentRedistributeResponse$inboundSchema` instead. */
  export const inboundSchema = DocumentRedistributeResponse$inboundSchema;
  /** @deprecated use `DocumentRedistributeResponse$outboundSchema` instead. */
  export const outboundSchema = DocumentRedistributeResponse$outboundSchema;
  /** @deprecated use `DocumentRedistributeResponse$Outbound` instead. */
  export type Outbound = DocumentRedistributeResponse$Outbound;
}

export function documentRedistributeResponseToJSON(
  documentRedistributeResponse: DocumentRedistributeResponse,
): string {
  return JSON.stringify(
    DocumentRedistributeResponse$outboundSchema.parse(
      documentRedistributeResponse,
    ),
  );
}

export function documentRedistributeResponseFromJSON(
  jsonString: string,
): SafeParseResult<DocumentRedistributeResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentRedistributeResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentRedistributeResponse' from JSON`,
  );
}
