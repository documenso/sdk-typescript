/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FieldGetDocumentFieldRequest = {
  fieldId: number;
};

export const FieldGetDocumentFieldType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldGetDocumentFieldType = ClosedEnum<
  typeof FieldGetDocumentFieldType
>;

export const FieldGetDocumentFieldTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type FieldGetDocumentFieldTypeDropdown = ClosedEnum<
  typeof FieldGetDocumentFieldTypeDropdown
>;

export type FieldGetDocumentFieldValue3 = {
  value: string;
};

export type FieldGetDocumentFieldFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeDropdown;
  values?: Array<FieldGetDocumentFieldValue3> | undefined;
  defaultValue?: string | undefined;
};

export const FieldGetDocumentFieldTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type FieldGetDocumentFieldTypeCheckbox = ClosedEnum<
  typeof FieldGetDocumentFieldTypeCheckbox
>;

export type FieldGetDocumentFieldValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export const FieldGetDocumentFieldDirection = {
  Vertical: "vertical",
  Horizontal: "horizontal",
} as const;
export type FieldGetDocumentFieldDirection = ClosedEnum<
  typeof FieldGetDocumentFieldDirection
>;

export type FieldGetDocumentFieldFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeCheckbox;
  values?: Array<FieldGetDocumentFieldValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction?: FieldGetDocumentFieldDirection | undefined;
};

export const FieldGetDocumentFieldTypeRadio = {
  Radio: "radio",
} as const;
export type FieldGetDocumentFieldTypeRadio = ClosedEnum<
  typeof FieldGetDocumentFieldTypeRadio
>;

export type FieldGetDocumentFieldValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldGetDocumentFieldFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeRadio;
  values?: Array<FieldGetDocumentFieldValue1> | undefined;
};

export const FieldGetDocumentFieldTypeNumber = {
  Number: "number",
} as const;
export type FieldGetDocumentFieldTypeNumber = ClosedEnum<
  typeof FieldGetDocumentFieldTypeNumber
>;

export const FieldGetDocumentFieldTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldGetDocumentFieldTextAlign6 = ClosedEnum<
  typeof FieldGetDocumentFieldTextAlign6
>;

export type FieldGetDocumentFieldFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeNumber;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldGetDocumentFieldTextAlign6 | undefined;
};

export const FieldGetDocumentFieldTypeText = {
  Text: "text",
} as const;
export type FieldGetDocumentFieldTypeText = ClosedEnum<
  typeof FieldGetDocumentFieldTypeText
>;

export const FieldGetDocumentFieldTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldGetDocumentFieldTextAlign5 = ClosedEnum<
  typeof FieldGetDocumentFieldTextAlign5
>;

export type FieldGetDocumentFieldFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldGetDocumentFieldTextAlign5 | undefined;
};

export const FieldGetDocumentFieldTypeDate = {
  Date: "date",
} as const;
export type FieldGetDocumentFieldTypeDate = ClosedEnum<
  typeof FieldGetDocumentFieldTypeDate
>;

export const FieldGetDocumentFieldTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldGetDocumentFieldTextAlign4 = ClosedEnum<
  typeof FieldGetDocumentFieldTextAlign4
>;

export type FieldGetDocumentFieldFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeDate;
  fontSize?: number | undefined;
  textAlign?: FieldGetDocumentFieldTextAlign4 | undefined;
};

export const FieldGetDocumentFieldTypeEmail = {
  Email: "email",
} as const;
export type FieldGetDocumentFieldTypeEmail = ClosedEnum<
  typeof FieldGetDocumentFieldTypeEmail
>;

export const FieldGetDocumentFieldTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldGetDocumentFieldTextAlign3 = ClosedEnum<
  typeof FieldGetDocumentFieldTextAlign3
>;

export type FieldGetDocumentFieldFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeEmail;
  fontSize?: number | undefined;
  textAlign?: FieldGetDocumentFieldTextAlign3 | undefined;
};

export const FieldGetDocumentFieldTypeName = {
  Name: "name",
} as const;
export type FieldGetDocumentFieldTypeName = ClosedEnum<
  typeof FieldGetDocumentFieldTypeName
>;

export const FieldGetDocumentFieldTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldGetDocumentFieldTextAlign2 = ClosedEnum<
  typeof FieldGetDocumentFieldTextAlign2
>;

export type FieldGetDocumentFieldFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeName;
  fontSize?: number | undefined;
  textAlign?: FieldGetDocumentFieldTextAlign2 | undefined;
};

export const FieldGetDocumentFieldTypeInitials = {
  Initials: "initials",
} as const;
export type FieldGetDocumentFieldTypeInitials = ClosedEnum<
  typeof FieldGetDocumentFieldTypeInitials
>;

export const FieldGetDocumentFieldTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldGetDocumentFieldTextAlign1 = ClosedEnum<
  typeof FieldGetDocumentFieldTextAlign1
>;

export type FieldGetDocumentFieldFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldGetDocumentFieldTypeInitials;
  fontSize?: number | undefined;
  textAlign?: FieldGetDocumentFieldTextAlign1 | undefined;
};

export type FieldGetDocumentFieldFieldMetaUnion =
  | FieldGetDocumentFieldFieldMetaInitials
  | FieldGetDocumentFieldFieldMetaName
  | FieldGetDocumentFieldFieldMetaEmail
  | FieldGetDocumentFieldFieldMetaDate
  | FieldGetDocumentFieldFieldMetaText
  | FieldGetDocumentFieldFieldMetaNumber
  | FieldGetDocumentFieldFieldMetaRadio
  | FieldGetDocumentFieldFieldMetaCheckbox
  | FieldGetDocumentFieldFieldMetaDropdown;

/**
 * Successful response
 */
export type FieldGetDocumentFieldResponse = {
  envelopeId: string;
  envelopeItemId: string;
  type: FieldGetDocumentFieldType;
  id: number;
  secondaryId: string;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldGetDocumentFieldFieldMetaInitials
    | FieldGetDocumentFieldFieldMetaName
    | FieldGetDocumentFieldFieldMetaEmail
    | FieldGetDocumentFieldFieldMetaDate
    | FieldGetDocumentFieldFieldMetaText
    | FieldGetDocumentFieldFieldMetaNumber
    | FieldGetDocumentFieldFieldMetaRadio
    | FieldGetDocumentFieldFieldMetaCheckbox
    | FieldGetDocumentFieldFieldMetaDropdown
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const FieldGetDocumentFieldRequest$inboundSchema: z.ZodType<
  FieldGetDocumentFieldRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  fieldId: z.number(),
});

/** @internal */
export type FieldGetDocumentFieldRequest$Outbound = {
  fieldId: number;
};

/** @internal */
export const FieldGetDocumentFieldRequest$outboundSchema: z.ZodType<
  FieldGetDocumentFieldRequest$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldRequest
> = z.object({
  fieldId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldRequest$ {
  /** @deprecated use `FieldGetDocumentFieldRequest$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldRequest$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldRequest$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldRequest$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldRequest$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldRequest$Outbound;
}

export function fieldGetDocumentFieldRequestToJSON(
  fieldGetDocumentFieldRequest: FieldGetDocumentFieldRequest,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldRequest$outboundSchema.parse(
      fieldGetDocumentFieldRequest,
    ),
  );
}

export function fieldGetDocumentFieldRequestFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldGetDocumentFieldRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldRequest' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldType$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldType
> = z.nativeEnum(FieldGetDocumentFieldType);

/** @internal */
export const FieldGetDocumentFieldType$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldType
> = FieldGetDocumentFieldType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldType$ {
  /** @deprecated use `FieldGetDocumentFieldType$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldType$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldType$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldType$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTypeDropdown$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeDropdown
> = z.nativeEnum(FieldGetDocumentFieldTypeDropdown);

/** @internal */
export const FieldGetDocumentFieldTypeDropdown$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeDropdown
> = FieldGetDocumentFieldTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeDropdown$ {
  /** @deprecated use `FieldGetDocumentFieldTypeDropdown$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeDropdown$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldTypeDropdown$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldValue3$inboundSchema: z.ZodType<
  FieldGetDocumentFieldValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldGetDocumentFieldValue3$Outbound = {
  value: string;
};

/** @internal */
export const FieldGetDocumentFieldValue3$outboundSchema: z.ZodType<
  FieldGetDocumentFieldValue3$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldValue3$ {
  /** @deprecated use `FieldGetDocumentFieldValue3$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldValue3$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldValue3$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldValue3$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldValue3$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldValue3$Outbound;
}

export function fieldGetDocumentFieldValue3ToJSON(
  fieldGetDocumentFieldValue3: FieldGetDocumentFieldValue3,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldValue3$outboundSchema.parse(
      fieldGetDocumentFieldValue3,
    ),
  );
}

export function fieldGetDocumentFieldValue3FromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldValue3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldGetDocumentFieldValue3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldValue3' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaDropdown$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeDropdown$inboundSchema,
  values: z.array(z.lazy(() => FieldGetDocumentFieldValue3$inboundSchema))
    .optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldGetDocumentFieldValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaDropdown$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaDropdown$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaDropdown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeDropdown$outboundSchema,
  values: z.array(z.lazy(() => FieldGetDocumentFieldValue3$outboundSchema))
    .optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaDropdown$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaDropdown$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaDropdown$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaDropdown$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaDropdown$Outbound;
}

export function fieldGetDocumentFieldFieldMetaDropdownToJSON(
  fieldGetDocumentFieldFieldMetaDropdown:
    FieldGetDocumentFieldFieldMetaDropdown,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaDropdown$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaDropdown,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeCheckbox$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeCheckbox
> = z.nativeEnum(FieldGetDocumentFieldTypeCheckbox);

/** @internal */
export const FieldGetDocumentFieldTypeCheckbox$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeCheckbox
> = FieldGetDocumentFieldTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeCheckbox$ {
  /** @deprecated use `FieldGetDocumentFieldTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeCheckbox$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldTypeCheckbox$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldValue2$inboundSchema: z.ZodType<
  FieldGetDocumentFieldValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldGetDocumentFieldValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldGetDocumentFieldValue2$outboundSchema: z.ZodType<
  FieldGetDocumentFieldValue2$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldValue2$ {
  /** @deprecated use `FieldGetDocumentFieldValue2$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldValue2$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldValue2$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldValue2$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldValue2$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldValue2$Outbound;
}

export function fieldGetDocumentFieldValue2ToJSON(
  fieldGetDocumentFieldValue2: FieldGetDocumentFieldValue2,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldValue2$outboundSchema.parse(
      fieldGetDocumentFieldValue2,
    ),
  );
}

export function fieldGetDocumentFieldValue2FromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldValue2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldGetDocumentFieldValue2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldValue2' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldDirection$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldDirection
> = z.nativeEnum(FieldGetDocumentFieldDirection);

/** @internal */
export const FieldGetDocumentFieldDirection$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldDirection
> = FieldGetDocumentFieldDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldDirection$ {
  /** @deprecated use `FieldGetDocumentFieldDirection$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldDirection$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldDirection$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldDirection$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaCheckbox$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeCheckbox$inboundSchema,
  values: z.array(z.lazy(() => FieldGetDocumentFieldValue2$inboundSchema))
    .optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
  direction: FieldGetDocumentFieldDirection$inboundSchema.default("vertical"),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldGetDocumentFieldValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
  direction: string;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaCheckbox$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaCheckbox$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaCheckbox
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeCheckbox$outboundSchema,
  values: z.array(z.lazy(() => FieldGetDocumentFieldValue2$outboundSchema))
    .optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
  direction: FieldGetDocumentFieldDirection$outboundSchema.default("vertical"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaCheckbox$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaCheckbox$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaCheckbox$Outbound;
}

export function fieldGetDocumentFieldFieldMetaCheckboxToJSON(
  fieldGetDocumentFieldFieldMetaCheckbox:
    FieldGetDocumentFieldFieldMetaCheckbox,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaCheckbox$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaCheckbox,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeRadio$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeRadio
> = z.nativeEnum(FieldGetDocumentFieldTypeRadio);

/** @internal */
export const FieldGetDocumentFieldTypeRadio$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeRadio
> = FieldGetDocumentFieldTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeRadio$ {
  /** @deprecated use `FieldGetDocumentFieldTypeRadio$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeRadio$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeRadio$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTypeRadio$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldValue1$inboundSchema: z.ZodType<
  FieldGetDocumentFieldValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldGetDocumentFieldValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldGetDocumentFieldValue1$outboundSchema: z.ZodType<
  FieldGetDocumentFieldValue1$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldValue1$ {
  /** @deprecated use `FieldGetDocumentFieldValue1$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldValue1$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldValue1$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldValue1$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldValue1$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldValue1$Outbound;
}

export function fieldGetDocumentFieldValue1ToJSON(
  fieldGetDocumentFieldValue1: FieldGetDocumentFieldValue1,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldValue1$outboundSchema.parse(
      fieldGetDocumentFieldValue1,
    ),
  );
}

export function fieldGetDocumentFieldValue1FromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldValue1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldGetDocumentFieldValue1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldValue1' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaRadio$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeRadio$inboundSchema,
  values: z.array(z.lazy(() => FieldGetDocumentFieldValue1$inboundSchema))
    .optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldGetDocumentFieldValue1$Outbound> | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaRadio$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaRadio$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaRadio
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeRadio$outboundSchema,
  values: z.array(z.lazy(() => FieldGetDocumentFieldValue1$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaRadio$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaRadio$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaRadio$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaRadio$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaRadio$Outbound;
}

export function fieldGetDocumentFieldFieldMetaRadioToJSON(
  fieldGetDocumentFieldFieldMetaRadio: FieldGetDocumentFieldFieldMetaRadio,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaRadio$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaRadio,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeNumber$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeNumber
> = z.nativeEnum(FieldGetDocumentFieldTypeNumber);

/** @internal */
export const FieldGetDocumentFieldTypeNumber$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeNumber
> = FieldGetDocumentFieldTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeNumber$ {
  /** @deprecated use `FieldGetDocumentFieldTypeNumber$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeNumber$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeNumber$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTypeNumber$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTextAlign6$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign6
> = z.nativeEnum(FieldGetDocumentFieldTextAlign6);

/** @internal */
export const FieldGetDocumentFieldTextAlign6$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign6
> = FieldGetDocumentFieldTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTextAlign6$ {
  /** @deprecated use `FieldGetDocumentFieldTextAlign6$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTextAlign6$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTextAlign6$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTextAlign6$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaNumber$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeNumber$inboundSchema,
  numberFormat: z.nullable(z.string()).optional(),
  value: z.string().optional(),
  minValue: z.nullable(z.number()).optional(),
  maxValue: z.nullable(z.number()).optional(),
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign6$inboundSchema.optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | null | undefined;
  value?: string | undefined;
  minValue?: number | null | undefined;
  maxValue?: number | null | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaNumber$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaNumber$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaNumber
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeNumber$outboundSchema,
  numberFormat: z.nullable(z.string()).optional(),
  value: z.string().optional(),
  minValue: z.nullable(z.number()).optional(),
  maxValue: z.nullable(z.number()).optional(),
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign6$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaNumber$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaNumber$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaNumber$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaNumber$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaNumber$Outbound;
}

export function fieldGetDocumentFieldFieldMetaNumberToJSON(
  fieldGetDocumentFieldFieldMetaNumber: FieldGetDocumentFieldFieldMetaNumber,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaNumber$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaNumber,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeText$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeText
> = z.nativeEnum(FieldGetDocumentFieldTypeText);

/** @internal */
export const FieldGetDocumentFieldTypeText$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeText
> = FieldGetDocumentFieldTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeText$ {
  /** @deprecated use `FieldGetDocumentFieldTypeText$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeText$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeText$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTypeText$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTextAlign5$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign5
> = z.nativeEnum(FieldGetDocumentFieldTextAlign5);

/** @internal */
export const FieldGetDocumentFieldTextAlign5$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign5
> = FieldGetDocumentFieldTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTextAlign5$ {
  /** @deprecated use `FieldGetDocumentFieldTextAlign5$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTextAlign5$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTextAlign5$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTextAlign5$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaText$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaText,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeText$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign5$inboundSchema.optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaText$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaText$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaText
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeText$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign5$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaText$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaText$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldFieldMetaText$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaText$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaText$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaText$Outbound;
}

export function fieldGetDocumentFieldFieldMetaTextToJSON(
  fieldGetDocumentFieldFieldMetaText: FieldGetDocumentFieldFieldMetaText,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaText$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaText,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaText' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeDate$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeDate
> = z.nativeEnum(FieldGetDocumentFieldTypeDate);

/** @internal */
export const FieldGetDocumentFieldTypeDate$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeDate
> = FieldGetDocumentFieldTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeDate$ {
  /** @deprecated use `FieldGetDocumentFieldTypeDate$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeDate$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeDate$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTypeDate$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTextAlign4$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign4
> = z.nativeEnum(FieldGetDocumentFieldTextAlign4);

/** @internal */
export const FieldGetDocumentFieldTextAlign4$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign4
> = FieldGetDocumentFieldTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTextAlign4$ {
  /** @deprecated use `FieldGetDocumentFieldTextAlign4$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTextAlign4$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTextAlign4$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTextAlign4$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaDate$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaDate,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeDate$inboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign4$inboundSchema.optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaDate$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaDate$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaDate
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeDate$outboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign4$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaDate$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldFieldMetaDate$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaDate$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaDate$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaDate$Outbound;
}

export function fieldGetDocumentFieldFieldMetaDateToJSON(
  fieldGetDocumentFieldFieldMetaDate: FieldGetDocumentFieldFieldMetaDate,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaDate$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaDate,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaDate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaDate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeEmail$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeEmail
> = z.nativeEnum(FieldGetDocumentFieldTypeEmail);

/** @internal */
export const FieldGetDocumentFieldTypeEmail$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeEmail
> = FieldGetDocumentFieldTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeEmail$ {
  /** @deprecated use `FieldGetDocumentFieldTypeEmail$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeEmail$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeEmail$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTypeEmail$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTextAlign3$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign3
> = z.nativeEnum(FieldGetDocumentFieldTextAlign3);

/** @internal */
export const FieldGetDocumentFieldTextAlign3$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign3
> = FieldGetDocumentFieldTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTextAlign3$ {
  /** @deprecated use `FieldGetDocumentFieldTextAlign3$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTextAlign3$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTextAlign3$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTextAlign3$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaEmail$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaEmail,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeEmail$inboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign3$inboundSchema.optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaEmail$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaEmail$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaEmail
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeEmail$outboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign3$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaEmail$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaEmail$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaEmail$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaEmail$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaEmail$Outbound;
}

export function fieldGetDocumentFieldFieldMetaEmailToJSON(
  fieldGetDocumentFieldFieldMetaEmail: FieldGetDocumentFieldFieldMetaEmail,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaEmail$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaEmail,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeName$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeName
> = z.nativeEnum(FieldGetDocumentFieldTypeName);

/** @internal */
export const FieldGetDocumentFieldTypeName$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeName
> = FieldGetDocumentFieldTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeName$ {
  /** @deprecated use `FieldGetDocumentFieldTypeName$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeName$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeName$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTypeName$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTextAlign2$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign2
> = z.nativeEnum(FieldGetDocumentFieldTextAlign2);

/** @internal */
export const FieldGetDocumentFieldTextAlign2$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign2
> = FieldGetDocumentFieldTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTextAlign2$ {
  /** @deprecated use `FieldGetDocumentFieldTextAlign2$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTextAlign2$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTextAlign2$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTextAlign2$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaName$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaName,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeName$inboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign2$inboundSchema.optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaName$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaName$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaName
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeName$outboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign2$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaName$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaName$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldFieldMetaName$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaName$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaName$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaName$Outbound;
}

export function fieldGetDocumentFieldFieldMetaNameToJSON(
  fieldGetDocumentFieldFieldMetaName: FieldGetDocumentFieldFieldMetaName,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaName$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaName,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaName, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaName$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaName' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldTypeInitials$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeInitials
> = z.nativeEnum(FieldGetDocumentFieldTypeInitials);

/** @internal */
export const FieldGetDocumentFieldTypeInitials$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTypeInitials
> = FieldGetDocumentFieldTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTypeInitials$ {
  /** @deprecated use `FieldGetDocumentFieldTypeInitials$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTypeInitials$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldTypeInitials$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldTextAlign1$inboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign1
> = z.nativeEnum(FieldGetDocumentFieldTextAlign1);

/** @internal */
export const FieldGetDocumentFieldTextAlign1$outboundSchema: z.ZodNativeEnum<
  typeof FieldGetDocumentFieldTextAlign1
> = FieldGetDocumentFieldTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldTextAlign1$ {
  /** @deprecated use `FieldGetDocumentFieldTextAlign1$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldTextAlign1$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldTextAlign1$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldTextAlign1$outboundSchema;
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaInitials$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaInitials,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeInitials$inboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign1$inboundSchema.optional(),
});

/** @internal */
export type FieldGetDocumentFieldFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldGetDocumentFieldFieldMetaInitials$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaInitials$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaInitials
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldGetDocumentFieldTypeInitials$outboundSchema,
  fontSize: z.number().optional(),
  textAlign: FieldGetDocumentFieldTextAlign1$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaInitials$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaInitials$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaInitials$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaInitials$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaInitials$Outbound;
}

export function fieldGetDocumentFieldFieldMetaInitialsToJSON(
  fieldGetDocumentFieldFieldMetaInitials:
    FieldGetDocumentFieldFieldMetaInitials,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaInitials$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaInitials,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaInitials, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaInitials$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldFieldMetaUnion$inboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldGetDocumentFieldFieldMetaInitials$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaName$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaEmail$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaDate$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaText$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaNumber$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaRadio$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaCheckbox$inboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaDropdown$inboundSchema),
]);

/** @internal */
export type FieldGetDocumentFieldFieldMetaUnion$Outbound =
  | FieldGetDocumentFieldFieldMetaInitials$Outbound
  | FieldGetDocumentFieldFieldMetaName$Outbound
  | FieldGetDocumentFieldFieldMetaEmail$Outbound
  | FieldGetDocumentFieldFieldMetaDate$Outbound
  | FieldGetDocumentFieldFieldMetaText$Outbound
  | FieldGetDocumentFieldFieldMetaNumber$Outbound
  | FieldGetDocumentFieldFieldMetaRadio$Outbound
  | FieldGetDocumentFieldFieldMetaCheckbox$Outbound
  | FieldGetDocumentFieldFieldMetaDropdown$Outbound;

/** @internal */
export const FieldGetDocumentFieldFieldMetaUnion$outboundSchema: z.ZodType<
  FieldGetDocumentFieldFieldMetaUnion$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldFieldMetaUnion
> = z.union([
  z.lazy(() => FieldGetDocumentFieldFieldMetaInitials$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaName$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaEmail$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaDate$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaText$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaNumber$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaRadio$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaCheckbox$outboundSchema),
  z.lazy(() => FieldGetDocumentFieldFieldMetaDropdown$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldFieldMetaUnion$ {
  /** @deprecated use `FieldGetDocumentFieldFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    FieldGetDocumentFieldFieldMetaUnion$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldGetDocumentFieldFieldMetaUnion$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldFieldMetaUnion$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldFieldMetaUnion$Outbound;
}

export function fieldGetDocumentFieldFieldMetaUnionToJSON(
  fieldGetDocumentFieldFieldMetaUnion: FieldGetDocumentFieldFieldMetaUnion,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldFieldMetaUnion$outboundSchema.parse(
      fieldGetDocumentFieldFieldMetaUnion,
    ),
  );
}

export function fieldGetDocumentFieldFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldFieldMetaUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldGetDocumentFieldFieldMetaUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const FieldGetDocumentFieldResponse$inboundSchema: z.ZodType<
  FieldGetDocumentFieldResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: FieldGetDocumentFieldType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => FieldGetDocumentFieldFieldMetaInitials$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaName$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaEmail$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaDate$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaText$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaNumber$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaRadio$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaCheckbox$inboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaDropdown$inboundSchema),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/** @internal */
export type FieldGetDocumentFieldResponse$Outbound = {
  envelopeId: string;
  envelopeItemId: string;
  type: string;
  id: number;
  secondaryId: string;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldGetDocumentFieldFieldMetaInitials$Outbound
    | FieldGetDocumentFieldFieldMetaName$Outbound
    | FieldGetDocumentFieldFieldMetaEmail$Outbound
    | FieldGetDocumentFieldFieldMetaDate$Outbound
    | FieldGetDocumentFieldFieldMetaText$Outbound
    | FieldGetDocumentFieldFieldMetaNumber$Outbound
    | FieldGetDocumentFieldFieldMetaRadio$Outbound
    | FieldGetDocumentFieldFieldMetaCheckbox$Outbound
    | FieldGetDocumentFieldFieldMetaDropdown$Outbound
    | null;
  documentId?: number | null | undefined;
  templateId?: number | null | undefined;
};

/** @internal */
export const FieldGetDocumentFieldResponse$outboundSchema: z.ZodType<
  FieldGetDocumentFieldResponse$Outbound,
  z.ZodTypeDef,
  FieldGetDocumentFieldResponse
> = z.object({
  envelopeId: z.string(),
  envelopeItemId: z.string(),
  type: FieldGetDocumentFieldType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => FieldGetDocumentFieldFieldMetaInitials$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaName$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaEmail$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaDate$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaText$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaNumber$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaRadio$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaCheckbox$outboundSchema),
      z.lazy(() => FieldGetDocumentFieldFieldMetaDropdown$outboundSchema),
    ]),
  ),
  documentId: z.nullable(z.number()).optional(),
  templateId: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldGetDocumentFieldResponse$ {
  /** @deprecated use `FieldGetDocumentFieldResponse$inboundSchema` instead. */
  export const inboundSchema = FieldGetDocumentFieldResponse$inboundSchema;
  /** @deprecated use `FieldGetDocumentFieldResponse$outboundSchema` instead. */
  export const outboundSchema = FieldGetDocumentFieldResponse$outboundSchema;
  /** @deprecated use `FieldGetDocumentFieldResponse$Outbound` instead. */
  export type Outbound = FieldGetDocumentFieldResponse$Outbound;
}

export function fieldGetDocumentFieldResponseToJSON(
  fieldGetDocumentFieldResponse: FieldGetDocumentFieldResponse,
): string {
  return JSON.stringify(
    FieldGetDocumentFieldResponse$outboundSchema.parse(
      fieldGetDocumentFieldResponse,
    ),
  );
}

export function fieldGetDocumentFieldResponseFromJSON(
  jsonString: string,
): SafeParseResult<FieldGetDocumentFieldResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldGetDocumentFieldResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldGetDocumentFieldResponse' from JSON`,
  );
}
