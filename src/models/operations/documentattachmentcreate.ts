/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentAttachmentCreateData = {
  label: string;
  data: string;
};

export type DocumentAttachmentCreateRequest = {
  documentId: number;
  data: DocumentAttachmentCreateData;
};

/** @internal */
export const DocumentAttachmentCreateData$inboundSchema: z.ZodType<
  DocumentAttachmentCreateData,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string(),
  data: z.string(),
});

/** @internal */
export type DocumentAttachmentCreateData$Outbound = {
  label: string;
  data: string;
};

/** @internal */
export const DocumentAttachmentCreateData$outboundSchema: z.ZodType<
  DocumentAttachmentCreateData$Outbound,
  z.ZodTypeDef,
  DocumentAttachmentCreateData
> = z.object({
  label: z.string(),
  data: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentAttachmentCreateData$ {
  /** @deprecated use `DocumentAttachmentCreateData$inboundSchema` instead. */
  export const inboundSchema = DocumentAttachmentCreateData$inboundSchema;
  /** @deprecated use `DocumentAttachmentCreateData$outboundSchema` instead. */
  export const outboundSchema = DocumentAttachmentCreateData$outboundSchema;
  /** @deprecated use `DocumentAttachmentCreateData$Outbound` instead. */
  export type Outbound = DocumentAttachmentCreateData$Outbound;
}

export function documentAttachmentCreateDataToJSON(
  documentAttachmentCreateData: DocumentAttachmentCreateData,
): string {
  return JSON.stringify(
    DocumentAttachmentCreateData$outboundSchema.parse(
      documentAttachmentCreateData,
    ),
  );
}

export function documentAttachmentCreateDataFromJSON(
  jsonString: string,
): SafeParseResult<DocumentAttachmentCreateData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentAttachmentCreateData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentAttachmentCreateData' from JSON`,
  );
}

/** @internal */
export const DocumentAttachmentCreateRequest$inboundSchema: z.ZodType<
  DocumentAttachmentCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  data: z.lazy(() => DocumentAttachmentCreateData$inboundSchema),
});

/** @internal */
export type DocumentAttachmentCreateRequest$Outbound = {
  documentId: number;
  data: DocumentAttachmentCreateData$Outbound;
};

/** @internal */
export const DocumentAttachmentCreateRequest$outboundSchema: z.ZodType<
  DocumentAttachmentCreateRequest$Outbound,
  z.ZodTypeDef,
  DocumentAttachmentCreateRequest
> = z.object({
  documentId: z.number(),
  data: z.lazy(() => DocumentAttachmentCreateData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentAttachmentCreateRequest$ {
  /** @deprecated use `DocumentAttachmentCreateRequest$inboundSchema` instead. */
  export const inboundSchema = DocumentAttachmentCreateRequest$inboundSchema;
  /** @deprecated use `DocumentAttachmentCreateRequest$outboundSchema` instead. */
  export const outboundSchema = DocumentAttachmentCreateRequest$outboundSchema;
  /** @deprecated use `DocumentAttachmentCreateRequest$Outbound` instead. */
  export type Outbound = DocumentAttachmentCreateRequest$Outbound;
}

export function documentAttachmentCreateRequestToJSON(
  documentAttachmentCreateRequest: DocumentAttachmentCreateRequest,
): string {
  return JSON.stringify(
    DocumentAttachmentCreateRequest$outboundSchema.parse(
      documentAttachmentCreateRequest,
    ),
  );
}

export function documentAttachmentCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<DocumentAttachmentCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentAttachmentCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentAttachmentCreateRequest' from JSON`,
  );
}
