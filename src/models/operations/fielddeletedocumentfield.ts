/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FieldDeleteDocumentFieldRequestBody = {
  fieldId: number;
};

/**
 * Successful response
 */
export type FieldDeleteDocumentFieldResponseBody = {
  success: boolean;
};

/** @internal */
export const FieldDeleteDocumentFieldRequestBody$inboundSchema: z.ZodType<
  FieldDeleteDocumentFieldRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  fieldId: z.number(),
});

/** @internal */
export type FieldDeleteDocumentFieldRequestBody$Outbound = {
  fieldId: number;
};

/** @internal */
export const FieldDeleteDocumentFieldRequestBody$outboundSchema: z.ZodType<
  FieldDeleteDocumentFieldRequestBody$Outbound,
  z.ZodTypeDef,
  FieldDeleteDocumentFieldRequestBody
> = z.object({
  fieldId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteDocumentFieldRequestBody$ {
  /** @deprecated use `FieldDeleteDocumentFieldRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldDeleteDocumentFieldRequestBody$inboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldDeleteDocumentFieldRequestBody$outboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldRequestBody$Outbound` instead. */
  export type Outbound = FieldDeleteDocumentFieldRequestBody$Outbound;
}

export function fieldDeleteDocumentFieldRequestBodyToJSON(
  fieldDeleteDocumentFieldRequestBody: FieldDeleteDocumentFieldRequestBody,
): string {
  return JSON.stringify(
    FieldDeleteDocumentFieldRequestBody$outboundSchema.parse(
      fieldDeleteDocumentFieldRequestBody,
    ),
  );
}

export function fieldDeleteDocumentFieldRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldDeleteDocumentFieldRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldDeleteDocumentFieldRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldDeleteDocumentFieldRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldDeleteDocumentFieldResponseBody$inboundSchema: z.ZodType<
  FieldDeleteDocumentFieldResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
});

/** @internal */
export type FieldDeleteDocumentFieldResponseBody$Outbound = {
  success: boolean;
};

/** @internal */
export const FieldDeleteDocumentFieldResponseBody$outboundSchema: z.ZodType<
  FieldDeleteDocumentFieldResponseBody$Outbound,
  z.ZodTypeDef,
  FieldDeleteDocumentFieldResponseBody
> = z.object({
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteDocumentFieldResponseBody$ {
  /** @deprecated use `FieldDeleteDocumentFieldResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldDeleteDocumentFieldResponseBody$inboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldDeleteDocumentFieldResponseBody$outboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldResponseBody$Outbound` instead. */
  export type Outbound = FieldDeleteDocumentFieldResponseBody$Outbound;
}

export function fieldDeleteDocumentFieldResponseBodyToJSON(
  fieldDeleteDocumentFieldResponseBody: FieldDeleteDocumentFieldResponseBody,
): string {
  return JSON.stringify(
    FieldDeleteDocumentFieldResponseBody$outboundSchema.parse(
      fieldDeleteDocumentFieldResponseBody,
    ),
  );
}

export function fieldDeleteDocumentFieldResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldDeleteDocumentFieldResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldDeleteDocumentFieldResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldDeleteDocumentFieldResponseBody' from JSON`,
  );
}
