/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientGetDocumentRecipientRequest = {
  recipientId: number;
};

export const RecipientGetDocumentRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientGetDocumentRecipientRole = ClosedEnum<
  typeof RecipientGetDocumentRecipientRole
>;

export const RecipientGetDocumentRecipientReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientGetDocumentRecipientReadStatus = ClosedEnum<
  typeof RecipientGetDocumentRecipientReadStatus
>;

export const RecipientGetDocumentRecipientSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientGetDocumentRecipientSigningStatus = ClosedEnum<
  typeof RecipientGetDocumentRecipientSigningStatus
>;

export const RecipientGetDocumentRecipientSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientGetDocumentRecipientSendStatus = ClosedEnum<
  typeof RecipientGetDocumentRecipientSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientGetDocumentRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientGetDocumentRecipientAccessAuth = ClosedEnum<
  typeof RecipientGetDocumentRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientGetDocumentRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientGetDocumentRecipientActionAuth = ClosedEnum<
  typeof RecipientGetDocumentRecipientActionAuth
>;

export type RecipientGetDocumentRecipientAuthOptions = {
  accessAuth: Array<RecipientGetDocumentRecipientAccessAuth>;
  actionAuth: Array<RecipientGetDocumentRecipientActionAuth>;
};

export const RecipientGetDocumentRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientGetDocumentRecipientType = ClosedEnum<
  typeof RecipientGetDocumentRecipientType
>;

export const RecipientGetDocumentRecipientTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type RecipientGetDocumentRecipientTypeDropdown = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeDropdown
>;

export type RecipientGetDocumentRecipientValue3 = {
  value: string;
};

export type RecipientGetDocumentRecipientFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeDropdown;
  values?: Array<RecipientGetDocumentRecipientValue3> | undefined;
  defaultValue?: string | undefined;
};

export const RecipientGetDocumentRecipientTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type RecipientGetDocumentRecipientTypeCheckbox = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeCheckbox
>;

export type RecipientGetDocumentRecipientValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetDocumentRecipientFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeCheckbox;
  values?: Array<RecipientGetDocumentRecipientValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientGetDocumentRecipientTypeRadio = {
  Radio: "radio",
} as const;
export type RecipientGetDocumentRecipientTypeRadio = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeRadio
>;

export type RecipientGetDocumentRecipientValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetDocumentRecipientFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeRadio;
  values?: Array<RecipientGetDocumentRecipientValue1> | undefined;
};

export const RecipientGetDocumentRecipientTypeNumber = {
  Number: "number",
} as const;
export type RecipientGetDocumentRecipientTypeNumber = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeNumber
>;

export const RecipientGetDocumentRecipientTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetDocumentRecipientTextAlign6 = ClosedEnum<
  typeof RecipientGetDocumentRecipientTextAlign6
>;

export type RecipientGetDocumentRecipientFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientGetDocumentRecipientTextAlign6 | undefined;
};

export const RecipientGetDocumentRecipientTypeText = {
  Text: "text",
} as const;
export type RecipientGetDocumentRecipientTypeText = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeText
>;

export const RecipientGetDocumentRecipientTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetDocumentRecipientTextAlign5 = ClosedEnum<
  typeof RecipientGetDocumentRecipientTextAlign5
>;

export type RecipientGetDocumentRecipientFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientGetDocumentRecipientTextAlign5 | undefined;
};

export const RecipientGetDocumentRecipientTypeDate = {
  Date: "date",
} as const;
export type RecipientGetDocumentRecipientTypeDate = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeDate
>;

export const RecipientGetDocumentRecipientTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetDocumentRecipientTextAlign4 = ClosedEnum<
  typeof RecipientGetDocumentRecipientTextAlign4
>;

export type RecipientGetDocumentRecipientFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeDate;
  fontSize?: number | undefined;
  textAlign?: RecipientGetDocumentRecipientTextAlign4 | undefined;
};

export const RecipientGetDocumentRecipientTypeEmail = {
  Email: "email",
} as const;
export type RecipientGetDocumentRecipientTypeEmail = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeEmail
>;

export const RecipientGetDocumentRecipientTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetDocumentRecipientTextAlign3 = ClosedEnum<
  typeof RecipientGetDocumentRecipientTextAlign3
>;

export type RecipientGetDocumentRecipientFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeEmail;
  fontSize?: number | undefined;
  textAlign?: RecipientGetDocumentRecipientTextAlign3 | undefined;
};

export const RecipientGetDocumentRecipientTypeName = {
  Name: "name",
} as const;
export type RecipientGetDocumentRecipientTypeName = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeName
>;

export const RecipientGetDocumentRecipientTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetDocumentRecipientTextAlign2 = ClosedEnum<
  typeof RecipientGetDocumentRecipientTextAlign2
>;

export type RecipientGetDocumentRecipientFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeName;
  fontSize?: number | undefined;
  textAlign?: RecipientGetDocumentRecipientTextAlign2 | undefined;
};

export const RecipientGetDocumentRecipientTypeInitials = {
  Initials: "initials",
} as const;
export type RecipientGetDocumentRecipientTypeInitials = ClosedEnum<
  typeof RecipientGetDocumentRecipientTypeInitials
>;

export const RecipientGetDocumentRecipientTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientGetDocumentRecipientTextAlign1 = ClosedEnum<
  typeof RecipientGetDocumentRecipientTextAlign1
>;

export type RecipientGetDocumentRecipientFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientTypeInitials;
  fontSize?: number | undefined;
  textAlign?: RecipientGetDocumentRecipientTextAlign1 | undefined;
};

export type RecipientGetDocumentRecipientFieldMetaUnion =
  | RecipientGetDocumentRecipientFieldMetaRadio
  | RecipientGetDocumentRecipientFieldMetaInitials
  | RecipientGetDocumentRecipientFieldMetaName
  | RecipientGetDocumentRecipientFieldMetaEmail
  | RecipientGetDocumentRecipientFieldMetaDate
  | RecipientGetDocumentRecipientFieldMetaDropdown
  | RecipientGetDocumentRecipientFieldMetaCheckbox
  | RecipientGetDocumentRecipientFieldMetaText
  | RecipientGetDocumentRecipientFieldMetaNumber;

export type RecipientGetDocumentRecipientField = {
  type: RecipientGetDocumentRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetDocumentRecipientFieldMetaRadio
    | RecipientGetDocumentRecipientFieldMetaInitials
    | RecipientGetDocumentRecipientFieldMetaName
    | RecipientGetDocumentRecipientFieldMetaEmail
    | RecipientGetDocumentRecipientFieldMetaDate
    | RecipientGetDocumentRecipientFieldMetaDropdown
    | RecipientGetDocumentRecipientFieldMetaCheckbox
    | RecipientGetDocumentRecipientFieldMetaText
    | RecipientGetDocumentRecipientFieldMetaNumber
    | null;
};

/**
 * Successful response
 */
export type RecipientGetDocumentRecipientResponse = {
  role: RecipientGetDocumentRecipientRole;
  readStatus: RecipientGetDocumentRecipientReadStatus;
  signingStatus: RecipientGetDocumentRecipientSigningStatus;
  sendStatus: RecipientGetDocumentRecipientSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetDocumentRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetDocumentRecipientField>;
};

/** @internal */
export const RecipientGetDocumentRecipientRequest$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipientId: z.number(),
});

/** @internal */
export type RecipientGetDocumentRecipientRequest$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientGetDocumentRecipientRequest$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientRequest
> = z.object({
  recipientId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientRequest$ {
  /** @deprecated use `RecipientGetDocumentRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientRequest$Outbound;
}

export function recipientGetDocumentRecipientRequestToJSON(
  recipientGetDocumentRecipientRequest: RecipientGetDocumentRecipientRequest,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientRequest$outboundSchema.parse(
      recipientGetDocumentRecipientRequest,
    ),
  );
}

export function recipientGetDocumentRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientRole$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientRole
> = z.nativeEnum(RecipientGetDocumentRecipientRole);

/** @internal */
export const RecipientGetDocumentRecipientRole$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientRole
> = RecipientGetDocumentRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientRole$ {
  /** @deprecated use `RecipientGetDocumentRecipientRole$inboundSchema` instead. */
  export const inboundSchema = RecipientGetDocumentRecipientRole$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientRole$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientReadStatus> = z
    .nativeEnum(RecipientGetDocumentRecipientReadStatus);

/** @internal */
export const RecipientGetDocumentRecipientReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientReadStatus> =
    RecipientGetDocumentRecipientReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientReadStatus$ {
  /** @deprecated use `RecipientGetDocumentRecipientReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientReadStatus$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientReadStatus$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientSigningStatus> = z
    .nativeEnum(RecipientGetDocumentRecipientSigningStatus);

/** @internal */
export const RecipientGetDocumentRecipientSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientSigningStatus> =
    RecipientGetDocumentRecipientSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientSigningStatus$ {
  /** @deprecated use `RecipientGetDocumentRecipientSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientSigningStatus$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientSendStatus> = z
    .nativeEnum(RecipientGetDocumentRecipientSendStatus);

/** @internal */
export const RecipientGetDocumentRecipientSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientSendStatus> =
    RecipientGetDocumentRecipientSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientSendStatus$ {
  /** @deprecated use `RecipientGetDocumentRecipientSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientSendStatus$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientSendStatus$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientAccessAuth> = z
    .nativeEnum(RecipientGetDocumentRecipientAccessAuth);

/** @internal */
export const RecipientGetDocumentRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientAccessAuth> =
    RecipientGetDocumentRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientAccessAuth$ {
  /** @deprecated use `RecipientGetDocumentRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientActionAuth> = z
    .nativeEnum(RecipientGetDocumentRecipientActionAuth);

/** @internal */
export const RecipientGetDocumentRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientActionAuth> =
    RecipientGetDocumentRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientActionAuth$ {
  /** @deprecated use `RecipientGetDocumentRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientAuthOptions$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientAuthOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessAuth: z.array(RecipientGetDocumentRecipientAccessAuth$inboundSchema),
  actionAuth: z.array(RecipientGetDocumentRecipientActionAuth$inboundSchema),
});

/** @internal */
export type RecipientGetDocumentRecipientAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const RecipientGetDocumentRecipientAuthOptions$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientAuthOptions$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientAuthOptions
> = z.object({
  accessAuth: z.array(RecipientGetDocumentRecipientAccessAuth$outboundSchema),
  actionAuth: z.array(RecipientGetDocumentRecipientActionAuth$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientAuthOptions$ {
  /** @deprecated use `RecipientGetDocumentRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientAuthOptions$Outbound;
}

export function recipientGetDocumentRecipientAuthOptionsToJSON(
  recipientGetDocumentRecipientAuthOptions:
    RecipientGetDocumentRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientAuthOptions$outboundSchema.parse(
      recipientGetDocumentRecipientAuthOptions,
    ),
  );
}

export function recipientGetDocumentRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientType$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientType
> = z.nativeEnum(RecipientGetDocumentRecipientType);

/** @internal */
export const RecipientGetDocumentRecipientType$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientType
> = RecipientGetDocumentRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientType$ {
  /** @deprecated use `RecipientGetDocumentRecipientType$inboundSchema` instead. */
  export const inboundSchema = RecipientGetDocumentRecipientType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeDropdown> = z
    .nativeEnum(RecipientGetDocumentRecipientTypeDropdown);

/** @internal */
export const RecipientGetDocumentRecipientTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeDropdown> =
    RecipientGetDocumentRecipientTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeDropdown$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeDropdown$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeDropdown$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientValue3$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type RecipientGetDocumentRecipientValue3$Outbound = {
  value: string;
};

/** @internal */
export const RecipientGetDocumentRecipientValue3$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientValue3$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientValue3$ {
  /** @deprecated use `RecipientGetDocumentRecipientValue3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientValue3$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientValue3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientValue3$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientValue3$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientValue3$Outbound;
}

export function recipientGetDocumentRecipientValue3ToJSON(
  recipientGetDocumentRecipientValue3: RecipientGetDocumentRecipientValue3,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientValue3$outboundSchema.parse(
      recipientGetDocumentRecipientValue3,
    ),
  );
}

export function recipientGetDocumentRecipientValue3FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientValue3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientValue3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientValue3' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDropdown$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetDocumentRecipientValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetDocumentRecipientValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDropdown$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetDocumentRecipientValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDropdown$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDropdown$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDropdown$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    RecipientGetDocumentRecipientFieldMetaDropdown$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaDropdownToJSON(
  recipientGetDocumentRecipientFieldMetaDropdown:
    RecipientGetDocumentRecipientFieldMetaDropdown,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaDropdown$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaDropdown,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeCheckbox> = z
    .nativeEnum(RecipientGetDocumentRecipientTypeCheckbox);

/** @internal */
export const RecipientGetDocumentRecipientTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeCheckbox> =
    RecipientGetDocumentRecipientTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeCheckbox$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeCheckbox$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeCheckbox$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientValue2$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientGetDocumentRecipientValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetDocumentRecipientValue2$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientValue2$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientValue2$ {
  /** @deprecated use `RecipientGetDocumentRecipientValue2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientValue2$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientValue2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientValue2$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientValue2$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientValue2$Outbound;
}

export function recipientGetDocumentRecipientValue2ToJSON(
  recipientGetDocumentRecipientValue2: RecipientGetDocumentRecipientValue2,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientValue2$outboundSchema.parse(
      recipientGetDocumentRecipientValue2,
    ),
  );
}

export function recipientGetDocumentRecipientValue2FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientValue2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientValue2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientValue2' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetDocumentRecipientValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetDocumentRecipientValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetDocumentRecipientValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaCheckbox$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    RecipientGetDocumentRecipientFieldMetaCheckbox$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaCheckboxToJSON(
  recipientGetDocumentRecipientFieldMetaCheckbox:
    RecipientGetDocumentRecipientFieldMetaCheckbox,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaCheckbox$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaCheckbox,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeRadio> = z.nativeEnum(
    RecipientGetDocumentRecipientTypeRadio,
  );

/** @internal */
export const RecipientGetDocumentRecipientTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeRadio> =
    RecipientGetDocumentRecipientTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeRadio$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeRadio$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeRadio$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientValue1$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientGetDocumentRecipientValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetDocumentRecipientValue1$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientValue1$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientValue1$ {
  /** @deprecated use `RecipientGetDocumentRecipientValue1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientValue1$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientValue1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientValue1$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientValue1$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientValue1$Outbound;
}

export function recipientGetDocumentRecipientValue1ToJSON(
  recipientGetDocumentRecipientValue1: RecipientGetDocumentRecipientValue1,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientValue1$outboundSchema.parse(
      recipientGetDocumentRecipientValue1,
    ),
  );
}

export function recipientGetDocumentRecipientValue1FromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientValue1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientValue1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientValue1' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaRadio$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetDocumentRecipientValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientGetDocumentRecipientValue1$Outbound> | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaRadio$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientGetDocumentRecipientValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaRadio$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaRadio$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaRadio$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaRadio$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaRadio$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaRadioToJSON(
  recipientGetDocumentRecipientFieldMetaRadio:
    RecipientGetDocumentRecipientFieldMetaRadio,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaRadio$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaRadio,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeNumber> = z
    .nativeEnum(RecipientGetDocumentRecipientTypeNumber);

/** @internal */
export const RecipientGetDocumentRecipientTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeNumber> =
    RecipientGetDocumentRecipientTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeNumber$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeNumber$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeNumber$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign6> = z
    .nativeEnum(RecipientGetDocumentRecipientTextAlign6);

/** @internal */
export const RecipientGetDocumentRecipientTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign6> =
    RecipientGetDocumentRecipientTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTextAlign6$ {
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTextAlign6$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTextAlign6$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaNumber$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign6$inboundSchema.optional(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaNumber$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaNumber$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaNumber$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaNumber$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaNumber$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaNumber$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaNumberToJSON(
  recipientGetDocumentRecipientFieldMetaNumber:
    RecipientGetDocumentRecipientFieldMetaNumber,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaNumber$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaNumber,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeText$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeText> = z.nativeEnum(
    RecipientGetDocumentRecipientTypeText,
  );

/** @internal */
export const RecipientGetDocumentRecipientTypeText$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeText> =
    RecipientGetDocumentRecipientTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeText$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeText$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeText$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign5> = z
    .nativeEnum(RecipientGetDocumentRecipientTextAlign5);

/** @internal */
export const RecipientGetDocumentRecipientTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign5> =
    RecipientGetDocumentRecipientTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTextAlign5$ {
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTextAlign5$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTextAlign5$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaText$inboundSchema:
  z.ZodType<RecipientGetDocumentRecipientFieldMetaText, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientGetDocumentRecipientTypeText$inboundSchema,
      text: z.string().optional(),
      characterLimit: z.number().optional(),
      fontSize: z.number().optional(),
      textAlign: RecipientGetDocumentRecipientTextAlign5$inboundSchema
        .optional(),
    });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaText$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaText$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaText$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaText$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaText$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaText$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaText$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaTextToJSON(
  recipientGetDocumentRecipientFieldMetaText:
    RecipientGetDocumentRecipientFieldMetaText,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaText$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaText,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaText' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeDate> = z.nativeEnum(
    RecipientGetDocumentRecipientTypeDate,
  );

/** @internal */
export const RecipientGetDocumentRecipientTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeDate> =
    RecipientGetDocumentRecipientTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeDate$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeDate$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeDate$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign4> = z
    .nativeEnum(RecipientGetDocumentRecipientTextAlign4);

/** @internal */
export const RecipientGetDocumentRecipientTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign4> =
    RecipientGetDocumentRecipientTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTextAlign4$ {
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTextAlign4$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTextAlign4$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDate$inboundSchema:
  z.ZodType<RecipientGetDocumentRecipientFieldMetaDate, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientGetDocumentRecipientTypeDate$inboundSchema,
      fontSize: z.number().optional(),
      textAlign: RecipientGetDocumentRecipientTextAlign4$inboundSchema
        .optional(),
    });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDate$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDate$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDate$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDate$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDate$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDate$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaDate$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaDateToJSON(
  recipientGetDocumentRecipientFieldMetaDate:
    RecipientGetDocumentRecipientFieldMetaDate,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaDate$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaDate,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeEmail> = z.nativeEnum(
    RecipientGetDocumentRecipientTypeEmail,
  );

/** @internal */
export const RecipientGetDocumentRecipientTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeEmail> =
    RecipientGetDocumentRecipientTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeEmail$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeEmail$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeEmail$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign3> = z
    .nativeEnum(RecipientGetDocumentRecipientTextAlign3);

/** @internal */
export const RecipientGetDocumentRecipientTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign3> =
    RecipientGetDocumentRecipientTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTextAlign3$ {
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTextAlign3$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTextAlign3$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaEmail$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign3$inboundSchema.optional(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaEmail$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaEmail$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaEmail$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaEmail$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaEmail$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaEmail$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaEmailToJSON(
  recipientGetDocumentRecipientFieldMetaEmail:
    RecipientGetDocumentRecipientFieldMetaEmail,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaEmail$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaEmail,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeName$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeName> = z.nativeEnum(
    RecipientGetDocumentRecipientTypeName,
  );

/** @internal */
export const RecipientGetDocumentRecipientTypeName$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeName> =
    RecipientGetDocumentRecipientTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeName$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeName$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeName$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign2> = z
    .nativeEnum(RecipientGetDocumentRecipientTextAlign2);

/** @internal */
export const RecipientGetDocumentRecipientTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign2> =
    RecipientGetDocumentRecipientTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTextAlign2$ {
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTextAlign2$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTextAlign2$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaName$inboundSchema:
  z.ZodType<RecipientGetDocumentRecipientFieldMetaName, z.ZodTypeDef, unknown> =
    z.object({
      label: z.string().optional(),
      placeholder: z.string().optional(),
      required: z.boolean().optional(),
      readOnly: z.boolean().optional(),
      type: RecipientGetDocumentRecipientTypeName$inboundSchema,
      fontSize: z.number().optional(),
      textAlign: RecipientGetDocumentRecipientTextAlign2$inboundSchema
        .optional(),
    });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaName$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaName$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaName$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaName$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaName$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaName$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaName$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaNameToJSON(
  recipientGetDocumentRecipientFieldMetaName:
    RecipientGetDocumentRecipientFieldMetaName,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaName$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaName,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaName' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeInitials> = z
    .nativeEnum(RecipientGetDocumentRecipientTypeInitials);

/** @internal */
export const RecipientGetDocumentRecipientTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTypeInitials> =
    RecipientGetDocumentRecipientTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTypeInitials$ {
  /** @deprecated use `RecipientGetDocumentRecipientTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTypeInitials$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTypeInitials$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign1> = z
    .nativeEnum(RecipientGetDocumentRecipientTextAlign1);

/** @internal */
export const RecipientGetDocumentRecipientTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientTextAlign1> =
    RecipientGetDocumentRecipientTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientTextAlign1$ {
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientTextAlign1$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientTextAlign1$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaInitials$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign1$inboundSchema.optional(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaInitials$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientGetDocumentRecipientTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientGetDocumentRecipientTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaInitials$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaInitials$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaInitials$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    RecipientGetDocumentRecipientFieldMetaInitials$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaInitialsToJSON(
  recipientGetDocumentRecipientFieldMetaInitials:
    RecipientGetDocumentRecipientFieldMetaInitials,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaInitials$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaInitials,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaUnion$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaRadio$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaInitials$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaName$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaEmail$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaDate$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaDropdown$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaCheckbox$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaText$inboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaNumber$inboundSchema),
  ]);

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaUnion$Outbound =
  | RecipientGetDocumentRecipientFieldMetaRadio$Outbound
  | RecipientGetDocumentRecipientFieldMetaInitials$Outbound
  | RecipientGetDocumentRecipientFieldMetaName$Outbound
  | RecipientGetDocumentRecipientFieldMetaEmail$Outbound
  | RecipientGetDocumentRecipientFieldMetaDate$Outbound
  | RecipientGetDocumentRecipientFieldMetaDropdown$Outbound
  | RecipientGetDocumentRecipientFieldMetaCheckbox$Outbound
  | RecipientGetDocumentRecipientFieldMetaText$Outbound
  | RecipientGetDocumentRecipientFieldMetaNumber$Outbound;

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaUnion$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaUnion
  > = z.union([
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaRadio$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaInitials$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaName$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaEmail$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaDate$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaDropdown$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaCheckbox$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaText$outboundSchema),
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaNumber$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaUnion$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaUnion$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaUnion$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaUnion$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaUnion$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaUnionToJSON(
  recipientGetDocumentRecipientFieldMetaUnion:
    RecipientGetDocumentRecipientFieldMetaUnion,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaUnion$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaUnion,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientField$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientField,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientGetDocumentRecipientType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaRadio$inboundSchema),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaInitials$inboundSchema
      ),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaName$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaEmail$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaDate$inboundSchema),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaDropdown$inboundSchema
      ),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaText$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaNumber$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientGetDocumentRecipientField$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetDocumentRecipientFieldMetaRadio$Outbound
    | RecipientGetDocumentRecipientFieldMetaInitials$Outbound
    | RecipientGetDocumentRecipientFieldMetaName$Outbound
    | RecipientGetDocumentRecipientFieldMetaEmail$Outbound
    | RecipientGetDocumentRecipientFieldMetaDate$Outbound
    | RecipientGetDocumentRecipientFieldMetaDropdown$Outbound
    | RecipientGetDocumentRecipientFieldMetaCheckbox$Outbound
    | RecipientGetDocumentRecipientFieldMetaText$Outbound
    | RecipientGetDocumentRecipientFieldMetaNumber$Outbound
    | null;
};

/** @internal */
export const RecipientGetDocumentRecipientField$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientField$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientField
> = z.object({
  type: RecipientGetDocumentRecipientType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaRadio$outboundSchema),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaName$outboundSchema
      ),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaEmail$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaDate$outboundSchema),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaDropdown$outboundSchema
      ),
      z.lazy(() =>
        RecipientGetDocumentRecipientFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaText$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMetaNumber$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientField$ {
  /** @deprecated use `RecipientGetDocumentRecipientField$inboundSchema` instead. */
  export const inboundSchema = RecipientGetDocumentRecipientField$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientField$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientField$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientField$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientField$Outbound;
}

export function recipientGetDocumentRecipientFieldToJSON(
  recipientGetDocumentRecipientField: RecipientGetDocumentRecipientField,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientField$outboundSchema.parse(
      recipientGetDocumentRecipientField,
    ),
  );
}

export function recipientGetDocumentRecipientFieldFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientField' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientResponse$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: RecipientGetDocumentRecipientRole$inboundSchema,
  readStatus: RecipientGetDocumentRecipientReadStatus$inboundSchema,
  signingStatus: RecipientGetDocumentRecipientSigningStatus$inboundSchema,
  sendStatus: RecipientGetDocumentRecipientSendStatus$inboundSchema,
  id: z.number(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetDocumentRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientGetDocumentRecipientField$inboundSchema),
  ),
});

/** @internal */
export type RecipientGetDocumentRecipientResponse$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetDocumentRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetDocumentRecipientField$Outbound>;
};

/** @internal */
export const RecipientGetDocumentRecipientResponse$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientResponse$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientResponse
> = z.object({
  role: RecipientGetDocumentRecipientRole$outboundSchema,
  readStatus: RecipientGetDocumentRecipientReadStatus$outboundSchema,
  signingStatus: RecipientGetDocumentRecipientSigningStatus$outboundSchema,
  sendStatus: RecipientGetDocumentRecipientSendStatus$outboundSchema,
  id: z.number(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetDocumentRecipientAuthOptions$outboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientGetDocumentRecipientField$outboundSchema),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientResponse$ {
  /** @deprecated use `RecipientGetDocumentRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientResponse$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientResponse$Outbound;
}

export function recipientGetDocumentRecipientResponseToJSON(
  recipientGetDocumentRecipientResponse: RecipientGetDocumentRecipientResponse,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientResponse$outboundSchema.parse(
      recipientGetDocumentRecipientResponse,
    ),
  );
}

export function recipientGetDocumentRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientResponse' from JSON`,
  );
}
