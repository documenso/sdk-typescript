/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RecipientGetDocumentRecipientRequest = {
  recipientId: number;
};

export const RecipientGetDocumentRecipientRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientGetDocumentRecipientRole = ClosedEnum<
  typeof RecipientGetDocumentRecipientRole
>;

export const ReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type ReadStatus = ClosedEnum<typeof ReadStatus>;

export const SigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type SigningStatus = ClosedEnum<typeof SigningStatus>;

export const SendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type SendStatus = ClosedEnum<typeof SendStatus>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientGetDocumentRecipientAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientGetDocumentRecipientAccessAuth = ClosedEnum<
  typeof RecipientGetDocumentRecipientAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientGetDocumentRecipientActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientGetDocumentRecipientActionAuth = ClosedEnum<
  typeof RecipientGetDocumentRecipientActionAuth
>;

export type RecipientGetDocumentRecipientAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth: RecipientGetDocumentRecipientAccessAuth | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth: RecipientGetDocumentRecipientActionAuth | null;
};

export const RecipientGetDocumentRecipientType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientGetDocumentRecipientType = ClosedEnum<
  typeof RecipientGetDocumentRecipientType
>;

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues =
  {
    value: string;
  };

export type RecipientGetDocumentRecipientFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type;
  values?:
    | Array<
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues
    >
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  >;

export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetDocumentRecipientFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type;
  values?:
    | Array<RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Radio: "radio",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type RecipientGetDocumentRecipientFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientGetDocumentRecipientFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType;
  values?: Array<RecipientGetDocumentRecipientFieldMetaValues> | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientGetDocumentRecipientFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  >;

export type RecipientGetDocumentRecipientFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type =
  {
    Date: "date",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type
  >;

export type RecipientGetDocumentRecipientFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType =
  {
    Email: "email",
  } as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType
  >;

export type RecipientGetDocumentRecipientFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType = {
  Name: "name",
} as const;
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType =
  ClosedEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType
  >;

export type RecipientGetDocumentRecipientFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientGetDocumentRecipientFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientGetDocumentRecipientFieldMetaType = ClosedEnum<
  typeof RecipientGetDocumentRecipientFieldMetaType
>;

export type RecipientGetDocumentRecipientFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientGetDocumentRecipientFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientGetDocumentRecipientFieldMeta =
  | RecipientGetDocumentRecipientFieldMeta1
  | RecipientGetDocumentRecipientFieldMeta2
  | RecipientGetDocumentRecipientFieldMeta3
  | RecipientGetDocumentRecipientFieldMeta4
  | RecipientGetDocumentRecipientFieldMeta7
  | RecipientGetDocumentRecipientFieldMeta9
  | RecipientGetDocumentRecipientFieldMeta5
  | RecipientGetDocumentRecipientFieldMeta8
  | RecipientGetDocumentRecipientFieldMeta6;

export type RecipientGetDocumentRecipientFields = {
  type: RecipientGetDocumentRecipientType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetDocumentRecipientFieldMeta1
    | RecipientGetDocumentRecipientFieldMeta2
    | RecipientGetDocumentRecipientFieldMeta3
    | RecipientGetDocumentRecipientFieldMeta4
    | RecipientGetDocumentRecipientFieldMeta7
    | RecipientGetDocumentRecipientFieldMeta9
    | RecipientGetDocumentRecipientFieldMeta5
    | RecipientGetDocumentRecipientFieldMeta8
    | RecipientGetDocumentRecipientFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type RecipientGetDocumentRecipientResponseBody = {
  role: RecipientGetDocumentRecipientRole;
  readStatus: ReadStatus;
  signingStatus: SigningStatus;
  sendStatus: SendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetDocumentRecipientAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetDocumentRecipientFields>;
};

/** @internal */
export const RecipientGetDocumentRecipientRequest$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipientId: z.number(),
});

/** @internal */
export type RecipientGetDocumentRecipientRequest$Outbound = {
  recipientId: number;
};

/** @internal */
export const RecipientGetDocumentRecipientRequest$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientRequest$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientRequest
> = z.object({
  recipientId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientRequest$ {
  /** @deprecated use `RecipientGetDocumentRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientRequest$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientRequest$Outbound;
}

export function recipientGetDocumentRecipientRequestToJSON(
  recipientGetDocumentRecipientRequest: RecipientGetDocumentRecipientRequest,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientRequest$outboundSchema.parse(
      recipientGetDocumentRecipientRequest,
    ),
  );
}

export function recipientGetDocumentRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientRole$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientRole
> = z.nativeEnum(RecipientGetDocumentRecipientRole);

/** @internal */
export const RecipientGetDocumentRecipientRole$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientRole
> = RecipientGetDocumentRecipientRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientRole$ {
  /** @deprecated use `RecipientGetDocumentRecipientRole$inboundSchema` instead. */
  export const inboundSchema = RecipientGetDocumentRecipientRole$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientRole$outboundSchema;
}

/** @internal */
export const ReadStatus$inboundSchema: z.ZodNativeEnum<typeof ReadStatus> = z
  .nativeEnum(ReadStatus);

/** @internal */
export const ReadStatus$outboundSchema: z.ZodNativeEnum<typeof ReadStatus> =
  ReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReadStatus$ {
  /** @deprecated use `ReadStatus$inboundSchema` instead. */
  export const inboundSchema = ReadStatus$inboundSchema;
  /** @deprecated use `ReadStatus$outboundSchema` instead. */
  export const outboundSchema = ReadStatus$outboundSchema;
}

/** @internal */
export const SigningStatus$inboundSchema: z.ZodNativeEnum<
  typeof SigningStatus
> = z.nativeEnum(SigningStatus);

/** @internal */
export const SigningStatus$outboundSchema: z.ZodNativeEnum<
  typeof SigningStatus
> = SigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SigningStatus$ {
  /** @deprecated use `SigningStatus$inboundSchema` instead. */
  export const inboundSchema = SigningStatus$inboundSchema;
  /** @deprecated use `SigningStatus$outboundSchema` instead. */
  export const outboundSchema = SigningStatus$outboundSchema;
}

/** @internal */
export const SendStatus$inboundSchema: z.ZodNativeEnum<typeof SendStatus> = z
  .nativeEnum(SendStatus);

/** @internal */
export const SendStatus$outboundSchema: z.ZodNativeEnum<typeof SendStatus> =
  SendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendStatus$ {
  /** @deprecated use `SendStatus$inboundSchema` instead. */
  export const inboundSchema = SendStatus$inboundSchema;
  /** @deprecated use `SendStatus$outboundSchema` instead. */
  export const outboundSchema = SendStatus$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientAccessAuth> = z
    .nativeEnum(RecipientGetDocumentRecipientAccessAuth);

/** @internal */
export const RecipientGetDocumentRecipientAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientAccessAuth> =
    RecipientGetDocumentRecipientAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientAccessAuth$ {
  /** @deprecated use `RecipientGetDocumentRecipientAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientAccessAuth$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientActionAuth> = z
    .nativeEnum(RecipientGetDocumentRecipientActionAuth);

/** @internal */
export const RecipientGetDocumentRecipientActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientActionAuth> =
    RecipientGetDocumentRecipientActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientActionAuth$ {
  /** @deprecated use `RecipientGetDocumentRecipientActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientActionAuth$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientActionAuth$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientAuthOptions$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientAuthOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessAuth: z.nullable(RecipientGetDocumentRecipientAccessAuth$inboundSchema),
  actionAuth: z.nullable(RecipientGetDocumentRecipientActionAuth$inboundSchema),
});

/** @internal */
export type RecipientGetDocumentRecipientAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientGetDocumentRecipientAuthOptions$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientAuthOptions$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientAuthOptions
> = z.object({
  accessAuth: z.nullable(
    RecipientGetDocumentRecipientAccessAuth$outboundSchema,
  ),
  actionAuth: z.nullable(
    RecipientGetDocumentRecipientActionAuth$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientAuthOptions$ {
  /** @deprecated use `RecipientGetDocumentRecipientAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientAuthOptions$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientAuthOptions$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientAuthOptions$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientAuthOptions$Outbound;
}

export function recipientGetDocumentRecipientAuthOptionsToJSON(
  recipientGetDocumentRecipientAuthOptions:
    RecipientGetDocumentRecipientAuthOptions,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientAuthOptions$outboundSchema.parse(
      recipientGetDocumentRecipientAuthOptions,
    ),
  );
}

export function recipientGetDocumentRecipientAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientType$inboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientType
> = z.nativeEnum(RecipientGetDocumentRecipientType);

/** @internal */
export const RecipientGetDocumentRecipientType$outboundSchema: z.ZodNativeEnum<
  typeof RecipientGetDocumentRecipientType
> = RecipientGetDocumentRecipientType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientType$ {
  /** @deprecated use `RecipientGetDocumentRecipientType$inboundSchema` instead. */
  export const inboundSchema = RecipientGetDocumentRecipientType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValuesToJSON(
  recipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema
      .parse(
        recipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
      ),
  );
}

export function recipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta9$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta9$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta9$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta9
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues$outboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta9$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta9$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta9ToJSON(
  recipientGetDocumentRecipientFieldMeta9:
    RecipientGetDocumentRecipientFieldMeta9,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta9$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta9,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaDocumentsRecipientsValuesToJSON(
  recipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema
      .parse(recipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues),
  );
}

export function recipientGetDocumentRecipientFieldMetaDocumentsRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta8$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$inboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta8$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta8$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta8
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues$outboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta8$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta8$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta8ToJSON(
  recipientGetDocumentRecipientFieldMeta8:
    RecipientGetDocumentRecipientFieldMeta8,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta8$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta8,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaValues$inboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientGetDocumentRecipientFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaValues$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientFieldMetaValues$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaValues$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaValues$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMetaValues$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaValuesToJSON(
  recipientGetDocumentRecipientFieldMetaValues:
    RecipientGetDocumentRecipientFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMetaValues$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMetaValues,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta7$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientGetDocumentRecipientFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta7$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta7$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta7
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
  values: z.array(
    z.lazy(() => RecipientGetDocumentRecipientFieldMetaValues$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta7$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta7$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta7ToJSON(
  recipientGetDocumentRecipientFieldMeta7:
    RecipientGetDocumentRecipientFieldMeta7,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta7$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta7,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta6$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta6$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta6$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta6
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta6$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta6$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta6ToJSON(
  recipientGetDocumentRecipientFieldMeta6:
    RecipientGetDocumentRecipientFieldMeta6,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta6$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta6,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta5$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta5$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta5$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta5
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta5$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta5$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta5ToJSON(
  recipientGetDocumentRecipientFieldMeta5:
    RecipientGetDocumentRecipientFieldMeta5,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta5$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta5,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta4$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta4$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta4$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta4
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta4$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta4$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta4ToJSON(
  recipientGetDocumentRecipientFieldMeta4:
    RecipientGetDocumentRecipientFieldMeta4,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta4$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta4,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta3$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta3$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta3$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta3
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta3$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta3$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta3ToJSON(
  recipientGetDocumentRecipientFieldMeta3:
    RecipientGetDocumentRecipientFieldMeta3,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta3$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta3,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType
  > = z.nativeEnum(
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType,
  );

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType
  > =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta2$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta2$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta2$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta2
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta2$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta2$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta2ToJSON(
  recipientGetDocumentRecipientFieldMeta2:
    RecipientGetDocumentRecipientFieldMeta2,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta2$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta2,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientFieldMetaType> = z
    .nativeEnum(RecipientGetDocumentRecipientFieldMetaType);

/** @internal */
export const RecipientGetDocumentRecipientFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientGetDocumentRecipientFieldMetaType> =
    RecipientGetDocumentRecipientFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMetaType$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta1$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetDocumentRecipientFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta1$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta1$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta1
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: RecipientGetDocumentRecipientFieldMetaType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta1$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta1$Outbound;
}

export function recipientGetDocumentRecipientFieldMeta1ToJSON(
  recipientGetDocumentRecipientFieldMeta1:
    RecipientGetDocumentRecipientFieldMeta1,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta1$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta1,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta1$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta2$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta3$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta4$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta7$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta9$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta5$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta8$inboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta6$inboundSchema),
]);

/** @internal */
export type RecipientGetDocumentRecipientFieldMeta$Outbound =
  | RecipientGetDocumentRecipientFieldMeta1$Outbound
  | RecipientGetDocumentRecipientFieldMeta2$Outbound
  | RecipientGetDocumentRecipientFieldMeta3$Outbound
  | RecipientGetDocumentRecipientFieldMeta4$Outbound
  | RecipientGetDocumentRecipientFieldMeta7$Outbound
  | RecipientGetDocumentRecipientFieldMeta9$Outbound
  | RecipientGetDocumentRecipientFieldMeta5$Outbound
  | RecipientGetDocumentRecipientFieldMeta8$Outbound
  | RecipientGetDocumentRecipientFieldMeta6$Outbound;

/** @internal */
export const RecipientGetDocumentRecipientFieldMeta$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFieldMeta$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFieldMeta
> = z.union([
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta1$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta2$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta3$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta4$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta7$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta9$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta5$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta8$outboundSchema),
  z.lazy(() => RecipientGetDocumentRecipientFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFieldMeta$ {
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFieldMeta$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFieldMeta$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFieldMeta$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFieldMeta$Outbound;
}

export function recipientGetDocumentRecipientFieldMetaToJSON(
  recipientGetDocumentRecipientFieldMeta:
    RecipientGetDocumentRecipientFieldMeta,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFieldMeta$outboundSchema.parse(
      recipientGetDocumentRecipientFieldMeta,
    ),
  );
}

export function recipientGetDocumentRecipientFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientFields$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientGetDocumentRecipientType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta1$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta2$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta3$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta4$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta7$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta9$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta5$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta8$inboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientGetDocumentRecipientFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientGetDocumentRecipientFieldMeta1$Outbound
    | RecipientGetDocumentRecipientFieldMeta2$Outbound
    | RecipientGetDocumentRecipientFieldMeta3$Outbound
    | RecipientGetDocumentRecipientFieldMeta4$Outbound
    | RecipientGetDocumentRecipientFieldMeta7$Outbound
    | RecipientGetDocumentRecipientFieldMeta9$Outbound
    | RecipientGetDocumentRecipientFieldMeta5$Outbound
    | RecipientGetDocumentRecipientFieldMeta8$Outbound
    | RecipientGetDocumentRecipientFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientGetDocumentRecipientFields$outboundSchema: z.ZodType<
  RecipientGetDocumentRecipientFields$Outbound,
  z.ZodTypeDef,
  RecipientGetDocumentRecipientFields
> = z.object({
  type: RecipientGetDocumentRecipientType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta1$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta2$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta3$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta4$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta7$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta9$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta5$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta8$outboundSchema),
      z.lazy(() => RecipientGetDocumentRecipientFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientFields$ {
  /** @deprecated use `RecipientGetDocumentRecipientFields$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientFields$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFields$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientFields$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientFields$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientFields$Outbound;
}

export function recipientGetDocumentRecipientFieldsToJSON(
  recipientGetDocumentRecipientFields: RecipientGetDocumentRecipientFields,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientFields$outboundSchema.parse(
      recipientGetDocumentRecipientFields,
    ),
  );
}

export function recipientGetDocumentRecipientFieldsFromJSON(
  jsonString: string,
): SafeParseResult<RecipientGetDocumentRecipientFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientGetDocumentRecipientFields' from JSON`,
  );
}

/** @internal */
export const RecipientGetDocumentRecipientResponseBody$inboundSchema: z.ZodType<
  RecipientGetDocumentRecipientResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: RecipientGetDocumentRecipientRole$inboundSchema,
  readStatus: ReadStatus$inboundSchema,
  signingStatus: SigningStatus$inboundSchema,
  sendStatus: SendStatus$inboundSchema,
  id: z.number().int(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  email: z.string(),
  name: z.string(),
  token: z.string(),
  documentDeletedAt: z.nullable(z.string()),
  expired: z.nullable(z.string()),
  signedAt: z.nullable(z.string()),
  authOptions: z.nullable(
    z.lazy(() => RecipientGetDocumentRecipientAuthOptions$inboundSchema),
  ),
  signingOrder: z.nullable(z.number()),
  rejectionReason: z.nullable(z.string()),
  fields: z.array(
    z.lazy(() => RecipientGetDocumentRecipientFields$inboundSchema),
  ),
});

/** @internal */
export type RecipientGetDocumentRecipientResponseBody$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientGetDocumentRecipientAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientGetDocumentRecipientFields$Outbound>;
};

/** @internal */
export const RecipientGetDocumentRecipientResponseBody$outboundSchema:
  z.ZodType<
    RecipientGetDocumentRecipientResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientGetDocumentRecipientResponseBody
  > = z.object({
    role: RecipientGetDocumentRecipientRole$outboundSchema,
    readStatus: ReadStatus$outboundSchema,
    signingStatus: SigningStatus$outboundSchema,
    sendStatus: SendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientGetDocumentRecipientAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientGetDocumentRecipientFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientGetDocumentRecipientResponseBody$ {
  /** @deprecated use `RecipientGetDocumentRecipientResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientGetDocumentRecipientResponseBody$inboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientGetDocumentRecipientResponseBody$outboundSchema;
  /** @deprecated use `RecipientGetDocumentRecipientResponseBody$Outbound` instead. */
  export type Outbound = RecipientGetDocumentRecipientResponseBody$Outbound;
}

export function recipientGetDocumentRecipientResponseBodyToJSON(
  recipientGetDocumentRecipientResponseBody:
    RecipientGetDocumentRecipientResponseBody,
): string {
  return JSON.stringify(
    RecipientGetDocumentRecipientResponseBody$outboundSchema.parse(
      recipientGetDocumentRecipientResponseBody,
    ),
  );
}

export function recipientGetDocumentRecipientResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientGetDocumentRecipientResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientGetDocumentRecipientResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientGetDocumentRecipientResponseBody' from JSON`,
  );
}
