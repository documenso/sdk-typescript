/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TemplateToggleTemplateDirectLinkRequestBody = {
  templateId: number;
  enabled: boolean;
};

/**
 * Successful response
 */
export type TemplateToggleTemplateDirectLinkResponseBody = {
  id: string;
  templateId: number;
  token: string;
  createdAt: string;
  enabled: boolean;
  directTemplateRecipientId: number;
};

/** @internal */
export const TemplateToggleTemplateDirectLinkRequestBody$inboundSchema:
  z.ZodType<
    TemplateToggleTemplateDirectLinkRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    templateId: z.number(),
    enabled: z.boolean(),
  });

/** @internal */
export type TemplateToggleTemplateDirectLinkRequestBody$Outbound = {
  templateId: number;
  enabled: boolean;
};

/** @internal */
export const TemplateToggleTemplateDirectLinkRequestBody$outboundSchema:
  z.ZodType<
    TemplateToggleTemplateDirectLinkRequestBody$Outbound,
    z.ZodTypeDef,
    TemplateToggleTemplateDirectLinkRequestBody
  > = z.object({
    templateId: z.number(),
    enabled: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TemplateToggleTemplateDirectLinkRequestBody$ {
  /** @deprecated use `TemplateToggleTemplateDirectLinkRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    TemplateToggleTemplateDirectLinkRequestBody$inboundSchema;
  /** @deprecated use `TemplateToggleTemplateDirectLinkRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    TemplateToggleTemplateDirectLinkRequestBody$outboundSchema;
  /** @deprecated use `TemplateToggleTemplateDirectLinkRequestBody$Outbound` instead. */
  export type Outbound = TemplateToggleTemplateDirectLinkRequestBody$Outbound;
}

export function templateToggleTemplateDirectLinkRequestBodyToJSON(
  templateToggleTemplateDirectLinkRequestBody:
    TemplateToggleTemplateDirectLinkRequestBody,
): string {
  return JSON.stringify(
    TemplateToggleTemplateDirectLinkRequestBody$outboundSchema.parse(
      templateToggleTemplateDirectLinkRequestBody,
    ),
  );
}

export function templateToggleTemplateDirectLinkRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  TemplateToggleTemplateDirectLinkRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TemplateToggleTemplateDirectLinkRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TemplateToggleTemplateDirectLinkRequestBody' from JSON`,
  );
}

/** @internal */
export const TemplateToggleTemplateDirectLinkResponseBody$inboundSchema:
  z.ZodType<
    TemplateToggleTemplateDirectLinkResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    templateId: z.number().int(),
    token: z.string(),
    createdAt: z.string(),
    enabled: z.boolean(),
    directTemplateRecipientId: z.number().int(),
  });

/** @internal */
export type TemplateToggleTemplateDirectLinkResponseBody$Outbound = {
  id: string;
  templateId: number;
  token: string;
  createdAt: string;
  enabled: boolean;
  directTemplateRecipientId: number;
};

/** @internal */
export const TemplateToggleTemplateDirectLinkResponseBody$outboundSchema:
  z.ZodType<
    TemplateToggleTemplateDirectLinkResponseBody$Outbound,
    z.ZodTypeDef,
    TemplateToggleTemplateDirectLinkResponseBody
  > = z.object({
    id: z.string(),
    templateId: z.number().int(),
    token: z.string(),
    createdAt: z.string(),
    enabled: z.boolean(),
    directTemplateRecipientId: z.number().int(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TemplateToggleTemplateDirectLinkResponseBody$ {
  /** @deprecated use `TemplateToggleTemplateDirectLinkResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    TemplateToggleTemplateDirectLinkResponseBody$inboundSchema;
  /** @deprecated use `TemplateToggleTemplateDirectLinkResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    TemplateToggleTemplateDirectLinkResponseBody$outboundSchema;
  /** @deprecated use `TemplateToggleTemplateDirectLinkResponseBody$Outbound` instead. */
  export type Outbound = TemplateToggleTemplateDirectLinkResponseBody$Outbound;
}

export function templateToggleTemplateDirectLinkResponseBodyToJSON(
  templateToggleTemplateDirectLinkResponseBody:
    TemplateToggleTemplateDirectLinkResponseBody,
): string {
  return JSON.stringify(
    TemplateToggleTemplateDirectLinkResponseBody$outboundSchema.parse(
      templateToggleTemplateDirectLinkResponseBody,
    ),
  );
}

export function templateToggleTemplateDirectLinkResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  TemplateToggleTemplateDirectLinkResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TemplateToggleTemplateDirectLinkResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TemplateToggleTemplateDirectLinkResponseBody' from JSON`,
  );
}
