/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentDeleteDocumentRequestBody = {
  documentId: number;
};

/** @internal */
export const DocumentDeleteDocumentRequestBody$inboundSchema: z.ZodType<
  DocumentDeleteDocumentRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
});

/** @internal */
export type DocumentDeleteDocumentRequestBody$Outbound = {
  documentId: number;
};

/** @internal */
export const DocumentDeleteDocumentRequestBody$outboundSchema: z.ZodType<
  DocumentDeleteDocumentRequestBody$Outbound,
  z.ZodTypeDef,
  DocumentDeleteDocumentRequestBody
> = z.object({
  documentId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentDeleteDocumentRequestBody$ {
  /** @deprecated use `DocumentDeleteDocumentRequestBody$inboundSchema` instead. */
  export const inboundSchema = DocumentDeleteDocumentRequestBody$inboundSchema;
  /** @deprecated use `DocumentDeleteDocumentRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    DocumentDeleteDocumentRequestBody$outboundSchema;
  /** @deprecated use `DocumentDeleteDocumentRequestBody$Outbound` instead. */
  export type Outbound = DocumentDeleteDocumentRequestBody$Outbound;
}

export function documentDeleteDocumentRequestBodyToJSON(
  documentDeleteDocumentRequestBody: DocumentDeleteDocumentRequestBody,
): string {
  return JSON.stringify(
    DocumentDeleteDocumentRequestBody$outboundSchema.parse(
      documentDeleteDocumentRequestBody,
    ),
  );
}

export function documentDeleteDocumentRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<DocumentDeleteDocumentRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentDeleteDocumentRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentDeleteDocumentRequestBody' from JSON`,
  );
}
