/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentDeleteDocumentRequest = {
  documentId: number;
};

/**
 * Successful response
 */
export type DocumentDeleteDocumentResponse = {
  success: boolean;
};

/** @internal */
export const DocumentDeleteDocumentRequest$inboundSchema: z.ZodType<
  DocumentDeleteDocumentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
});

/** @internal */
export type DocumentDeleteDocumentRequest$Outbound = {
  documentId: number;
};

/** @internal */
export const DocumentDeleteDocumentRequest$outboundSchema: z.ZodType<
  DocumentDeleteDocumentRequest$Outbound,
  z.ZodTypeDef,
  DocumentDeleteDocumentRequest
> = z.object({
  documentId: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentDeleteDocumentRequest$ {
  /** @deprecated use `DocumentDeleteDocumentRequest$inboundSchema` instead. */
  export const inboundSchema = DocumentDeleteDocumentRequest$inboundSchema;
  /** @deprecated use `DocumentDeleteDocumentRequest$outboundSchema` instead. */
  export const outboundSchema = DocumentDeleteDocumentRequest$outboundSchema;
  /** @deprecated use `DocumentDeleteDocumentRequest$Outbound` instead. */
  export type Outbound = DocumentDeleteDocumentRequest$Outbound;
}

export function documentDeleteDocumentRequestToJSON(
  documentDeleteDocumentRequest: DocumentDeleteDocumentRequest,
): string {
  return JSON.stringify(
    DocumentDeleteDocumentRequest$outboundSchema.parse(
      documentDeleteDocumentRequest,
    ),
  );
}

export function documentDeleteDocumentRequestFromJSON(
  jsonString: string,
): SafeParseResult<DocumentDeleteDocumentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentDeleteDocumentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentDeleteDocumentRequest' from JSON`,
  );
}

/** @internal */
export const DocumentDeleteDocumentResponse$inboundSchema: z.ZodType<
  DocumentDeleteDocumentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
});

/** @internal */
export type DocumentDeleteDocumentResponse$Outbound = {
  success: boolean;
};

/** @internal */
export const DocumentDeleteDocumentResponse$outboundSchema: z.ZodType<
  DocumentDeleteDocumentResponse$Outbound,
  z.ZodTypeDef,
  DocumentDeleteDocumentResponse
> = z.object({
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentDeleteDocumentResponse$ {
  /** @deprecated use `DocumentDeleteDocumentResponse$inboundSchema` instead. */
  export const inboundSchema = DocumentDeleteDocumentResponse$inboundSchema;
  /** @deprecated use `DocumentDeleteDocumentResponse$outboundSchema` instead. */
  export const outboundSchema = DocumentDeleteDocumentResponse$outboundSchema;
  /** @deprecated use `DocumentDeleteDocumentResponse$Outbound` instead. */
  export type Outbound = DocumentDeleteDocumentResponse$Outbound;
}

export function documentDeleteDocumentResponseToJSON(
  documentDeleteDocumentResponse: DocumentDeleteDocumentResponse,
): string {
  return JSON.stringify(
    DocumentDeleteDocumentResponse$outboundSchema.parse(
      documentDeleteDocumentResponse,
    ),
  );
}

export function documentDeleteDocumentResponseFromJSON(
  jsonString: string,
): SafeParseResult<DocumentDeleteDocumentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentDeleteDocumentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentDeleteDocumentResponse' from JSON`,
  );
}
