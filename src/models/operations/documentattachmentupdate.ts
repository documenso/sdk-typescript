/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentAttachmentUpdateData = {
  label: string;
  data: string;
};

export type DocumentAttachmentUpdateRequest = {
  id: string;
  data: DocumentAttachmentUpdateData;
};

/** @internal */
export const DocumentAttachmentUpdateData$inboundSchema: z.ZodType<
  DocumentAttachmentUpdateData,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string(),
  data: z.string(),
});

/** @internal */
export type DocumentAttachmentUpdateData$Outbound = {
  label: string;
  data: string;
};

/** @internal */
export const DocumentAttachmentUpdateData$outboundSchema: z.ZodType<
  DocumentAttachmentUpdateData$Outbound,
  z.ZodTypeDef,
  DocumentAttachmentUpdateData
> = z.object({
  label: z.string(),
  data: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentAttachmentUpdateData$ {
  /** @deprecated use `DocumentAttachmentUpdateData$inboundSchema` instead. */
  export const inboundSchema = DocumentAttachmentUpdateData$inboundSchema;
  /** @deprecated use `DocumentAttachmentUpdateData$outboundSchema` instead. */
  export const outboundSchema = DocumentAttachmentUpdateData$outboundSchema;
  /** @deprecated use `DocumentAttachmentUpdateData$Outbound` instead. */
  export type Outbound = DocumentAttachmentUpdateData$Outbound;
}

export function documentAttachmentUpdateDataToJSON(
  documentAttachmentUpdateData: DocumentAttachmentUpdateData,
): string {
  return JSON.stringify(
    DocumentAttachmentUpdateData$outboundSchema.parse(
      documentAttachmentUpdateData,
    ),
  );
}

export function documentAttachmentUpdateDataFromJSON(
  jsonString: string,
): SafeParseResult<DocumentAttachmentUpdateData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentAttachmentUpdateData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentAttachmentUpdateData' from JSON`,
  );
}

/** @internal */
export const DocumentAttachmentUpdateRequest$inboundSchema: z.ZodType<
  DocumentAttachmentUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  data: z.lazy(() => DocumentAttachmentUpdateData$inboundSchema),
});

/** @internal */
export type DocumentAttachmentUpdateRequest$Outbound = {
  id: string;
  data: DocumentAttachmentUpdateData$Outbound;
};

/** @internal */
export const DocumentAttachmentUpdateRequest$outboundSchema: z.ZodType<
  DocumentAttachmentUpdateRequest$Outbound,
  z.ZodTypeDef,
  DocumentAttachmentUpdateRequest
> = z.object({
  id: z.string(),
  data: z.lazy(() => DocumentAttachmentUpdateData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentAttachmentUpdateRequest$ {
  /** @deprecated use `DocumentAttachmentUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = DocumentAttachmentUpdateRequest$inboundSchema;
  /** @deprecated use `DocumentAttachmentUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = DocumentAttachmentUpdateRequest$outboundSchema;
  /** @deprecated use `DocumentAttachmentUpdateRequest$Outbound` instead. */
  export type Outbound = DocumentAttachmentUpdateRequest$Outbound;
}

export function documentAttachmentUpdateRequestToJSON(
  documentAttachmentUpdateRequest: DocumentAttachmentUpdateRequest,
): string {
  return JSON.stringify(
    DocumentAttachmentUpdateRequest$outboundSchema.parse(
      documentAttachmentUpdateRequest,
    ),
  );
}

export function documentAttachmentUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<DocumentAttachmentUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentAttachmentUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentAttachmentUpdateRequest' from JSON`,
  );
}
