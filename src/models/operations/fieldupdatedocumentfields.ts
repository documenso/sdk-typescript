/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const FieldUpdateDocumentFieldsTypeDropdownRequest1 = {
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateDocumentFieldsTypeDropdownRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeDropdownRequest1
>;

export const FieldUpdateDocumentFieldsTypeDropdownRequest2 = {
  Dropdown: "dropdown",
} as const;
export type FieldUpdateDocumentFieldsTypeDropdownRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeDropdownRequest2
>;

export type FieldUpdateDocumentFieldsValueDropdown = {
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMetaDropdownRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeDropdownRequest2;
  values?: Array<FieldUpdateDocumentFieldsValueDropdown> | undefined;
  defaultValue?: string | undefined;
};

export type FieldUpdateDocumentFieldsFieldDropdown = {
  type: FieldUpdateDocumentFieldsTypeDropdownRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaDropdownRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeCheckboxRequest1 = {
  Checkbox: "CHECKBOX",
} as const;
export type FieldUpdateDocumentFieldsTypeCheckboxRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeCheckboxRequest1
>;

export const FieldUpdateDocumentFieldsTypeCheckboxRequest2 = {
  Checkbox: "checkbox",
} as const;
export type FieldUpdateDocumentFieldsTypeCheckboxRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeCheckboxRequest2
>;

export type FieldUpdateDocumentFieldsValueCheckbox = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMetaCheckboxRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeCheckboxRequest2;
  values?: Array<FieldUpdateDocumentFieldsValueCheckbox> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export type FieldUpdateDocumentFieldsFieldCheckbox = {
  type: FieldUpdateDocumentFieldsTypeCheckboxRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaCheckboxRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeRadioRequest1 = {
  Radio: "RADIO",
} as const;
export type FieldUpdateDocumentFieldsTypeRadioRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeRadioRequest1
>;

export const FieldUpdateDocumentFieldsTypeRadioRequest2 = {
  Radio: "radio",
} as const;
export type FieldUpdateDocumentFieldsTypeRadioRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeRadioRequest2
>;

export type FieldUpdateDocumentFieldsValueRadio = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMetaRadioRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeRadioRequest2;
  values?: Array<FieldUpdateDocumentFieldsValueRadio> | undefined;
};

export type FieldUpdateDocumentFieldsFieldRadio = {
  type: FieldUpdateDocumentFieldsTypeRadioRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaRadioRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeNumberRequest1 = {
  Number: "NUMBER",
} as const;
export type FieldUpdateDocumentFieldsTypeNumberRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeNumberRequest1
>;

export const FieldUpdateDocumentFieldsTypeNumberRequest2 = {
  Number: "number",
} as const;
export type FieldUpdateDocumentFieldsTypeNumberRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeNumberRequest2
>;

export const FieldUpdateDocumentFieldsTextAlignNumber = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignNumber = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignNumber
>;

export type FieldUpdateDocumentFieldsFieldMetaNumberRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeNumberRequest2;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignNumber | undefined;
};

export type FieldUpdateDocumentFieldsFieldNumber = {
  type: FieldUpdateDocumentFieldsTypeNumberRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaNumberRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeTextRequest1 = {
  Text: "TEXT",
} as const;
export type FieldUpdateDocumentFieldsTypeTextRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeTextRequest1
>;

export const FieldUpdateDocumentFieldsTypeTextRequest2 = {
  Text: "text",
} as const;
export type FieldUpdateDocumentFieldsTypeTextRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeTextRequest2
>;

export const FieldUpdateDocumentFieldsTextAlignText = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignText = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignText
>;

export type FieldUpdateDocumentFieldsFieldMetaTextRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeTextRequest2;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignText | undefined;
};

export type FieldUpdateDocumentFieldsFieldText = {
  type: FieldUpdateDocumentFieldsTypeTextRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaTextRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeDateRequest1 = {
  Date: "DATE",
} as const;
export type FieldUpdateDocumentFieldsTypeDateRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeDateRequest1
>;

export const FieldUpdateDocumentFieldsTypeDateRequest2 = {
  Date: "date",
} as const;
export type FieldUpdateDocumentFieldsTypeDateRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeDateRequest2
>;

export const FieldUpdateDocumentFieldsTextAlignDate = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignDate = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignDate
>;

export type FieldUpdateDocumentFieldsFieldMetaDateRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeDateRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignDate | undefined;
};

export type FieldUpdateDocumentFieldsFieldDate = {
  type: FieldUpdateDocumentFieldsTypeDateRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaDateRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeEmailRequest1 = {
  Email: "EMAIL",
} as const;
export type FieldUpdateDocumentFieldsTypeEmailRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeEmailRequest1
>;

export const FieldUpdateDocumentFieldsTypeEmailRequest2 = {
  Email: "email",
} as const;
export type FieldUpdateDocumentFieldsTypeEmailRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeEmailRequest2
>;

export const FieldUpdateDocumentFieldsTextAlignEmail = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignEmail = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignEmail
>;

export type FieldUpdateDocumentFieldsFieldMetaEmailRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeEmailRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignEmail | undefined;
};

export type FieldUpdateDocumentFieldsFieldEmail = {
  type: FieldUpdateDocumentFieldsTypeEmailRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaEmailRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeNameRequest1 = {
  Name: "NAME",
} as const;
export type FieldUpdateDocumentFieldsTypeNameRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeNameRequest1
>;

export const FieldUpdateDocumentFieldsTypeNameRequest2 = {
  Name: "name",
} as const;
export type FieldUpdateDocumentFieldsTypeNameRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeNameRequest2
>;

export const FieldUpdateDocumentFieldsTextAlignName = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignName = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignName
>;

export type FieldUpdateDocumentFieldsFieldMetaNameRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeNameRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignName | undefined;
};

export type FieldUpdateDocumentFieldsFieldName = {
  type: FieldUpdateDocumentFieldsTypeNameRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaNameRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeInitialsRequest1 = {
  Initials: "INITIALS",
} as const;
export type FieldUpdateDocumentFieldsTypeInitialsRequest1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeInitialsRequest1
>;

export const FieldUpdateDocumentFieldsTypeInitialsRequest2 = {
  Initials: "initials",
} as const;
export type FieldUpdateDocumentFieldsTypeInitialsRequest2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeInitialsRequest2
>;

export const FieldUpdateDocumentFieldsTextAlignInitials = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignInitials = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignInitials
>;

export type FieldUpdateDocumentFieldsFieldMetaInitialsRequest = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsTypeInitialsRequest2;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignInitials | undefined;
};

export type FieldUpdateDocumentFieldsFieldInitials = {
  type: FieldUpdateDocumentFieldsTypeInitialsRequest1;
  fieldMeta?: FieldUpdateDocumentFieldsFieldMetaInitialsRequest | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeFreeSignature = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldsTypeFreeSignature = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeFreeSignature
>;

export type FieldUpdateDocumentFieldsFieldFreeSignature = {
  type: FieldUpdateDocumentFieldsTypeFreeSignature;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsTypeSignature = {
  Signature: "SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldsTypeSignature = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeSignature
>;

export type FieldUpdateDocumentFieldsFieldSignature = {
  type: FieldUpdateDocumentFieldsTypeSignature;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export type FieldUpdateDocumentFieldsFieldUnion =
  | FieldUpdateDocumentFieldsFieldSignature
  | FieldUpdateDocumentFieldsFieldFreeSignature
  | FieldUpdateDocumentFieldsFieldInitials
  | FieldUpdateDocumentFieldsFieldName
  | FieldUpdateDocumentFieldsFieldEmail
  | FieldUpdateDocumentFieldsFieldDate
  | FieldUpdateDocumentFieldsFieldText
  | FieldUpdateDocumentFieldsFieldNumber
  | FieldUpdateDocumentFieldsFieldRadio
  | FieldUpdateDocumentFieldsFieldCheckbox
  | FieldUpdateDocumentFieldsFieldDropdown;

export type FieldUpdateDocumentFieldsRequest = {
  documentId: number;
  fields: Array<
    | FieldUpdateDocumentFieldsFieldSignature
    | FieldUpdateDocumentFieldsFieldFreeSignature
    | FieldUpdateDocumentFieldsFieldInitials
    | FieldUpdateDocumentFieldsFieldName
    | FieldUpdateDocumentFieldsFieldEmail
    | FieldUpdateDocumentFieldsFieldDate
    | FieldUpdateDocumentFieldsFieldText
    | FieldUpdateDocumentFieldsFieldNumber
    | FieldUpdateDocumentFieldsFieldRadio
    | FieldUpdateDocumentFieldsFieldCheckbox
    | FieldUpdateDocumentFieldsFieldDropdown
  >;
};

export const FieldUpdateDocumentFieldsTypeResponse = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateDocumentFieldsTypeResponse = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTypeResponse
>;

export const FieldUpdateDocumentFieldsFieldMetaTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeDropdown = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeDropdown
>;

export type FieldUpdateDocumentFieldsValueResponse3 = {
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMetaDropdownResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeDropdown;
  values?: Array<FieldUpdateDocumentFieldsValueResponse3> | undefined;
  defaultValue?: string | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeCheckbox = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeCheckbox
>;

export type FieldUpdateDocumentFieldsValueResponse2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMetaCheckboxResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeCheckbox;
  values?: Array<FieldUpdateDocumentFieldsValueResponse2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeRadio = {
  Radio: "radio",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeRadio = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeRadio
>;

export type FieldUpdateDocumentFieldsValueResponse1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMetaRadioResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeRadio;
  values?: Array<FieldUpdateDocumentFieldsValueResponse1> | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeNumber = {
  Number: "number",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeNumber = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeNumber
>;

export const FieldUpdateDocumentFieldsTextAlignResponse6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignResponse6 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignResponse6
>;

export type FieldUpdateDocumentFieldsFieldMetaNumberResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignResponse6 | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeText = {
  Text: "text",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeText = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeText
>;

export const FieldUpdateDocumentFieldsTextAlignResponse5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignResponse5 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignResponse5
>;

export type FieldUpdateDocumentFieldsFieldMetaTextResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignResponse5 | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeDate = {
  Date: "date",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeDate = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeDate
>;

export const FieldUpdateDocumentFieldsTextAlignResponse4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignResponse4 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignResponse4
>;

export type FieldUpdateDocumentFieldsFieldMetaDateResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeDate;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignResponse4 | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeEmail = {
  Email: "email",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeEmail = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeEmail
>;

export const FieldUpdateDocumentFieldsTextAlignResponse3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignResponse3 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignResponse3
>;

export type FieldUpdateDocumentFieldsFieldMetaEmailResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeEmail;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignResponse3 | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeName = {
  Name: "name",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeName = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeName
>;

export const FieldUpdateDocumentFieldsTextAlignResponse2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignResponse2 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignResponse2
>;

export type FieldUpdateDocumentFieldsFieldMetaNameResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeName;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignResponse2 | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaTypeInitials = {
  Initials: "initials",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaTypeInitials = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaTypeInitials
>;

export const FieldUpdateDocumentFieldsTextAlignResponse1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldUpdateDocumentFieldsTextAlignResponse1 = ClosedEnum<
  typeof FieldUpdateDocumentFieldsTextAlignResponse1
>;

export type FieldUpdateDocumentFieldsFieldMetaInitialsResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaTypeInitials;
  fontSize?: number | undefined;
  textAlign?: FieldUpdateDocumentFieldsTextAlignResponse1 | undefined;
};

export type FieldUpdateDocumentFieldsFieldMetaUnion =
  | FieldUpdateDocumentFieldsFieldMetaInitialsResponse
  | FieldUpdateDocumentFieldsFieldMetaNameResponse
  | FieldUpdateDocumentFieldsFieldMetaEmailResponse
  | FieldUpdateDocumentFieldsFieldMetaDateResponse
  | FieldUpdateDocumentFieldsFieldMetaTextResponse
  | FieldUpdateDocumentFieldsFieldMetaNumberResponse
  | FieldUpdateDocumentFieldsFieldMetaRadioResponse
  | FieldUpdateDocumentFieldsFieldMetaCheckboxResponse
  | FieldUpdateDocumentFieldsFieldMetaDropdownResponse;

export type FieldUpdateDocumentFieldsFieldResponse = {
  type: FieldUpdateDocumentFieldsTypeResponse;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldsFieldMetaInitialsResponse
    | FieldUpdateDocumentFieldsFieldMetaNameResponse
    | FieldUpdateDocumentFieldsFieldMetaEmailResponse
    | FieldUpdateDocumentFieldsFieldMetaDateResponse
    | FieldUpdateDocumentFieldsFieldMetaTextResponse
    | FieldUpdateDocumentFieldsFieldMetaNumberResponse
    | FieldUpdateDocumentFieldsFieldMetaRadioResponse
    | FieldUpdateDocumentFieldsFieldMetaCheckboxResponse
    | FieldUpdateDocumentFieldsFieldMetaDropdownResponse
    | null;
};

/**
 * Successful response
 */
export type FieldUpdateDocumentFieldsResponse = {
  fields: Array<FieldUpdateDocumentFieldsFieldResponse>;
};

/** @internal */
export const FieldUpdateDocumentFieldsTypeDropdownRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDropdownRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeDropdownRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeDropdownRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDropdownRequest1> =
    FieldUpdateDocumentFieldsTypeDropdownRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeDropdownRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDropdownRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeDropdownRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDropdownRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeDropdownRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeDropdownRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDropdownRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeDropdownRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeDropdownRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDropdownRequest2> =
    FieldUpdateDocumentFieldsTypeDropdownRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeDropdownRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDropdownRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeDropdownRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDropdownRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeDropdownRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsValueDropdown$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsValueDropdown$Outbound = {
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsValueDropdown$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueDropdown$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsValueDropdown
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsValueDropdown$ {
  /** @deprecated use `FieldUpdateDocumentFieldsValueDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsValueDropdown$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsValueDropdown$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueDropdown$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsValueDropdown$Outbound;
}

export function fieldUpdateDocumentFieldsValueDropdownToJSON(
  fieldUpdateDocumentFieldsValueDropdown:
    FieldUpdateDocumentFieldsValueDropdown,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsValueDropdown$outboundSchema.parse(
      fieldUpdateDocumentFieldsValueDropdown,
    ),
  );
}

export function fieldUpdateDocumentFieldsValueDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsValueDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsValueDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsValueDropdown' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDropdownRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeDropdownRequest2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueDropdown$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaDropdownRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsValueDropdown$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDropdownRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeDropdownRequest2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueDropdown$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDropdownRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDropdownRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDropdownRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDropdownRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaDropdownRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaDropdownRequest:
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaDropdownRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaDropdownRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaDropdownRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaDropdownRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaDropdownRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldDropdown$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeDropdownRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldDropdown$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaDropdownRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldDropdown$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldDropdown$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldDropdown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeDropdownRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaDropdownRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldDropdown$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldDropdown$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldDropdown$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldDropdown$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldDropdown$Outbound;
}

export function fieldUpdateDocumentFieldsFieldDropdownToJSON(
  fieldUpdateDocumentFieldsFieldDropdown:
    FieldUpdateDocumentFieldsFieldDropdown,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldDropdown$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldDropdown,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldDropdown' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeCheckboxRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeCheckboxRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeCheckboxRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeCheckboxRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeCheckboxRequest1> =
    FieldUpdateDocumentFieldsTypeCheckboxRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeCheckboxRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeCheckboxRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeCheckboxRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeCheckboxRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeCheckboxRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeCheckboxRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeCheckboxRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeCheckboxRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeCheckboxRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeCheckboxRequest2> =
    FieldUpdateDocumentFieldsTypeCheckboxRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeCheckboxRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeCheckboxRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeCheckboxRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeCheckboxRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeCheckboxRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsValueCheckbox$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsValueCheckbox$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsValueCheckbox$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueCheckbox$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsValueCheckbox
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsValueCheckbox$ {
  /** @deprecated use `FieldUpdateDocumentFieldsValueCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsValueCheckbox$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsValueCheckbox$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueCheckbox$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsValueCheckbox$Outbound;
}

export function fieldUpdateDocumentFieldsValueCheckboxToJSON(
  fieldUpdateDocumentFieldsValueCheckbox:
    FieldUpdateDocumentFieldsValueCheckbox,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsValueCheckbox$outboundSchema.parse(
      fieldUpdateDocumentFieldsValueCheckbox,
    ),
  );
}

export function fieldUpdateDocumentFieldsValueCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsValueCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsValueCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsValueCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeCheckboxRequest2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueCheckbox$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsValueCheckbox$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeCheckboxRequest2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueCheckbox$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaCheckboxRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaCheckboxRequest:
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaCheckboxRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaCheckboxRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaCheckboxRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaCheckboxRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldCheckbox$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeCheckboxRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldCheckbox$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldCheckbox$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldCheckbox$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldCheckbox
> = z.object({
  type: FieldUpdateDocumentFieldsTypeCheckboxRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaCheckboxRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldCheckbox$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldCheckbox$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldCheckbox$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldCheckbox$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldCheckbox$Outbound;
}

export function fieldUpdateDocumentFieldsFieldCheckboxToJSON(
  fieldUpdateDocumentFieldsFieldCheckbox:
    FieldUpdateDocumentFieldsFieldCheckbox,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldCheckbox$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldCheckbox,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeRadioRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeRadioRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeRadioRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeRadioRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeRadioRequest1> =
    FieldUpdateDocumentFieldsTypeRadioRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeRadioRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeRadioRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeRadioRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeRadioRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeRadioRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeRadioRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeRadioRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeRadioRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeRadioRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeRadioRequest2> =
    FieldUpdateDocumentFieldsTypeRadioRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeRadioRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeRadioRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeRadioRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeRadioRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeRadioRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsValueRadio$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsValueRadio$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsValueRadio$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueRadio$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsValueRadio
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsValueRadio$ {
  /** @deprecated use `FieldUpdateDocumentFieldsValueRadio$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsValueRadio$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsValueRadio$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueRadio$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsValueRadio$Outbound;
}

export function fieldUpdateDocumentFieldsValueRadioToJSON(
  fieldUpdateDocumentFieldsValueRadio: FieldUpdateDocumentFieldsValueRadio,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsValueRadio$outboundSchema.parse(
      fieldUpdateDocumentFieldsValueRadio,
    ),
  );
}

export function fieldUpdateDocumentFieldsValueRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsValueRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsValueRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsValueRadio' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaRadioRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaRadioRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeRadioRequest2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueRadio$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaRadioRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsValueRadio$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaRadioRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaRadioRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeRadioRequest2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueRadio$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaRadioRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaRadioRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaRadioRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaRadioRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaRadioRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaRadioRequest:
    FieldUpdateDocumentFieldsFieldMetaRadioRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaRadioRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaRadioRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaRadioRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaRadioRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaRadioRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldRadio$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeRadioRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldRadio$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaRadioRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldRadio$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldRadio$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldRadio
> = z.object({
  type: FieldUpdateDocumentFieldsTypeRadioRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaRadioRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldRadio$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldRadio$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldRadio$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldRadio$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldRadio$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldRadio$Outbound;
}

export function fieldUpdateDocumentFieldsFieldRadioToJSON(
  fieldUpdateDocumentFieldsFieldRadio: FieldUpdateDocumentFieldsFieldRadio,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldRadio$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldRadio,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldRadio' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeNumberRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNumberRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeNumberRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeNumberRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNumberRequest1> =
    FieldUpdateDocumentFieldsTypeNumberRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeNumberRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNumberRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeNumberRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNumberRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeNumberRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeNumberRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNumberRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeNumberRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeNumberRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNumberRequest2> =
    FieldUpdateDocumentFieldsTypeNumberRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeNumberRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNumberRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeNumberRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNumberRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeNumberRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignNumber$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignNumber> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignNumber);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignNumber$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignNumber> =
    FieldUpdateDocumentFieldsTextAlignNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignNumber$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignNumber$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignNumber$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNumberRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNumberRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeNumberRequest2$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignNumber$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaNumberRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNumberRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaNumberRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeNumberRequest2$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignNumber$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaNumberRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNumberRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNumberRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNumberRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaNumberRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaNumberRequest:
    FieldUpdateDocumentFieldsFieldMetaNumberRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaNumberRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaNumberRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaNumberRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaNumberRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaNumberRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldNumber$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeNumberRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldNumber$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaNumberRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldNumber$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldNumber$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldNumber
> = z.object({
  type: FieldUpdateDocumentFieldsTypeNumberRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaNumberRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldNumber$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldNumber$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldNumber$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldNumber$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldNumber$Outbound;
}

export function fieldUpdateDocumentFieldsFieldNumberToJSON(
  fieldUpdateDocumentFieldsFieldNumber: FieldUpdateDocumentFieldsFieldNumber,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldNumber$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldNumber,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldNumberFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldNumber' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeTextRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeTextRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeTextRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeTextRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeTextRequest1> =
    FieldUpdateDocumentFieldsTypeTextRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeTextRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeTextRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeTextRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeTextRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeTextRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeTextRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeTextRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeTextRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeTextRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeTextRequest2> =
    FieldUpdateDocumentFieldsTypeTextRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeTextRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeTextRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeTextRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeTextRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeTextRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignText$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignText> = z.nativeEnum(
    FieldUpdateDocumentFieldsTextAlignText,
  );

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignText$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignText> =
    FieldUpdateDocumentFieldsTextAlignText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignText$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignText$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignText$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignText$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignText$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTextRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaTextRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeTextRequest2$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignText$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaTextRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTextRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaTextRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaTextRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeTextRequest2$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignText$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTextRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTextRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTextRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTextRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTextRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTextRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMetaTextRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaTextRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaTextRequest:
    FieldUpdateDocumentFieldsFieldMetaTextRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaTextRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaTextRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaTextRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaTextRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaTextRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaTextRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldText$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldText,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeTextRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaTextRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldText$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaTextRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldText$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldText$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldText
> = z.object({
  type: FieldUpdateDocumentFieldsTypeTextRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaTextRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldText$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldText$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFieldText$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldText$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldText$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldText$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldText$Outbound;
}

export function fieldUpdateDocumentFieldsFieldTextToJSON(
  fieldUpdateDocumentFieldsFieldText: FieldUpdateDocumentFieldsFieldText,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldText$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldText,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldTextFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldText' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeDateRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDateRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeDateRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeDateRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDateRequest1> =
    FieldUpdateDocumentFieldsTypeDateRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeDateRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDateRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeDateRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDateRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeDateRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeDateRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDateRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeDateRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeDateRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeDateRequest2> =
    FieldUpdateDocumentFieldsTypeDateRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeDateRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDateRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeDateRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeDateRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeDateRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignDate$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignDate> = z.nativeEnum(
    FieldUpdateDocumentFieldsTextAlignDate,
  );

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignDate$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignDate> =
    FieldUpdateDocumentFieldsTextAlignDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignDate$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignDate$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignDate$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignDate$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDateRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDateRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeDateRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignDate$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaDateRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDateRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDateRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaDateRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeDateRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignDate$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDateRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDateRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDateRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDateRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDateRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDateRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMetaDateRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaDateRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaDateRequest:
    FieldUpdateDocumentFieldsFieldMetaDateRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaDateRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaDateRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaDateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaDateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaDateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaDateRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldDate$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldDate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeDateRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaDateRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldDate$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaDateRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldDate$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldDate$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldDate
> = z.object({
  type: FieldUpdateDocumentFieldsTypeDateRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaDateRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldDate$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldDate$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFieldDate$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldDate$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldDate$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldDate$Outbound;
}

export function fieldUpdateDocumentFieldsFieldDateToJSON(
  fieldUpdateDocumentFieldsFieldDate: FieldUpdateDocumentFieldsFieldDate,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldDate$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldDate,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldDateFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldDate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldDate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldDate' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeEmailRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeEmailRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeEmailRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeEmailRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeEmailRequest1> =
    FieldUpdateDocumentFieldsTypeEmailRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeEmailRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeEmailRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeEmailRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeEmailRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeEmailRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeEmailRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeEmailRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeEmailRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeEmailRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeEmailRequest2> =
    FieldUpdateDocumentFieldsTypeEmailRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeEmailRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeEmailRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeEmailRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeEmailRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeEmailRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignEmail$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignEmail> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignEmail);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignEmail$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignEmail> =
    FieldUpdateDocumentFieldsTextAlignEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignEmail$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignEmail$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignEmail$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaEmailRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaEmailRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeEmailRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignEmail$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaEmailRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaEmailRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaEmailRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeEmailRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignEmail$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaEmailRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaEmailRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaEmailRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaEmailRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaEmailRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaEmailRequest:
    FieldUpdateDocumentFieldsFieldMetaEmailRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaEmailRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaEmailRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaEmailRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaEmailRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaEmailRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldEmail$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldEmail,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeEmailRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldEmail$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaEmailRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldEmail$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldEmail$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldEmail
> = z.object({
  type: FieldUpdateDocumentFieldsTypeEmailRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaEmailRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldEmail$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldEmail$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldEmail$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldEmail$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldEmail$Outbound;
}

export function fieldUpdateDocumentFieldsFieldEmailToJSON(
  fieldUpdateDocumentFieldsFieldEmail: FieldUpdateDocumentFieldsFieldEmail,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldEmail$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldEmail,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldEmailFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldEmail' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeNameRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNameRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeNameRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeNameRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNameRequest1> =
    FieldUpdateDocumentFieldsTypeNameRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeNameRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNameRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeNameRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNameRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeNameRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeNameRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNameRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeNameRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeNameRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeNameRequest2> =
    FieldUpdateDocumentFieldsTypeNameRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeNameRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNameRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeNameRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeNameRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeNameRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignName$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignName> = z.nativeEnum(
    FieldUpdateDocumentFieldsTextAlignName,
  );

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignName$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignName> =
    FieldUpdateDocumentFieldsTextAlignName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignName$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignName$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignName$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignName$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignName$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNameRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNameRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeNameRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignName$inboundSchema.optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaNameRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNameRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNameRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaNameRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeNameRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignName$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaNameRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNameRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNameRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNameRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNameRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNameRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMetaNameRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaNameRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaNameRequest:
    FieldUpdateDocumentFieldsFieldMetaNameRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaNameRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaNameRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaNameRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaNameRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaNameRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaNameRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldName$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldName,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeNameRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaNameRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldName$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaNameRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldName$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldName$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldName
> = z.object({
  type: FieldUpdateDocumentFieldsTypeNameRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaNameRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldName$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldName$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFieldName$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldName$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldName$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldName$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldName$Outbound;
}

export function fieldUpdateDocumentFieldsFieldNameToJSON(
  fieldUpdateDocumentFieldsFieldName: FieldUpdateDocumentFieldsFieldName,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldName$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldName,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldNameFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldName, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldName$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldName' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeInitialsRequest1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeInitialsRequest1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeInitialsRequest1);

/** @internal */
export const FieldUpdateDocumentFieldsTypeInitialsRequest1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeInitialsRequest1> =
    FieldUpdateDocumentFieldsTypeInitialsRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeInitialsRequest1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeInitialsRequest1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeInitialsRequest1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeInitialsRequest1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeInitialsRequest1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeInitialsRequest2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeInitialsRequest2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeInitialsRequest2);

/** @internal */
export const FieldUpdateDocumentFieldsTypeInitialsRequest2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeInitialsRequest2> =
    FieldUpdateDocumentFieldsTypeInitialsRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeInitialsRequest2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeInitialsRequest2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeInitialsRequest2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeInitialsRequest2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeInitialsRequest2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignInitials$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignInitials> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignInitials);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignInitials$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignInitials> =
    FieldUpdateDocumentFieldsTextAlignInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignInitials$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignInitials$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignInitials$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaInitialsRequest$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeInitialsRequest2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignInitials$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaInitialsRequest$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaInitialsRequest$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsTypeInitialsRequest2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignInitials$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaInitialsRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaInitialsRequest$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaInitialsRequest$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaInitialsRequest$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaInitialsRequestToJSON(
  fieldUpdateDocumentFieldsFieldMetaInitialsRequest:
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaInitialsRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaInitialsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaInitialsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaInitialsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaInitialsRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldInitials$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldInitials,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeInitialsRequest1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldInitials$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldMetaInitialsRequest$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldInitials$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldInitials$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldInitials
> = z.object({
  type: FieldUpdateDocumentFieldsTypeInitialsRequest1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaInitialsRequest$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldInitials$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldInitials$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldInitials$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldInitials$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldInitials$Outbound;
}

export function fieldUpdateDocumentFieldsFieldInitialsToJSON(
  fieldUpdateDocumentFieldsFieldInitials:
    FieldUpdateDocumentFieldsFieldInitials,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldInitials$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldInitials,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldInitialsFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldInitials, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldInitials$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldInitials' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeFreeSignature$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeFreeSignature> = z
    .nativeEnum(FieldUpdateDocumentFieldsTypeFreeSignature);

/** @internal */
export const FieldUpdateDocumentFieldsTypeFreeSignature$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeFreeSignature> =
    FieldUpdateDocumentFieldsTypeFreeSignature$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeFreeSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeFreeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeFreeSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeFreeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeFreeSignature$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldFreeSignature$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldFreeSignature,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: FieldUpdateDocumentFieldsTypeFreeSignature$inboundSchema,
    id: z.number(),
    pageNumber: z.number().optional(),
    pageX: z.number().optional(),
    pageY: z.number().optional(),
    width: z.number().optional(),
    height: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldFreeSignature$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldFreeSignature$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldFreeSignature$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldFreeSignature
  > = z.object({
    type: FieldUpdateDocumentFieldsTypeFreeSignature$outboundSchema,
    id: z.number(),
    pageNumber: z.number().optional(),
    pageX: z.number().optional(),
    pageY: z.number().optional(),
    width: z.number().optional(),
    height: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldFreeSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldFreeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldFreeSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldFreeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldFreeSignature$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldFreeSignature$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldFreeSignature$Outbound;
}

export function fieldUpdateDocumentFieldsFieldFreeSignatureToJSON(
  fieldUpdateDocumentFieldsFieldFreeSignature:
    FieldUpdateDocumentFieldsFieldFreeSignature,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldFreeSignature$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldFreeSignature,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldFreeSignatureFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldFreeSignature,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldFreeSignature$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldFreeSignature' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeSignature$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeSignature> = z.nativeEnum(
    FieldUpdateDocumentFieldsTypeSignature,
  );

/** @internal */
export const FieldUpdateDocumentFieldsTypeSignature$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeSignature> =
    FieldUpdateDocumentFieldsTypeSignature$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeSignature$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldSignature$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldSignature,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeSignature$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldSignature$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldSignature$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldSignature$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldSignature
> = z.object({
  type: FieldUpdateDocumentFieldsTypeSignature$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldSignature$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldSignature$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldSignature$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldSignature$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldSignature$Outbound;
}

export function fieldUpdateDocumentFieldsFieldSignatureToJSON(
  fieldUpdateDocumentFieldsFieldSignature:
    FieldUpdateDocumentFieldsFieldSignature,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldSignature$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldSignature,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldSignatureFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldSignature,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldSignature$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldSignature' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldUnion$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldsFieldSignature$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldFreeSignature$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldInitials$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldName$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldEmail$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldDate$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldText$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldNumber$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldRadio$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldCheckbox$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldDropdown$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldsFieldUnion$Outbound =
  | FieldUpdateDocumentFieldsFieldSignature$Outbound
  | FieldUpdateDocumentFieldsFieldFreeSignature$Outbound
  | FieldUpdateDocumentFieldsFieldInitials$Outbound
  | FieldUpdateDocumentFieldsFieldName$Outbound
  | FieldUpdateDocumentFieldsFieldEmail$Outbound
  | FieldUpdateDocumentFieldsFieldDate$Outbound
  | FieldUpdateDocumentFieldsFieldText$Outbound
  | FieldUpdateDocumentFieldsFieldNumber$Outbound
  | FieldUpdateDocumentFieldsFieldRadio$Outbound
  | FieldUpdateDocumentFieldsFieldCheckbox$Outbound
  | FieldUpdateDocumentFieldsFieldDropdown$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldsFieldUnion$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldUnion$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldUnion
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldsFieldSignature$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldFreeSignature$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldInitials$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldName$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldEmail$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldDate$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldText$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldNumber$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldRadio$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldCheckbox$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldDropdown$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldUnion$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldUnion$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldUnion$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldUnion$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldUnion$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldUnion$Outbound;
}

export function fieldUpdateDocumentFieldsFieldUnionToJSON(
  fieldUpdateDocumentFieldsFieldUnion: FieldUpdateDocumentFieldsFieldUnion,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldUnion$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldUnion,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldUnionFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldUnion' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsRequest$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  fields: z.array(
    z.union([
      z.lazy(() => FieldUpdateDocumentFieldsFieldSignature$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldFreeSignature$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldInitials$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldName$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldEmail$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldDate$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldText$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldNumber$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldRadio$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldCheckbox$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldDropdown$inboundSchema),
    ]),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldsRequest$Outbound = {
  documentId: number;
  fields: Array<
    | FieldUpdateDocumentFieldsFieldSignature$Outbound
    | FieldUpdateDocumentFieldsFieldFreeSignature$Outbound
    | FieldUpdateDocumentFieldsFieldInitials$Outbound
    | FieldUpdateDocumentFieldsFieldName$Outbound
    | FieldUpdateDocumentFieldsFieldEmail$Outbound
    | FieldUpdateDocumentFieldsFieldDate$Outbound
    | FieldUpdateDocumentFieldsFieldText$Outbound
    | FieldUpdateDocumentFieldsFieldNumber$Outbound
    | FieldUpdateDocumentFieldsFieldRadio$Outbound
    | FieldUpdateDocumentFieldsFieldCheckbox$Outbound
    | FieldUpdateDocumentFieldsFieldDropdown$Outbound
  >;
};

/** @internal */
export const FieldUpdateDocumentFieldsRequest$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsRequest$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsRequest
> = z.object({
  documentId: z.number(),
  fields: z.array(
    z.union([
      z.lazy(() => FieldUpdateDocumentFieldsFieldSignature$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldFreeSignature$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldInitials$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldName$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldEmail$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldDate$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldText$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldNumber$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldRadio$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldCheckbox$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFieldDropdown$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsRequest$ {
  /** @deprecated use `FieldUpdateDocumentFieldsRequest$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsRequest$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsRequest$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsRequest$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsRequest$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsRequest$Outbound;
}

export function fieldUpdateDocumentFieldsRequestToJSON(
  fieldUpdateDocumentFieldsRequest: FieldUpdateDocumentFieldsRequest,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsRequest$outboundSchema.parse(
      fieldUpdateDocumentFieldsRequest,
    ),
  );
}

export function fieldUpdateDocumentFieldsRequestFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsRequest' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsTypeResponse$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeResponse> = z.nativeEnum(
    FieldUpdateDocumentFieldsTypeResponse,
  );

/** @internal */
export const FieldUpdateDocumentFieldsTypeResponse$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTypeResponse> =
    FieldUpdateDocumentFieldsTypeResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTypeResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTypeResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTypeResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTypeResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTypeResponse$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeDropdown> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeDropdown);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeDropdown> =
    FieldUpdateDocumentFieldsFieldMetaTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeDropdown$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeDropdown$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeDropdown$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsValueResponse3$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsValueResponse3$Outbound = {
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsValueResponse3$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueResponse3$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsValueResponse3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsValueResponse3$ {
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse3$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsValueResponse3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsValueResponse3$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse3$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsValueResponse3$Outbound;
}

export function fieldUpdateDocumentFieldsValueResponse3ToJSON(
  fieldUpdateDocumentFieldsValueResponse3:
    FieldUpdateDocumentFieldsValueResponse3,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsValueResponse3$outboundSchema.parse(
      fieldUpdateDocumentFieldsValueResponse3,
    ),
  );
}

export function fieldUpdateDocumentFieldsValueResponse3FromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsValueResponse3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsValueResponse3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsValueResponse3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDropdownResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueResponse3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaDropdownResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsValueResponse3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDropdownResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueResponse3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDropdownResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDropdownResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDropdownResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDropdownResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaDropdownResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaDropdownResponse:
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaDropdownResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaDropdownResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaDropdownResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaDropdownResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaDropdownResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeCheckbox> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeCheckbox);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeCheckbox> =
    FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsValueResponse2$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsValueResponse2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsValueResponse2$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueResponse2$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsValueResponse2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsValueResponse2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsValueResponse2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsValueResponse2$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse2$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsValueResponse2$Outbound;
}

export function fieldUpdateDocumentFieldsValueResponse2ToJSON(
  fieldUpdateDocumentFieldsValueResponse2:
    FieldUpdateDocumentFieldsValueResponse2,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsValueResponse2$outboundSchema.parse(
      fieldUpdateDocumentFieldsValueResponse2,
    ),
  );
}

export function fieldUpdateDocumentFieldsValueResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsValueResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsValueResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsValueResponse2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueResponse2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsValueResponse2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueResponse2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaCheckboxResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaCheckboxResponse:
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaCheckboxResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaCheckboxResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaCheckboxResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaCheckboxResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeRadio> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeRadio);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeRadio> =
    FieldUpdateDocumentFieldsFieldMetaTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeRadio$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeRadio$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeRadio$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsValueResponse1$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsValueResponse1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsValueResponse1$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsValueResponse1$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsValueResponse1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsValueResponse1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsValueResponse1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsValueResponse1$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsValueResponse1$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsValueResponse1$Outbound;
}

export function fieldUpdateDocumentFieldsValueResponse1ToJSON(
  fieldUpdateDocumentFieldsValueResponse1:
    FieldUpdateDocumentFieldsValueResponse1,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsValueResponse1$outboundSchema.parse(
      fieldUpdateDocumentFieldsValueResponse1,
    ),
  );
}

export function fieldUpdateDocumentFieldsValueResponse1FromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsValueResponse1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsValueResponse1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsValueResponse1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaRadioResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaRadioResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueResponse1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaRadioResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsValueResponse1$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaRadioResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaRadioResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaRadioResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsValueResponse1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaRadioResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaRadioResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaRadioResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaRadioResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaRadioResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaRadioResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaRadioResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaRadioResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaRadioResponse:
    FieldUpdateDocumentFieldsFieldMetaRadioResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaRadioResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaRadioResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaRadioResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaRadioResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaRadioResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaRadioResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeNumber> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeNumber);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeNumber> =
    FieldUpdateDocumentFieldsFieldMetaTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeNumber$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeNumber$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeNumber$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse6$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse6> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignResponse6);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse6$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse6> =
    FieldUpdateDocumentFieldsTextAlignResponse6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignResponse6$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse6$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse6$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse6$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse6$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNumberResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNumberResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse6$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaNumberResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNumberResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNumberResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaNumberResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaNumberResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNumberResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNumberResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNumberResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNumberResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNumberResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaNumberResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaNumberResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaNumberResponse:
    FieldUpdateDocumentFieldsFieldMetaNumberResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaNumberResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaNumberResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaNumberResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaNumberResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaNumberResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaNumberResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeText$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeText> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeText);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeText$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeText> =
    FieldUpdateDocumentFieldsFieldMetaTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeText$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeText$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeText$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeText$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeText$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse5$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse5> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignResponse5);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse5$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse5> =
    FieldUpdateDocumentFieldsTextAlignResponse5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignResponse5$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse5$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse5$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse5$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse5$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTextResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaTextResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse5$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaTextResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTextResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaTextResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaTextResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTextResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTextResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTextResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTextResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTextResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTextResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaTextResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaTextResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaTextResponse:
    FieldUpdateDocumentFieldsFieldMetaTextResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaTextResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaTextResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaTextResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaTextResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaTextResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaTextResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeDate> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeDate);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeDate> =
    FieldUpdateDocumentFieldsFieldMetaTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeDate$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeDate$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeDate$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse4$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse4> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignResponse4);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse4$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse4> =
    FieldUpdateDocumentFieldsTextAlignResponse4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignResponse4$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse4$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse4$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse4$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse4$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDateResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDateResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse4$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaDateResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDateResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDateResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaDateResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDateResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDateResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDateResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDateResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDateResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDateResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaDateResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaDateResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaDateResponse:
    FieldUpdateDocumentFieldsFieldMetaDateResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaDateResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaDateResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaDateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaDateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaDateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaDateResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeEmail> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeEmail);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeEmail> =
    FieldUpdateDocumentFieldsFieldMetaTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeEmail$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeEmail$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeEmail$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse3$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse3> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignResponse3);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse3$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse3> =
    FieldUpdateDocumentFieldsTextAlignResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignResponse3$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse3$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse3$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaEmailResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaEmailResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse3$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaEmailResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaEmailResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaEmailResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaEmailResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaEmailResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaEmailResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaEmailResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaEmailResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaEmailResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaEmailResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaEmailResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaEmailResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaEmailResponse:
    FieldUpdateDocumentFieldsFieldMetaEmailResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaEmailResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaEmailResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaEmailResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaEmailResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaEmailResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaEmailResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeName$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeName> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeName);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeName$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeName> =
    FieldUpdateDocumentFieldsFieldMetaTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeName$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeName$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeName$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeName$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeName$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse2$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse2> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignResponse2);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse2$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse2> =
    FieldUpdateDocumentFieldsTextAlignResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignResponse2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse2$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNameResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNameResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse2$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaNameResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaNameResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaNameResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaNameResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaNameResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNameResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNameResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNameResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaNameResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaNameResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaNameResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaNameResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaNameResponse:
    FieldUpdateDocumentFieldsFieldMetaNameResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaNameResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaNameResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaNameResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaNameResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaNameResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaNameResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeInitials> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldMetaTypeInitials);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaTypeInitials> =
    FieldUpdateDocumentFieldsFieldMetaTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaTypeInitials$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeInitials$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaTypeInitials$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse1$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse1> = z
    .nativeEnum(FieldUpdateDocumentFieldsTextAlignResponse1);

/** @internal */
export const FieldUpdateDocumentFieldsTextAlignResponse1$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsTextAlignResponse1> =
    FieldUpdateDocumentFieldsTextAlignResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsTextAlignResponse1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsTextAlignResponse1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsTextAlignResponse1$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaInitialsResponse$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse1$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaInitialsResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaInitialsResponse$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldUpdateDocumentFieldsFieldMetaTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldUpdateDocumentFieldsTextAlignResponse1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaInitialsResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaInitialsResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaInitialsResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaInitialsResponse$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaInitialsResponseToJSON(
  fieldUpdateDocumentFieldsFieldMetaInitialsResponse:
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaInitialsResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaInitialsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaInitialsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaInitialsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaInitialsResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaUnion$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMetaUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$inboundSchema
  ),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaNameResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaEmailResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaDateResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaTextResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaNumberResponse$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaRadioResponse$inboundSchema),
  z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$inboundSchema
  ),
  z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$inboundSchema
  ),
]);

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaUnion$Outbound =
  | FieldUpdateDocumentFieldsFieldMetaInitialsResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaNameResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaEmailResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaDateResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaTextResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaNumberResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaRadioResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$Outbound
  | FieldUpdateDocumentFieldsFieldMetaDropdownResponse$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaUnion$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMetaUnion$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMetaUnion
> = z.union([
  z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaInitialsResponse$outboundSchema
  ),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaNameResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaEmailResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaDateResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaTextResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaNumberResponse$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMetaRadioResponse$outboundSchema),
  z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$outboundSchema
  ),
  z.lazy(() =>
    FieldUpdateDocumentFieldsFieldMetaDropdownResponse$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaUnion$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaUnion$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaUnion$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaUnion$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMetaUnion$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaUnionToJSON(
  fieldUpdateDocumentFieldsFieldMetaUnion:
    FieldUpdateDocumentFieldsFieldMetaUnion,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaUnion$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaUnion,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldResponse$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsTypeResponse$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaInitialsResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaNameResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaEmailResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaDateResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaTextResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaNumberResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaRadioResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaDropdownResponse$inboundSchema
      ),
    ]),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldResponse$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldsFieldMetaInitialsResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaNameResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaEmailResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaDateResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaTextResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaNumberResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaRadioResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$Outbound
    | FieldUpdateDocumentFieldsFieldMetaDropdownResponse$Outbound
    | null;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldResponse$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldResponse$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldResponse
> = z.object({
  type: FieldUpdateDocumentFieldsTypeResponse$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaInitialsResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaNameResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaEmailResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaDateResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaTextResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaNumberResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaRadioResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaCheckboxResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldMetaDropdownResponse$outboundSchema
      ),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldResponse$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldResponse$Outbound;
}

export function fieldUpdateDocumentFieldsFieldResponseToJSON(
  fieldUpdateDocumentFieldsFieldResponse:
    FieldUpdateDocumentFieldsFieldResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldResponseFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldResponse' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsResponse$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  fields: z.array(
    z.lazy(() => FieldUpdateDocumentFieldsFieldResponse$inboundSchema),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldsResponse$Outbound = {
  fields: Array<FieldUpdateDocumentFieldsFieldResponse$Outbound>;
};

/** @internal */
export const FieldUpdateDocumentFieldsResponse$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsResponse$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsResponse
> = z.object({
  fields: z.array(
    z.lazy(() => FieldUpdateDocumentFieldsFieldResponse$outboundSchema),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsResponse$ {
  /** @deprecated use `FieldUpdateDocumentFieldsResponse$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsResponse$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsResponse$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsResponse$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsResponse$Outbound;
}

export function fieldUpdateDocumentFieldsResponseToJSON(
  fieldUpdateDocumentFieldsResponse: FieldUpdateDocumentFieldsResponse,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsResponse$outboundSchema.parse(
      fieldUpdateDocumentFieldsResponse,
    ),
  );
}

export function fieldUpdateDocumentFieldsResponseFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsResponse' from JSON`,
  );
}
