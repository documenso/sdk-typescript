/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type =
  {
    Dropdown: "DROPDOWN",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType =
  {
    Dropdown: "dropdown",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues = {
  value: string;
};

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType;
    values?:
      | Array<FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues>
      | undefined;
    defaultValue?: string | undefined;
  };

export type FieldUpdateDocumentFieldsFields11 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type =
  {
    Checkbox: "CHECKBOX",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType =
  {
    Checkbox: "checkbox",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType;
    values?:
      | Array<FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues>
      | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

export type FieldUpdateDocumentFieldsFields10 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type =
  {
    Radio: "RADIO",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType =
  {
    Radio: "radio",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType;
    values?: Array<FieldUpdateDocumentFieldsFieldsValues> | undefined;
  };

export type FieldUpdateDocumentFieldsFields9 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type =
  {
    Number: "NUMBER",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType =
  {
    Number: "number",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

export type FieldUpdateDocumentFieldsFields8 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type =
  {
    Text: "TEXT",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType =
  {
    Text: "text",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

export type FieldUpdateDocumentFieldsFields7 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type =
  {
    Date: "DATE",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType =
  {
    Date: "date",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType;
    fontSize?: number | undefined;
  };

export type FieldUpdateDocumentFieldsFields6 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type =
  {
    Email: "EMAIL",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType =
  {
    Email: "email",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldsFields5 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type =
  {
    Name: "NAME",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type
  >;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType =
  {
    Name: "name",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType
  >;

export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldsFields4 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType = {
  Initials: "INITIALS",
} as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType =
  ClosedEnum<typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType>;

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType =
  {
    Initials: "initials",
  } as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType
  >;

export type FieldUpdateDocumentFieldsFieldsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldsFields3 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType;
  fieldMeta?: FieldUpdateDocumentFieldsFieldsFieldMeta | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsType = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsType = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsType
>;

export type FieldUpdateDocumentFieldsFields2 = {
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsType;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldsType = {
  Signature: "SIGNATURE",
} as const;
export type FieldUpdateDocumentFieldsFieldsType = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldsType
>;

export type FieldUpdateDocumentFieldsFields1 = {
  type: FieldUpdateDocumentFieldsFieldsType;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export type FieldUpdateDocumentFieldsFields =
  | FieldUpdateDocumentFieldsFields1
  | FieldUpdateDocumentFieldsFields2
  | FieldUpdateDocumentFieldsFields3
  | FieldUpdateDocumentFieldsFields4
  | FieldUpdateDocumentFieldsFields5
  | FieldUpdateDocumentFieldsFields6
  | FieldUpdateDocumentFieldsFields7
  | FieldUpdateDocumentFieldsFields8
  | FieldUpdateDocumentFieldsFields9
  | FieldUpdateDocumentFieldsFields10
  | FieldUpdateDocumentFieldsFields11;

export type FieldUpdateDocumentFieldsRequestBody = {
  documentId: number;
  fields: Array<
    | FieldUpdateDocumentFieldsFields1
    | FieldUpdateDocumentFieldsFields2
    | FieldUpdateDocumentFieldsFields3
    | FieldUpdateDocumentFieldsFields4
    | FieldUpdateDocumentFieldsFields5
    | FieldUpdateDocumentFieldsFields6
    | FieldUpdateDocumentFieldsFields7
    | FieldUpdateDocumentFieldsFields8
    | FieldUpdateDocumentFieldsFields9
    | FieldUpdateDocumentFieldsFields10
    | FieldUpdateDocumentFieldsFields11
  >;
};

export const FieldUpdateDocumentFieldsType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateDocumentFieldsType = ClosedEnum<
  typeof FieldUpdateDocumentFieldsType
>;

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type
  >;

export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues = {
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type;
  values?:
    | Array<FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues>
    | undefined;
  defaultValue?: string | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type
  >;

export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type;
  values?:
    | Array<FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType =
  {
    Radio: "radio",
  } as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType
  >;

export type FieldUpdateDocumentFieldsFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateDocumentFieldsFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType;
  values?: Array<FieldUpdateDocumentFieldsFieldMetaValues> | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType
  >;

export type FieldUpdateDocumentFieldsFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType
  >;

export type FieldUpdateDocumentFieldsFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type =
  {
    Date: "date",
  } as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type
  >;

export type FieldUpdateDocumentFieldsFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType = {
  Email: "email",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType =
  ClosedEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType
  >;

export type FieldUpdateDocumentFieldsFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType = {
  Name: "name",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType
>;

export type FieldUpdateDocumentFieldsFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType;
  fontSize?: number | undefined;
};

export const FieldUpdateDocumentFieldsFieldMetaType = {
  Initials: "initials",
} as const;
export type FieldUpdateDocumentFieldsFieldMetaType = ClosedEnum<
  typeof FieldUpdateDocumentFieldsFieldMetaType
>;

export type FieldUpdateDocumentFieldsFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateDocumentFieldsFieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateDocumentFieldsFieldMeta =
  | FieldUpdateDocumentFieldsFieldMeta1
  | FieldUpdateDocumentFieldsFieldMeta2
  | FieldUpdateDocumentFieldsFieldMeta3
  | FieldUpdateDocumentFieldsFieldMeta4
  | FieldUpdateDocumentFieldsFieldMeta7
  | FieldUpdateDocumentFieldsFieldMeta9
  | FieldUpdateDocumentFieldsFieldMeta5
  | FieldUpdateDocumentFieldsFieldMeta8
  | FieldUpdateDocumentFieldsFieldMeta6;

export type FieldUpdateDocumentFieldsDocumentsFieldsFields = {
  type: FieldUpdateDocumentFieldsType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldsFieldMeta1
    | FieldUpdateDocumentFieldsFieldMeta2
    | FieldUpdateDocumentFieldsFieldMeta3
    | FieldUpdateDocumentFieldsFieldMeta4
    | FieldUpdateDocumentFieldsFieldMeta7
    | FieldUpdateDocumentFieldsFieldMeta9
    | FieldUpdateDocumentFieldsFieldMeta5
    | FieldUpdateDocumentFieldsFieldMeta8
    | FieldUpdateDocumentFieldsFieldMeta6
    | null;
};

/**
 * Successful response
 */
export type FieldUpdateDocumentFieldsResponseBody = {
  fields: Array<FieldUpdateDocumentFieldsDocumentsFieldsFields>;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValuesToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$outboundSchema
      .parse(fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$inboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<
        FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$Outbound
      >
      | undefined;
    defaultValue?: string | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields11$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields11$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields11$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields11$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields11
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody11FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields11$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields11$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields11$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields11$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFields11$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields11$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields11$Outbound;
}

export function fieldUpdateDocumentFieldsFields11ToJSON(
  fieldUpdateDocumentFieldsFields11: FieldUpdateDocumentFieldsFields11,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields11$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields11,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields11FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields11' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsValuesToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsValues:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldsDocumentsFieldsValues,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$inboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$Outbound>
      | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateDocumentFieldsFieldsDocumentsFieldsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields10$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields10$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields10$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields10$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields10
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody10FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields10$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields10$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields10$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields10$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFields10$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields10$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields10$Outbound;
}

export function fieldUpdateDocumentFieldsFields10ToJSON(
  fieldUpdateDocumentFieldsFields10: FieldUpdateDocumentFieldsFields10,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields10$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields10,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields10FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields10' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsValues$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldsValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldsValues$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldsValues$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldsValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsValues$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldsValues$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsValuesToJSON(
  fieldUpdateDocumentFieldsFieldsValues: FieldUpdateDocumentFieldsFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsValues$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldsValues,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldsValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsFieldsValues$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?: Array<FieldUpdateDocumentFieldsFieldsValues$Outbound> | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateDocumentFieldsFieldsValues$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields9$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields9$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields9$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields9$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields9
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody9FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields9$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields9$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields9$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields9$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields9$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields9$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields9$Outbound;
}

export function fieldUpdateDocumentFieldsFields9ToJSON(
  fieldUpdateDocumentFieldsFields9: FieldUpdateDocumentFieldsFields9,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields9$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields9,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields9FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields9' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields8$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields8$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields8$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields8$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields8
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody8FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields8$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields8$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields8$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields8$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields8$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields8$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields8$Outbound;
}

export function fieldUpdateDocumentFieldsFields8ToJSON(
  fieldUpdateDocumentFieldsFields8: FieldUpdateDocumentFieldsFields8,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields8$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields8,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields8FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields8' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields7$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields7$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields7$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields7$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields7
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody7FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields7$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields7$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields7$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields7$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields7$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields7$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields7$Outbound;
}

export function fieldUpdateDocumentFieldsFields7ToJSON(
  fieldUpdateDocumentFieldsFields7: FieldUpdateDocumentFieldsFields7,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields7$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields7,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields7FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields7' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema
      .parse(
        fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta,
      ),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields6$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields6$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields6$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields6$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields6
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody6Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields6$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields6$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields6$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields6$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields6$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields6$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields6$Outbound;
}

export function fieldUpdateDocumentFieldsFields6ToJSON(
  fieldUpdateDocumentFieldsFields6: FieldUpdateDocumentFieldsFields6,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields6$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields6,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields6FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields6' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$outboundSchema
      .parse(fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields5$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields5$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields5$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields5$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields5
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody5Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields5$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields5$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields5$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields5$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields5$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields5$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields5$Outbound;
}

export function fieldUpdateDocumentFieldsFields5ToJSON(
  fieldUpdateDocumentFieldsFields5: FieldUpdateDocumentFieldsFields5,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields5$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields5,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields5FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields5' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$outboundSchema
      .parse(fieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta),
  );
}

export function fieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields4$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields4$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields4$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields4$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields4
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBody4Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields4$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields4$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields4$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields4$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields4$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields4$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields4$Outbound;
}

export function fieldUpdateDocumentFieldsFields4ToJSON(
  fieldUpdateDocumentFieldsFields4: FieldUpdateDocumentFieldsFields4,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields4$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields4,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields4FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields4' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType
  > = z.nativeEnum(FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType);

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType
  > = FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType
  > =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsFieldMeta$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldsFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldsFieldMeta$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldsFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldsFieldMeta
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestRequestBodyType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsFieldMeta$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldsFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsFieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldsFieldMeta:
    FieldUpdateDocumentFieldsFieldsFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldsFieldMeta$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldsFieldMeta,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldsFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields3$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields3$Outbound = {
  type: string;
  fieldMeta?: FieldUpdateDocumentFieldsFieldsFieldMeta$Outbound | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields3$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields3$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields3
> = z.object({
  type:
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsRequestType$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateDocumentFieldsFieldsFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields3$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields3$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields3$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields3$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields3$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields3$Outbound;
}

export function fieldUpdateDocumentFieldsFields3ToJSON(
  fieldUpdateDocumentFieldsFields3: FieldUpdateDocumentFieldsFields3,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields3$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields3,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsType> = z
    .nativeEnum(FieldUpdateDocumentFieldsFieldsDocumentsFieldsType);

/** @internal */
export const FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldsDocumentsFieldsType> =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFields2$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields2$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields2$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields2$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields2
> = z.object({
  type: FieldUpdateDocumentFieldsFieldsDocumentsFieldsType$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields2$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields2$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields2$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields2$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields2$Outbound;
}

export function fieldUpdateDocumentFieldsFields2ToJSON(
  fieldUpdateDocumentFieldsFields2: FieldUpdateDocumentFieldsFields2,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields2$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields2,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldsType$inboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldsFieldsType
> = z.nativeEnum(FieldUpdateDocumentFieldsFieldsType);

/** @internal */
export const FieldUpdateDocumentFieldsFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldsType> =
    FieldUpdateDocumentFieldsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFields1$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateDocumentFieldsFieldsType$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFields1$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFields1$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields1$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields1
> = z.object({
  type: FieldUpdateDocumentFieldsFieldsType$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields1$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields1$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields1$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields1$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields1$Outbound;
}

export function fieldUpdateDocumentFieldsFields1ToJSON(
  fieldUpdateDocumentFieldsFields1: FieldUpdateDocumentFieldsFields1,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields1$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields1,
    ),
  );
}

export function fieldUpdateDocumentFieldsFields1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFields$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldsFields1$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields2$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields3$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields4$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields5$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields6$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields7$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields8$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields9$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields10$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields11$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldsFields$Outbound =
  | FieldUpdateDocumentFieldsFields1$Outbound
  | FieldUpdateDocumentFieldsFields2$Outbound
  | FieldUpdateDocumentFieldsFields3$Outbound
  | FieldUpdateDocumentFieldsFields4$Outbound
  | FieldUpdateDocumentFieldsFields5$Outbound
  | FieldUpdateDocumentFieldsFields6$Outbound
  | FieldUpdateDocumentFieldsFields7$Outbound
  | FieldUpdateDocumentFieldsFields8$Outbound
  | FieldUpdateDocumentFieldsFields9$Outbound
  | FieldUpdateDocumentFieldsFields10$Outbound
  | FieldUpdateDocumentFieldsFields11$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldsFields$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFields$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFields
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldsFields1$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields2$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields3$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields4$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields5$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields6$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields7$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields8$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields9$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields10$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFields11$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFields$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFields$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFields$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsFields$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFields$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFields$Outbound;
}

export function fieldUpdateDocumentFieldsFieldsToJSON(
  fieldUpdateDocumentFieldsFields: FieldUpdateDocumentFieldsFields,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFields$outboundSchema.parse(
      fieldUpdateDocumentFieldsFields,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldsFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFields, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateDocumentFieldsFields$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFields' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsRequestBody$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  fields: z.array(
    z.union([
      z.lazy(() => FieldUpdateDocumentFieldsFields1$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields2$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields3$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields4$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields5$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields6$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields7$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields8$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields9$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields10$inboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields11$inboundSchema),
    ]),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldsRequestBody$Outbound = {
  documentId: number;
  fields: Array<
    | FieldUpdateDocumentFieldsFields1$Outbound
    | FieldUpdateDocumentFieldsFields2$Outbound
    | FieldUpdateDocumentFieldsFields3$Outbound
    | FieldUpdateDocumentFieldsFields4$Outbound
    | FieldUpdateDocumentFieldsFields5$Outbound
    | FieldUpdateDocumentFieldsFields6$Outbound
    | FieldUpdateDocumentFieldsFields7$Outbound
    | FieldUpdateDocumentFieldsFields8$Outbound
    | FieldUpdateDocumentFieldsFields9$Outbound
    | FieldUpdateDocumentFieldsFields10$Outbound
    | FieldUpdateDocumentFieldsFields11$Outbound
  >;
};

/** @internal */
export const FieldUpdateDocumentFieldsRequestBody$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsRequestBody$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsRequestBody
> = z.object({
  documentId: z.number(),
  fields: z.array(
    z.union([
      z.lazy(() => FieldUpdateDocumentFieldsFields1$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields2$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields3$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields4$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields5$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields6$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields7$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields8$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields9$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields10$outboundSchema),
      z.lazy(() => FieldUpdateDocumentFieldsFields11$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsRequestBody$ {
  /** @deprecated use `FieldUpdateDocumentFieldsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsRequestBody$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsRequestBody$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsRequestBody$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsRequestBody$Outbound;
}

export function fieldUpdateDocumentFieldsRequestBodyToJSON(
  fieldUpdateDocumentFieldsRequestBody: FieldUpdateDocumentFieldsRequestBody,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsRequestBody$outboundSchema.parse(
      fieldUpdateDocumentFieldsRequestBody,
    ),
  );
}

export function fieldUpdateDocumentFieldsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsType$inboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldsType
> = z.nativeEnum(FieldUpdateDocumentFieldsType);

/** @internal */
export const FieldUpdateDocumentFieldsType$outboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateDocumentFieldsType
> = FieldUpdateDocumentFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsType$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsType$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateDocumentFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValuesToJSON(
  fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$outboundSchema
      .parse(fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta9$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta9$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta9$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta9
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields9Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseValues$outboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta9$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta9$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta9$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta9$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta9$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta9ToJSON(
  fieldUpdateDocumentFieldsFieldMeta9: FieldUpdateDocumentFieldsFieldMeta9,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta9$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta9,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta9' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValuesToJSON(
  fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$outboundSchema
      .parse(fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta8$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$inboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$Outbound>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta8$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta8$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta8
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFields8Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsValues$outboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta8$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta8$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta8$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta8$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta8$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta8ToJSON(
  fieldUpdateDocumentFieldsFieldMeta8: FieldUpdateDocumentFieldsFieldMeta8,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta8$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta8,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta8' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaValues$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMetaValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaValues$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMetaValues$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMetaValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaValues$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaValues$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaValues$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaValues$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMetaValues$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaValuesToJSON(
  fieldUpdateDocumentFieldsFieldMetaValues:
    FieldUpdateDocumentFieldsFieldMetaValues,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMetaValues$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMetaValues,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta7$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$inboundSchema,
  values: z.array(
    z.lazy(() => FieldUpdateDocumentFieldsFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateDocumentFieldsFieldMetaValues$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta7$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta7$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta7
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyFieldsType$outboundSchema,
  values: z.array(
    z.lazy(() => FieldUpdateDocumentFieldsFieldMetaValues$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta7$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta7$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta7$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta7$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta7$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta7ToJSON(
  fieldUpdateDocumentFieldsFieldMeta7: FieldUpdateDocumentFieldsFieldMeta7,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta7$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta7,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta7' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta6$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta6$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta6$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta6
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta6$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta6$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta6$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta6$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta6$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta6ToJSON(
  fieldUpdateDocumentFieldsFieldMeta6: FieldUpdateDocumentFieldsFieldMeta6,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta6$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta6,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta6' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta5$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta5$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta5$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta5
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200ApplicationJSONType$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta5$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta5$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta5$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta5$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta5$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta5ToJSON(
  fieldUpdateDocumentFieldsFieldMeta5: FieldUpdateDocumentFieldsFieldMeta5,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta5$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta5,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta5' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta4$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta4$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta4$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta4
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponse200Type$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta4$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta4$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta4$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta4$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta4$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta4ToJSON(
  fieldUpdateDocumentFieldsFieldMeta4: FieldUpdateDocumentFieldsFieldMeta4,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta4$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta4,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta4' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType
  > = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType
  > =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta3$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta3$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta3$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta3
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsResponseType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta3$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta3$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta3$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta3$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta3$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta3ToJSON(
  fieldUpdateDocumentFieldsFieldMeta3: FieldUpdateDocumentFieldsFieldMeta3,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta3$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta3,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType
  > = z.nativeEnum(FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType);

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType
  > = FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta2$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta2$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta2$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta2
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldsFieldMetaDocumentsFieldsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta2$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta2$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta2$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta2$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta2$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta2ToJSON(
  fieldUpdateDocumentFieldsFieldMeta2: FieldUpdateDocumentFieldsFieldMeta2,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta2$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta2,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaType> = z.nativeEnum(
    FieldUpdateDocumentFieldsFieldMetaType,
  );

/** @internal */
export const FieldUpdateDocumentFieldsFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateDocumentFieldsFieldMetaType> =
    FieldUpdateDocumentFieldsFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMetaType$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta1$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldsFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta1$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta1$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta1
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateDocumentFieldsFieldMetaType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta1$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsFieldMeta1$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta1$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta1$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta1$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMeta1ToJSON(
  fieldUpdateDocumentFieldsFieldMeta1: FieldUpdateDocumentFieldsFieldMeta1,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta1$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta1,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta1$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta2$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta3$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta4$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta7$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta9$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta5$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta8$inboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta6$inboundSchema),
]);

/** @internal */
export type FieldUpdateDocumentFieldsFieldMeta$Outbound =
  | FieldUpdateDocumentFieldsFieldMeta1$Outbound
  | FieldUpdateDocumentFieldsFieldMeta2$Outbound
  | FieldUpdateDocumentFieldsFieldMeta3$Outbound
  | FieldUpdateDocumentFieldsFieldMeta4$Outbound
  | FieldUpdateDocumentFieldsFieldMeta7$Outbound
  | FieldUpdateDocumentFieldsFieldMeta9$Outbound
  | FieldUpdateDocumentFieldsFieldMeta5$Outbound
  | FieldUpdateDocumentFieldsFieldMeta8$Outbound
  | FieldUpdateDocumentFieldsFieldMeta6$Outbound;

/** @internal */
export const FieldUpdateDocumentFieldsFieldMeta$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsFieldMeta
> = z.union([
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta1$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta2$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta3$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta4$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta7$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta9$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta5$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta8$outboundSchema),
  z.lazy(() => FieldUpdateDocumentFieldsFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsFieldMeta$ {
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateDocumentFieldsFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsFieldMeta$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsFieldMeta$Outbound;
}

export function fieldUpdateDocumentFieldsFieldMetaToJSON(
  fieldUpdateDocumentFieldsFieldMeta: FieldUpdateDocumentFieldsFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsFieldMeta$outboundSchema.parse(
      fieldUpdateDocumentFieldsFieldMeta,
    ),
  );
}

export function fieldUpdateDocumentFieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsDocumentsFieldsFields$inboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsDocumentsFieldsFields,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: FieldUpdateDocumentFieldsType$inboundSchema,
    id: z.number().int(),
    secondaryId: z.string(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    recipientId: z.number().int(),
    page: z.number(),
    positionX: z.any().optional(),
    positionY: z.any().optional(),
    width: z.any().optional(),
    height: z.any().optional(),
    customText: z.string(),
    inserted: z.boolean(),
    fieldMeta: z.nullable(
      z.union([
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta1$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta2$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta3$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta4$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta7$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta9$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta5$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta8$inboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta6$inboundSchema),
      ]),
    ),
  });

/** @internal */
export type FieldUpdateDocumentFieldsDocumentsFieldsFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateDocumentFieldsFieldMeta1$Outbound
    | FieldUpdateDocumentFieldsFieldMeta2$Outbound
    | FieldUpdateDocumentFieldsFieldMeta3$Outbound
    | FieldUpdateDocumentFieldsFieldMeta4$Outbound
    | FieldUpdateDocumentFieldsFieldMeta7$Outbound
    | FieldUpdateDocumentFieldsFieldMeta9$Outbound
    | FieldUpdateDocumentFieldsFieldMeta5$Outbound
    | FieldUpdateDocumentFieldsFieldMeta8$Outbound
    | FieldUpdateDocumentFieldsFieldMeta6$Outbound
    | null;
};

/** @internal */
export const FieldUpdateDocumentFieldsDocumentsFieldsFields$outboundSchema:
  z.ZodType<
    FieldUpdateDocumentFieldsDocumentsFieldsFields$Outbound,
    z.ZodTypeDef,
    FieldUpdateDocumentFieldsDocumentsFieldsFields
  > = z.object({
    type: FieldUpdateDocumentFieldsType$outboundSchema,
    id: z.number().int(),
    secondaryId: z.string(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    recipientId: z.number().int(),
    page: z.number(),
    positionX: z.any().optional(),
    positionY: z.any().optional(),
    width: z.any().optional(),
    height: z.any().optional(),
    customText: z.string(),
    inserted: z.boolean(),
    fieldMeta: z.nullable(
      z.union([
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta1$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta2$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta3$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta4$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta7$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta9$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta5$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta8$outboundSchema),
        z.lazy(() => FieldUpdateDocumentFieldsFieldMeta6$outboundSchema),
      ]),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsDocumentsFieldsFields$ {
  /** @deprecated use `FieldUpdateDocumentFieldsDocumentsFieldsFields$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsDocumentsFieldsFields$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsDocumentsFieldsFields$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsDocumentsFieldsFields$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsDocumentsFieldsFields$Outbound` instead. */
  export type Outbound =
    FieldUpdateDocumentFieldsDocumentsFieldsFields$Outbound;
}

export function fieldUpdateDocumentFieldsDocumentsFieldsFieldsToJSON(
  fieldUpdateDocumentFieldsDocumentsFieldsFields:
    FieldUpdateDocumentFieldsDocumentsFieldsFields,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsDocumentsFieldsFields$outboundSchema.parse(
      fieldUpdateDocumentFieldsDocumentsFieldsFields,
    ),
  );
}

export function fieldUpdateDocumentFieldsDocumentsFieldsFieldsFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateDocumentFieldsDocumentsFieldsFields,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsDocumentsFieldsFields$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateDocumentFieldsDocumentsFieldsFields' from JSON`,
  );
}

/** @internal */
export const FieldUpdateDocumentFieldsResponseBody$inboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  fields: z.array(
    z.lazy(() => FieldUpdateDocumentFieldsDocumentsFieldsFields$inboundSchema),
  ),
});

/** @internal */
export type FieldUpdateDocumentFieldsResponseBody$Outbound = {
  fields: Array<FieldUpdateDocumentFieldsDocumentsFieldsFields$Outbound>;
};

/** @internal */
export const FieldUpdateDocumentFieldsResponseBody$outboundSchema: z.ZodType<
  FieldUpdateDocumentFieldsResponseBody$Outbound,
  z.ZodTypeDef,
  FieldUpdateDocumentFieldsResponseBody
> = z.object({
  fields: z.array(
    z.lazy(() => FieldUpdateDocumentFieldsDocumentsFieldsFields$outboundSchema),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateDocumentFieldsResponseBody$ {
  /** @deprecated use `FieldUpdateDocumentFieldsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateDocumentFieldsResponseBody$inboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateDocumentFieldsResponseBody$outboundSchema;
  /** @deprecated use `FieldUpdateDocumentFieldsResponseBody$Outbound` instead. */
  export type Outbound = FieldUpdateDocumentFieldsResponseBody$Outbound;
}

export function fieldUpdateDocumentFieldsResponseBodyToJSON(
  fieldUpdateDocumentFieldsResponseBody: FieldUpdateDocumentFieldsResponseBody,
): string {
  return JSON.stringify(
    FieldUpdateDocumentFieldsResponseBody$outboundSchema.parse(
      fieldUpdateDocumentFieldsResponseBody,
    ),
  );
}

export function fieldUpdateDocumentFieldsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateDocumentFieldsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateDocumentFieldsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateDocumentFieldsResponseBody' from JSON`,
  );
}
