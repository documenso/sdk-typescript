/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type =
  {
    Dropdown: "DROPDOWN",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType =
  {
    Dropdown: "dropdown",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues = {
  value: string;
};

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType;
    values?:
      | Array<FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues>
      | undefined;
    defaultValue?: string | undefined;
  };

export type FieldUpdateTemplateFieldField11 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type =
  {
    Checkbox: "CHECKBOX",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType =
  {
    Checkbox: "checkbox",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType;
    values?:
      | Array<FieldUpdateTemplateFieldFieldTemplatesFieldsValues>
      | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

export type FieldUpdateTemplateFieldField10 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type =
  {
    Radio: "RADIO",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType =
  {
    Radio: "radio",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType;
    values?: Array<FieldUpdateTemplateFieldFieldValues> | undefined;
  };

export type FieldUpdateTemplateFieldField9 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type =
  {
    Number: "NUMBER",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType =
  {
    Number: "number",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

export type FieldUpdateTemplateFieldField8 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type =
  {
    Text: "TEXT",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType =
  {
    Text: "text",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

export type FieldUpdateTemplateFieldField7 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type =
  {
    Date: "DATE",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType =
  {
    Date: "date",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType;
    fontSize?: number | undefined;
  };

export type FieldUpdateTemplateFieldField6 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type =
  {
    Email: "EMAIL",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType =
  {
    Email: "email",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateTemplateFieldField5 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta
    | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type =
  {
    Name: "NAME",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type
  >;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType =
  {
    Name: "name",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType
  >;

export type FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateTemplateFieldField4 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type;
  fieldMeta?: FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType = {
  Initials: "INITIALS",
} as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType =
  ClosedEnum<typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType>;

export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType =
  {
    Initials: "initials",
  } as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType
  >;

export type FieldUpdateTemplateFieldFieldFieldMeta = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType;
  fontSize?: number | undefined;
};

export type FieldUpdateTemplateFieldField3 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType;
  fieldMeta?: FieldUpdateTemplateFieldFieldFieldMeta | undefined;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldTemplatesFieldsType = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldUpdateTemplateFieldFieldTemplatesFieldsType = ClosedEnum<
  typeof FieldUpdateTemplateFieldFieldTemplatesFieldsType
>;

export type FieldUpdateTemplateFieldField2 = {
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsType;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldType = {
  Signature: "SIGNATURE",
} as const;
export type FieldUpdateTemplateFieldFieldType = ClosedEnum<
  typeof FieldUpdateTemplateFieldFieldType
>;

export type FieldUpdateTemplateFieldField1 = {
  type: FieldUpdateTemplateFieldFieldType;
  /**
   * The ID of the field to update.
   */
  id: number;
  /**
   * The page number the field will be on.
   */
  pageNumber?: number | undefined;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX?: number | undefined;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY?: number | undefined;
  /**
   * The width of the field.
   */
  width?: number | undefined;
  /**
   * The height of the field.
   */
  height?: number | undefined;
};

export type FieldUpdateTemplateFieldField =
  | FieldUpdateTemplateFieldField1
  | FieldUpdateTemplateFieldField2
  | FieldUpdateTemplateFieldField3
  | FieldUpdateTemplateFieldField4
  | FieldUpdateTemplateFieldField5
  | FieldUpdateTemplateFieldField6
  | FieldUpdateTemplateFieldField7
  | FieldUpdateTemplateFieldField8
  | FieldUpdateTemplateFieldField9
  | FieldUpdateTemplateFieldField10
  | FieldUpdateTemplateFieldField11;

export type FieldUpdateTemplateFieldRequestBody = {
  templateId: number;
  field:
    | FieldUpdateTemplateFieldField1
    | FieldUpdateTemplateFieldField2
    | FieldUpdateTemplateFieldField3
    | FieldUpdateTemplateFieldField4
    | FieldUpdateTemplateFieldField5
    | FieldUpdateTemplateFieldField6
    | FieldUpdateTemplateFieldField7
    | FieldUpdateTemplateFieldField8
    | FieldUpdateTemplateFieldField9
    | FieldUpdateTemplateFieldField10
    | FieldUpdateTemplateFieldField11;
};

export const FieldUpdateTemplateFieldType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldUpdateTemplateFieldType = ClosedEnum<
  typeof FieldUpdateTemplateFieldType
>;

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type
  >;

export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues = {
  value: string;
};

export type FieldUpdateTemplateFieldFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type;
  values?:
    | Array<FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues>
    | undefined;
  defaultValue?: string | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type =
  {
    Checkbox: "checkbox",
  } as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type
  >;

export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateTemplateFieldFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type;
  values?:
    | Array<FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type =
  {
    Radio: "radio",
  } as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type
  >;

export type FieldUpdateTemplateFieldFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldUpdateTemplateFieldFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type;
  values?: Array<FieldUpdateTemplateFieldFieldMetaValues> | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType
  >;

export type FieldUpdateTemplateFieldFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType
  >;

export type FieldUpdateTemplateFieldFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type = {
  Date: "date",
} as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type
  >;

export type FieldUpdateTemplateFieldFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type;
  fontSize?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType = {
  Email: "email",
} as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType =
  ClosedEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType
  >;

export type FieldUpdateTemplateFieldFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType;
  fontSize?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType = {
  Name: "name",
} as const;
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType = ClosedEnum<
  typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType
>;

export type FieldUpdateTemplateFieldFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType;
  fontSize?: number | undefined;
};

export const FieldUpdateTemplateFieldFieldMetaType = {
  Initials: "initials",
} as const;
export type FieldUpdateTemplateFieldFieldMetaType = ClosedEnum<
  typeof FieldUpdateTemplateFieldFieldMetaType
>;

export type FieldUpdateTemplateFieldFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldUpdateTemplateFieldFieldMetaType;
  fontSize?: number | undefined;
};

export type FieldUpdateTemplateFieldFieldMeta =
  | FieldUpdateTemplateFieldFieldMeta1
  | FieldUpdateTemplateFieldFieldMeta2
  | FieldUpdateTemplateFieldFieldMeta3
  | FieldUpdateTemplateFieldFieldMeta4
  | FieldUpdateTemplateFieldFieldMeta7
  | FieldUpdateTemplateFieldFieldMeta9
  | FieldUpdateTemplateFieldFieldMeta5
  | FieldUpdateTemplateFieldFieldMeta8
  | FieldUpdateTemplateFieldFieldMeta6;

/**
 * Successful response
 */
export type FieldUpdateTemplateFieldResponseBody = {
  type: FieldUpdateTemplateFieldType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateTemplateFieldFieldMeta1
    | FieldUpdateTemplateFieldFieldMeta2
    | FieldUpdateTemplateFieldFieldMeta3
    | FieldUpdateTemplateFieldFieldMeta4
    | FieldUpdateTemplateFieldFieldMeta7
    | FieldUpdateTemplateFieldFieldMeta9
    | FieldUpdateTemplateFieldFieldMeta5
    | FieldUpdateTemplateFieldFieldMeta8
    | FieldUpdateTemplateFieldFieldMeta6
    | null;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestValuesToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$outboundSchema
      .parse(fieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$inboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<
        FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$Outbound
      >
      | undefined;
    defaultValue?: string | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateTemplateFieldFieldTemplatesFieldsRequestValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$outboundSchema
      .parse(
        fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta,
      ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField11$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField11$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField11$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField11$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField11
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody11FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField11$ {
  /** @deprecated use `FieldUpdateTemplateFieldField11$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField11$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField11$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField11$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField11$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField11$Outbound;
}

export function fieldUpdateTemplateFieldField11ToJSON(
  fieldUpdateTemplateFieldField11: FieldUpdateTemplateFieldField11,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField11$outboundSchema.parse(
      fieldUpdateTemplateFieldField11,
    ),
  );
}

export function fieldUpdateTemplateFieldField11FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField11' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsValues$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsValues$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsValues$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsValuesToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsValues:
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsValues$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldTemplatesFieldsValues,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateTemplateFieldFieldTemplatesFieldsValues$inboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?:
      | Array<FieldUpdateTemplateFieldFieldTemplatesFieldsValues$Outbound>
      | undefined;
    validationRule?: string | undefined;
    validationLength?: number | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        FieldUpdateTemplateFieldFieldTemplatesFieldsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$outboundSchema
      .parse(
        fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta,
      ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField10$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField10$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField10$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField10$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField10
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody10FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField10$ {
  /** @deprecated use `FieldUpdateTemplateFieldField10$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField10$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField10$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField10$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField10$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField10$Outbound;
}

export function fieldUpdateTemplateFieldField10ToJSON(
  fieldUpdateTemplateFieldField10: FieldUpdateTemplateFieldField10,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField10$outboundSchema.parse(
      fieldUpdateTemplateFieldField10,
    ),
  );
}

export function fieldUpdateTemplateFieldField10FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField10' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldValues$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldValues$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldValues$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldValues$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldValues$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldValues$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldValues$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldValues$Outbound;
}

export function fieldUpdateTemplateFieldFieldValuesToJSON(
  fieldUpdateTemplateFieldFieldValues: FieldUpdateTemplateFieldFieldValues,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldValues$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldValues,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldValuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$inboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateTemplateFieldFieldValues$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    values?: Array<FieldUpdateTemplateFieldFieldValues$Outbound> | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaType$outboundSchema,
    values: z.array(
      z.lazy(() => FieldUpdateTemplateFieldFieldValues$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$outboundSchema
      .parse(
        fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta,
      ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField9$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField9$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField9$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField9$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField9
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody9FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField9$ {
  /** @deprecated use `FieldUpdateTemplateFieldField9$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField9$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField9$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField9$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField9$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField9$Outbound;
}

export function fieldUpdateTemplateFieldField9ToJSON(
  fieldUpdateTemplateFieldField9: FieldUpdateTemplateFieldField9,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField9$outboundSchema.parse(
      fieldUpdateTemplateFieldField9,
    ),
  );
}

export function fieldUpdateTemplateFieldField9FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField9' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    numberFormat?: string | undefined;
    value?: string | undefined;
    minValue?: number | undefined;
    maxValue?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$outboundSchema
      .parse(
        fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta,
      ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField8$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField8$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField8$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField8$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField8
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody8FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField8$ {
  /** @deprecated use `FieldUpdateTemplateFieldField8$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField8$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField8$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField8$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField8$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField8$Outbound;
}

export function fieldUpdateTemplateFieldField8ToJSON(
  fieldUpdateTemplateFieldField8: FieldUpdateTemplateFieldField8,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField8$outboundSchema.parse(
      fieldUpdateTemplateFieldField8,
    ),
  );
}

export function fieldUpdateTemplateFieldField8FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField8' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    text?: string | undefined;
    characterLimit?: number | undefined;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$outboundSchema
      .parse(
        fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta,
      ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField7$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField7$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField7$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField7$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField7
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody7FieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField7$ {
  /** @deprecated use `FieldUpdateTemplateFieldField7$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField7$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField7$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField7$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField7$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField7$Outbound;
}

export function fieldUpdateTemplateFieldField7ToJSON(
  fieldUpdateTemplateFieldField7: FieldUpdateTemplateFieldField7,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField7$outboundSchema.parse(
      fieldUpdateTemplateFieldField7,
    ),
  );
}

export function fieldUpdateTemplateFieldField7FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField7' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$outboundSchema
      .parse(
        fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta,
      ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField6$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField6$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField6$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField6$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField6
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody6Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField6$ {
  /** @deprecated use `FieldUpdateTemplateFieldField6$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField6$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField6$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField6$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField6$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField6$Outbound;
}

export function fieldUpdateTemplateFieldField6ToJSON(
  fieldUpdateTemplateFieldField6: FieldUpdateTemplateFieldField6,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField6$outboundSchema.parse(
      fieldUpdateTemplateFieldField6,
    ),
  );
}

export function fieldUpdateTemplateFieldField6FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField6' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$Outbound =
  {
    label?: string | undefined;
    placeholder?: string | undefined;
    required?: boolean | undefined;
    readOnly?: boolean | undefined;
    type: string;
    fontSize?: number | undefined;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$outboundSchema
      .parse(fieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField5$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField5$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField5$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField5$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField5
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody5Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField5$ {
  /** @deprecated use `FieldUpdateTemplateFieldField5$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField5$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField5$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField5$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField5$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField5$Outbound;
}

export function fieldUpdateTemplateFieldField5ToJSON(
  fieldUpdateTemplateFieldField5: FieldUpdateTemplateFieldField5,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField5$outboundSchema.parse(
      fieldUpdateTemplateFieldField5,
    ),
  );
}

export function fieldUpdateTemplateFieldField5FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField5' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4FieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsFieldMetaToJSON(
  fieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta:
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldTemplatesFieldsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField4$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$inboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField4$Outbound = {
  type: string;
  fieldMeta?:
    | FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$Outbound
    | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField4$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField4$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField4
> = z.object({
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBody4Type$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldUpdateTemplateFieldFieldTemplatesFieldsFieldMeta$outboundSchema
  ).optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField4$ {
  /** @deprecated use `FieldUpdateTemplateFieldField4$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField4$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField4$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField4$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField4$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField4$Outbound;
}

export function fieldUpdateTemplateFieldField4ToJSON(
  fieldUpdateTemplateFieldField4: FieldUpdateTemplateFieldField4,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField4$outboundSchema.parse(
      fieldUpdateTemplateFieldField4,
    ),
  );
}

export function fieldUpdateTemplateFieldField4FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField4' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType
  > = z.nativeEnum(FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType);

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType
  > = FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType
  > =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldFieldMeta$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldFieldMeta$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldFieldMeta$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldFieldMeta
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldTemplatesFieldsRequestRequestBodyType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldFieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldFieldMeta$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldFieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldFieldMetaToJSON(
  fieldUpdateTemplateFieldFieldFieldMeta:
    FieldUpdateTemplateFieldFieldFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldFieldMeta$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldFieldMeta,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField3$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$inboundSchema,
  fieldMeta: z.lazy(() => FieldUpdateTemplateFieldFieldFieldMeta$inboundSchema)
    .optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField3$Outbound = {
  type: string;
  fieldMeta?: FieldUpdateTemplateFieldFieldFieldMeta$Outbound | undefined;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField3$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField3$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField3
> = z.object({
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsRequestType$outboundSchema,
  fieldMeta: z.lazy(() => FieldUpdateTemplateFieldFieldFieldMeta$outboundSchema)
    .optional(),
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField3$ {
  /** @deprecated use `FieldUpdateTemplateFieldField3$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField3$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField3$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField3$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField3$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField3$Outbound;
}

export function fieldUpdateTemplateFieldField3ToJSON(
  fieldUpdateTemplateFieldField3: FieldUpdateTemplateFieldField3,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField3$outboundSchema.parse(
      fieldUpdateTemplateFieldField3,
    ),
  );
}

export function fieldUpdateTemplateFieldField3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateTemplateFieldFieldTemplatesFieldsType> = z
    .nativeEnum(FieldUpdateTemplateFieldFieldTemplatesFieldsType);

/** @internal */
export const FieldUpdateTemplateFieldFieldTemplatesFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateTemplateFieldFieldTemplatesFieldsType> =
    FieldUpdateTemplateFieldFieldTemplatesFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldTemplatesFieldsType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldTemplatesFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldTemplatesFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldField2$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsType$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField2$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField2$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField2$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField2
> = z.object({
  type: FieldUpdateTemplateFieldFieldTemplatesFieldsType$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField2$ {
  /** @deprecated use `FieldUpdateTemplateFieldField2$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField2$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField2$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField2$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField2$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField2$Outbound;
}

export function fieldUpdateTemplateFieldField2ToJSON(
  fieldUpdateTemplateFieldField2: FieldUpdateTemplateFieldField2,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField2$outboundSchema.parse(
      fieldUpdateTemplateFieldField2,
    ),
  );
}

export function fieldUpdateTemplateFieldField2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldType$inboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateTemplateFieldFieldType
> = z.nativeEnum(FieldUpdateTemplateFieldFieldType);

/** @internal */
export const FieldUpdateTemplateFieldFieldType$outboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateTemplateFieldFieldType
> = FieldUpdateTemplateFieldFieldType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldType$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldField1$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateTemplateFieldFieldType$inboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldField1$Outbound = {
  type: string;
  id: number;
  pageNumber?: number | undefined;
  pageX?: number | undefined;
  pageY?: number | undefined;
  width?: number | undefined;
  height?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldField1$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField1$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField1
> = z.object({
  type: FieldUpdateTemplateFieldFieldType$outboundSchema,
  id: z.number(),
  pageNumber: z.number().optional(),
  pageX: z.number().optional(),
  pageY: z.number().optional(),
  width: z.number().optional(),
  height: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField1$ {
  /** @deprecated use `FieldUpdateTemplateFieldField1$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField1$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField1$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField1$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField1$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField1$Outbound;
}

export function fieldUpdateTemplateFieldField1ToJSON(
  fieldUpdateTemplateFieldField1: FieldUpdateTemplateFieldField1,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField1$outboundSchema.parse(
      fieldUpdateTemplateFieldField1,
    ),
  );
}

export function fieldUpdateTemplateFieldField1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldField$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateTemplateFieldField1$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField2$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField3$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField4$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField5$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField6$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField7$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField8$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField9$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField10$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField11$inboundSchema),
]);

/** @internal */
export type FieldUpdateTemplateFieldField$Outbound =
  | FieldUpdateTemplateFieldField1$Outbound
  | FieldUpdateTemplateFieldField2$Outbound
  | FieldUpdateTemplateFieldField3$Outbound
  | FieldUpdateTemplateFieldField4$Outbound
  | FieldUpdateTemplateFieldField5$Outbound
  | FieldUpdateTemplateFieldField6$Outbound
  | FieldUpdateTemplateFieldField7$Outbound
  | FieldUpdateTemplateFieldField8$Outbound
  | FieldUpdateTemplateFieldField9$Outbound
  | FieldUpdateTemplateFieldField10$Outbound
  | FieldUpdateTemplateFieldField11$Outbound;

/** @internal */
export const FieldUpdateTemplateFieldField$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldField$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldField
> = z.union([
  z.lazy(() => FieldUpdateTemplateFieldField1$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField2$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField3$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField4$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField5$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField6$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField7$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField8$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField9$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField10$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldField11$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldField$ {
  /** @deprecated use `FieldUpdateTemplateFieldField$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldField$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldField$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldField$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldField$Outbound;
}

export function fieldUpdateTemplateFieldFieldToJSON(
  fieldUpdateTemplateFieldField: FieldUpdateTemplateFieldField,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldField$outboundSchema.parse(
      fieldUpdateTemplateFieldField,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldField' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldRequestBody$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  templateId: z.number(),
  field: z.union([
    z.lazy(() => FieldUpdateTemplateFieldField1$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField2$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField3$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField4$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField5$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField6$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField7$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField8$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField9$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField10$inboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField11$inboundSchema),
  ]),
});

/** @internal */
export type FieldUpdateTemplateFieldRequestBody$Outbound = {
  templateId: number;
  field:
    | FieldUpdateTemplateFieldField1$Outbound
    | FieldUpdateTemplateFieldField2$Outbound
    | FieldUpdateTemplateFieldField3$Outbound
    | FieldUpdateTemplateFieldField4$Outbound
    | FieldUpdateTemplateFieldField5$Outbound
    | FieldUpdateTemplateFieldField6$Outbound
    | FieldUpdateTemplateFieldField7$Outbound
    | FieldUpdateTemplateFieldField8$Outbound
    | FieldUpdateTemplateFieldField9$Outbound
    | FieldUpdateTemplateFieldField10$Outbound
    | FieldUpdateTemplateFieldField11$Outbound;
};

/** @internal */
export const FieldUpdateTemplateFieldRequestBody$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldRequestBody$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldRequestBody
> = z.object({
  templateId: z.number(),
  field: z.union([
    z.lazy(() => FieldUpdateTemplateFieldField1$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField2$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField3$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField4$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField5$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField6$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField7$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField8$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField9$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField10$outboundSchema),
    z.lazy(() => FieldUpdateTemplateFieldField11$outboundSchema),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldRequestBody$ {
  /** @deprecated use `FieldUpdateTemplateFieldRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldRequestBody$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldRequestBody$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldRequestBody$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldRequestBody$Outbound;
}

export function fieldUpdateTemplateFieldRequestBodyToJSON(
  fieldUpdateTemplateFieldRequestBody: FieldUpdateTemplateFieldRequestBody,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldRequestBody$outboundSchema.parse(
      fieldUpdateTemplateFieldRequestBody,
    ),
  );
}

export function fieldUpdateTemplateFieldRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldType$inboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateTemplateFieldType
> = z.nativeEnum(FieldUpdateTemplateFieldType);

/** @internal */
export const FieldUpdateTemplateFieldType$outboundSchema: z.ZodNativeEnum<
  typeof FieldUpdateTemplateFieldType
> = FieldUpdateTemplateFieldType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldType$ {
  /** @deprecated use `FieldUpdateTemplateFieldType$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldType$outboundSchema` instead. */
  export const outboundSchema = FieldUpdateTemplateFieldType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$Outbound;
}

export function fieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValuesToJSON(
  fieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$outboundSchema
      .parse(fieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues),
  );
}

export function fieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta9$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta9,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$inboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta9$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta9$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta9
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody9Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseValues$outboundSchema
    ),
  ).optional(),
  defaultValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta9$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta9$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta9$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta9$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta9$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta9$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta9ToJSON(
  fieldUpdateTemplateFieldFieldMeta9: FieldUpdateTemplateFieldFieldMeta9,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta9$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta9,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta9' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$inboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$outboundSchema:
  z.ZodType<
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$Outbound,
    z.ZodTypeDef,
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$Outbound` instead. */
  export type Outbound =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$Outbound;
}

export function fieldUpdateTemplateFieldFieldMetaTemplatesFieldsValuesToJSON(
  fieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMetaTemplatesFieldsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta8$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta8,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$inboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$inboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$Outbound>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta8$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta8$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta8
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody8Type$outboundSchema,
  values: z.array(
    z.lazy(() =>
      FieldUpdateTemplateFieldFieldMetaTemplatesFieldsValues$outboundSchema
    ),
  ).optional(),
  validationRule: z.string().optional(),
  validationLength: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta8$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta8$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta8$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta8$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta8$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta8$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta8ToJSON(
  fieldUpdateTemplateFieldFieldMeta8: FieldUpdateTemplateFieldFieldMeta8,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta8$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta8,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta8' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaValues$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMetaValues,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaValues$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMetaValues$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMetaValues
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaValues$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaValues$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaValues$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaValues$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMetaValues$Outbound;
}

export function fieldUpdateTemplateFieldFieldMetaValuesToJSON(
  fieldUpdateTemplateFieldFieldMetaValues:
    FieldUpdateTemplateFieldFieldMetaValues,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMetaValues$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMetaValues,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldUpdateTemplateFieldFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta7$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta7,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$inboundSchema,
  values: z.array(
    z.lazy(() => FieldUpdateTemplateFieldFieldMetaValues$inboundSchema),
  ).optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldUpdateTemplateFieldFieldMetaValues$Outbound> | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta7$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta7$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta7
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBody7Type$outboundSchema,
  values: z.array(
    z.lazy(() => FieldUpdateTemplateFieldFieldMetaValues$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta7$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta7$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta7$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta7$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta7$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta7$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta7ToJSON(
  fieldUpdateTemplateFieldFieldMeta7: FieldUpdateTemplateFieldFieldMeta7,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta7$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta7,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta7' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta6$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta6,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta6$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta6$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta6
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  numberFormat: z.string().optional(),
  value: z.string().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta6$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta6$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta6$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta6$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta6$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta6$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta6ToJSON(
  fieldUpdateTemplateFieldFieldMeta6: FieldUpdateTemplateFieldFieldMeta6,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta6$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta6,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta6' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta5$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta5,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$inboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta5$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta5$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta5
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200ApplicationJSONType$outboundSchema,
  text: z.string().optional(),
  characterLimit: z.number().optional(),
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta5$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta5$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta5$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta5$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta5$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta5$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta5ToJSON(
  fieldUpdateTemplateFieldFieldMeta5: FieldUpdateTemplateFieldFieldMeta5,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta5$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta5,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta5' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta4$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta4,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta4$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta4$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta4
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponse200Type$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta4$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta4$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta4$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta4$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta4$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta4$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta4ToJSON(
  fieldUpdateTemplateFieldFieldMeta4: FieldUpdateTemplateFieldFieldMeta4,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta4$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta4,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta4' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType
  > = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType
  > =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta3$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta3,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta3$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta3$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta3
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type:
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsResponseType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta3$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta3$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta3$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta3$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta3$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta3$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta3ToJSON(
  fieldUpdateTemplateFieldFieldMeta3: FieldUpdateTemplateFieldFieldMeta3,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta3$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta3,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta3' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType> =
    z.nativeEnum(FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType);

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType> =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta2$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta2,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta2$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta2$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta2
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateTemplateFieldFieldMetaTemplatesFieldsType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta2$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta2$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta2$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta2$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta2$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta2$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta2ToJSON(
  fieldUpdateTemplateFieldFieldMeta2: FieldUpdateTemplateFieldFieldMeta2,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta2$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta2,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta2' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateTemplateFieldFieldMetaType> = z.nativeEnum(
    FieldUpdateTemplateFieldFieldMetaType,
  );

/** @internal */
export const FieldUpdateTemplateFieldFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof FieldUpdateTemplateFieldFieldMetaType> =
    FieldUpdateTemplateFieldFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMetaType$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldFieldMetaType$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMetaType$outboundSchema;
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta1$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta1,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateTemplateFieldFieldMetaType$inboundSchema,
  fontSize: z.number().optional(),
});

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta1$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta1$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta1
> = z.object({
  label: z.string().optional(),
  placeholder: z.string().optional(),
  required: z.boolean().optional(),
  readOnly: z.boolean().optional(),
  type: FieldUpdateTemplateFieldFieldMetaType$outboundSchema,
  fontSize: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta1$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta1$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta1$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta1$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta1$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta1$Outbound;
}

export function fieldUpdateTemplateFieldFieldMeta1ToJSON(
  fieldUpdateTemplateFieldFieldMeta1: FieldUpdateTemplateFieldFieldMeta1,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta1$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta1,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldFieldMeta1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta1' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta1$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta2$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta3$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta4$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta7$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta9$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta5$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta8$inboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta6$inboundSchema),
]);

/** @internal */
export type FieldUpdateTemplateFieldFieldMeta$Outbound =
  | FieldUpdateTemplateFieldFieldMeta1$Outbound
  | FieldUpdateTemplateFieldFieldMeta2$Outbound
  | FieldUpdateTemplateFieldFieldMeta3$Outbound
  | FieldUpdateTemplateFieldFieldMeta4$Outbound
  | FieldUpdateTemplateFieldFieldMeta7$Outbound
  | FieldUpdateTemplateFieldFieldMeta9$Outbound
  | FieldUpdateTemplateFieldFieldMeta5$Outbound
  | FieldUpdateTemplateFieldFieldMeta8$Outbound
  | FieldUpdateTemplateFieldFieldMeta6$Outbound;

/** @internal */
export const FieldUpdateTemplateFieldFieldMeta$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldFieldMeta$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldFieldMeta
> = z.union([
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta1$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta2$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta3$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta4$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta7$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta9$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta5$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta8$outboundSchema),
  z.lazy(() => FieldUpdateTemplateFieldFieldMeta6$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldFieldMeta$ {
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta$inboundSchema` instead. */
  export const inboundSchema = FieldUpdateTemplateFieldFieldMeta$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldFieldMeta$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldFieldMeta$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldFieldMeta$Outbound;
}

export function fieldUpdateTemplateFieldFieldMetaToJSON(
  fieldUpdateTemplateFieldFieldMeta: FieldUpdateTemplateFieldFieldMeta,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldFieldMeta$outboundSchema.parse(
      fieldUpdateTemplateFieldFieldMeta,
    ),
  );
}

export function fieldUpdateTemplateFieldFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldFieldMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldUpdateTemplateFieldFieldMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldFieldMeta' from JSON`,
  );
}

/** @internal */
export const FieldUpdateTemplateFieldResponseBody$inboundSchema: z.ZodType<
  FieldUpdateTemplateFieldResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldUpdateTemplateFieldType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta1$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta2$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta3$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta4$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta7$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta9$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta5$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta8$inboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type FieldUpdateTemplateFieldResponseBody$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldUpdateTemplateFieldFieldMeta1$Outbound
    | FieldUpdateTemplateFieldFieldMeta2$Outbound
    | FieldUpdateTemplateFieldFieldMeta3$Outbound
    | FieldUpdateTemplateFieldFieldMeta4$Outbound
    | FieldUpdateTemplateFieldFieldMeta7$Outbound
    | FieldUpdateTemplateFieldFieldMeta9$Outbound
    | FieldUpdateTemplateFieldFieldMeta5$Outbound
    | FieldUpdateTemplateFieldFieldMeta8$Outbound
    | FieldUpdateTemplateFieldFieldMeta6$Outbound
    | null;
};

/** @internal */
export const FieldUpdateTemplateFieldResponseBody$outboundSchema: z.ZodType<
  FieldUpdateTemplateFieldResponseBody$Outbound,
  z.ZodTypeDef,
  FieldUpdateTemplateFieldResponseBody
> = z.object({
  type: FieldUpdateTemplateFieldType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta1$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta2$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta3$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta4$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta7$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta9$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta5$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta8$outboundSchema),
      z.lazy(() => FieldUpdateTemplateFieldFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldUpdateTemplateFieldResponseBody$ {
  /** @deprecated use `FieldUpdateTemplateFieldResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldUpdateTemplateFieldResponseBody$inboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldUpdateTemplateFieldResponseBody$outboundSchema;
  /** @deprecated use `FieldUpdateTemplateFieldResponseBody$Outbound` instead. */
  export type Outbound = FieldUpdateTemplateFieldResponseBody$Outbound;
}

export function fieldUpdateTemplateFieldResponseBodyToJSON(
  fieldUpdateTemplateFieldResponseBody: FieldUpdateTemplateFieldResponseBody,
): string {
  return JSON.stringify(
    FieldUpdateTemplateFieldResponseBody$outboundSchema.parse(
      fieldUpdateTemplateFieldResponseBody,
    ),
  );
}

export function fieldUpdateTemplateFieldResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<FieldUpdateTemplateFieldResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldUpdateTemplateFieldResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldUpdateTemplateFieldResponseBody' from JSON`,
  );
}
