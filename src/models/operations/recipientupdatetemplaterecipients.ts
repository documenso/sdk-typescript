/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateTemplateRecipientsRoleRequest = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateTemplateRecipientsRoleRequest = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsRoleRequest
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientsAccessAuthRequest = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientsAccessAuthRequest = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsAccessAuthRequest
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientsActionAuthRequest = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientsActionAuthRequest = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsActionAuthRequest
>;

export type RecipientUpdateTemplateRecipientsRecipientRequest = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateTemplateRecipientsRoleRequest | undefined;
  signingOrder?: number | undefined;
  accessAuth?:
    | Array<RecipientUpdateTemplateRecipientsAccessAuthRequest>
    | undefined;
  actionAuth?:
    | Array<RecipientUpdateTemplateRecipientsActionAuthRequest>
    | undefined;
};

export type RecipientUpdateTemplateRecipientsRequest = {
  templateId: number;
  recipients: Array<RecipientUpdateTemplateRecipientsRecipientRequest>;
};

export const RecipientUpdateTemplateRecipientsRoleResponse = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
  Assistant: "ASSISTANT",
} as const;
export type RecipientUpdateTemplateRecipientsRoleResponse = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsRoleResponse
>;

export const RecipientUpdateTemplateRecipientsReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateTemplateRecipientsReadStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsReadStatus
>;

export const RecipientUpdateTemplateRecipientsSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateTemplateRecipientsSigningStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsSigningStatus
>;

export const RecipientUpdateTemplateRecipientsSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateTemplateRecipientsSendStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientsAccessAuthResponse = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientsAccessAuthResponse = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsAccessAuthResponse
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientsActionAuthResponse = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  Password: "PASSWORD",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientsActionAuthResponse = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsActionAuthResponse
>;

export type RecipientUpdateTemplateRecipientsAuthOptions = {
  accessAuth: Array<RecipientUpdateTemplateRecipientsAccessAuthResponse>;
  actionAuth: Array<RecipientUpdateTemplateRecipientsActionAuthResponse>;
};

export const RecipientUpdateTemplateRecipientsType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateTemplateRecipientsType = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsType
>;

export const RecipientUpdateTemplateRecipientsTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type RecipientUpdateTemplateRecipientsTypeDropdown = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeDropdown
>;

export type RecipientUpdateTemplateRecipientsValue3 = {
  value: string;
};

export type RecipientUpdateTemplateRecipientsFieldMetaDropdown = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeDropdown;
  values?: Array<RecipientUpdateTemplateRecipientsValue3> | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type RecipientUpdateTemplateRecipientsTypeCheckbox = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeCheckbox
>;

export type RecipientUpdateTemplateRecipientsValue2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateTemplateRecipientsFieldMetaCheckbox = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeCheckbox;
  values?: Array<RecipientUpdateTemplateRecipientsValue2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeRadio = {
  Radio: "radio",
} as const;
export type RecipientUpdateTemplateRecipientsTypeRadio = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeRadio
>;

export type RecipientUpdateTemplateRecipientsValue1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateTemplateRecipientsFieldMetaRadio = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeRadio;
  values?: Array<RecipientUpdateTemplateRecipientsValue1> | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeNumber = {
  Number: "number",
} as const;
export type RecipientUpdateTemplateRecipientsTypeNumber = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeNumber
>;

export const RecipientUpdateTemplateRecipientsTextAlign6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientsTextAlign6 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTextAlign6
>;

export type RecipientUpdateTemplateRecipientsFieldMetaNumber = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientsTextAlign6 | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeText = {
  Text: "text",
} as const;
export type RecipientUpdateTemplateRecipientsTypeText = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeText
>;

export const RecipientUpdateTemplateRecipientsTextAlign5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientsTextAlign5 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTextAlign5
>;

export type RecipientUpdateTemplateRecipientsFieldMetaText = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientsTextAlign5 | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeDate = {
  Date: "date",
} as const;
export type RecipientUpdateTemplateRecipientsTypeDate = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeDate
>;

export const RecipientUpdateTemplateRecipientsTextAlign4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientsTextAlign4 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTextAlign4
>;

export type RecipientUpdateTemplateRecipientsFieldMetaDate = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeDate;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientsTextAlign4 | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeEmail = {
  Email: "email",
} as const;
export type RecipientUpdateTemplateRecipientsTypeEmail = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeEmail
>;

export const RecipientUpdateTemplateRecipientsTextAlign3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientsTextAlign3 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTextAlign3
>;

export type RecipientUpdateTemplateRecipientsFieldMetaEmail = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeEmail;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientsTextAlign3 | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeName = {
  Name: "name",
} as const;
export type RecipientUpdateTemplateRecipientsTypeName = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeName
>;

export const RecipientUpdateTemplateRecipientsTextAlign2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientsTextAlign2 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTextAlign2
>;

export type RecipientUpdateTemplateRecipientsFieldMetaName = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeName;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientsTextAlign2 | undefined;
};

export const RecipientUpdateTemplateRecipientsTypeInitials = {
  Initials: "initials",
} as const;
export type RecipientUpdateTemplateRecipientsTypeInitials = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTypeInitials
>;

export const RecipientUpdateTemplateRecipientsTextAlign1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type RecipientUpdateTemplateRecipientsTextAlign1 = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsTextAlign1
>;

export type RecipientUpdateTemplateRecipientsFieldMetaInitials = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsTypeInitials;
  fontSize?: number | undefined;
  textAlign?: RecipientUpdateTemplateRecipientsTextAlign1 | undefined;
};

export type RecipientUpdateTemplateRecipientsFieldMetaUnion =
  | RecipientUpdateTemplateRecipientsFieldMetaInitials
  | RecipientUpdateTemplateRecipientsFieldMetaName
  | RecipientUpdateTemplateRecipientsFieldMetaEmail
  | RecipientUpdateTemplateRecipientsFieldMetaDate
  | RecipientUpdateTemplateRecipientsFieldMetaText
  | RecipientUpdateTemplateRecipientsFieldMetaNumber
  | RecipientUpdateTemplateRecipientsFieldMetaRadio
  | RecipientUpdateTemplateRecipientsFieldMetaCheckbox
  | RecipientUpdateTemplateRecipientsFieldMetaDropdown;

export type RecipientUpdateTemplateRecipientsField = {
  type: RecipientUpdateTemplateRecipientsType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientsFieldMetaInitials
    | RecipientUpdateTemplateRecipientsFieldMetaName
    | RecipientUpdateTemplateRecipientsFieldMetaEmail
    | RecipientUpdateTemplateRecipientsFieldMetaDate
    | RecipientUpdateTemplateRecipientsFieldMetaText
    | RecipientUpdateTemplateRecipientsFieldMetaNumber
    | RecipientUpdateTemplateRecipientsFieldMetaRadio
    | RecipientUpdateTemplateRecipientsFieldMetaCheckbox
    | RecipientUpdateTemplateRecipientsFieldMetaDropdown
    | null;
};

export type RecipientUpdateTemplateRecipientsRecipientResponse = {
  role: RecipientUpdateTemplateRecipientsRoleResponse;
  readStatus: RecipientUpdateTemplateRecipientsReadStatus;
  signingStatus: RecipientUpdateTemplateRecipientsSigningStatus;
  sendStatus: RecipientUpdateTemplateRecipientsSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientsField>;
};

/**
 * Successful response
 */
export type RecipientUpdateTemplateRecipientsResponse = {
  recipients: Array<RecipientUpdateTemplateRecipientsRecipientResponse>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRoleRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsRoleRequest> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsRoleRequest);

/** @internal */
export const RecipientUpdateTemplateRecipientsRoleRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsRoleRequest> =
    RecipientUpdateTemplateRecipientsRoleRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRoleRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRoleRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRoleRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRoleRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRoleRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsAccessAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsAccessAuthRequest> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsAccessAuthRequest);

/** @internal */
export const RecipientUpdateTemplateRecipientsAccessAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsAccessAuthRequest> =
    RecipientUpdateTemplateRecipientsAccessAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsAccessAuthRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsAccessAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsAccessAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAccessAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsAccessAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsActionAuthRequest$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsActionAuthRequest> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsActionAuthRequest);

/** @internal */
export const RecipientUpdateTemplateRecipientsActionAuthRequest$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsActionAuthRequest> =
    RecipientUpdateTemplateRecipientsActionAuthRequest$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsActionAuthRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsActionAuthRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsActionAuthRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsActionAuthRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsActionAuthRequest$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsRecipientRequest$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRecipientRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateTemplateRecipientsRoleRequest$inboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientsAccessAuthRequest$inboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientsActionAuthRequest$inboundSchema,
    ).optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsRecipientRequest$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: Array<string> | undefined;
  actionAuth?: Array<string> | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRecipientRequest$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRecipientRequest$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsRecipientRequest
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateTemplateRecipientsRoleRequest$outboundSchema
      .optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientsAccessAuthRequest$outboundSchema,
    ).optional(),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientsActionAuthRequest$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRecipientRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipientRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRecipientRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipientRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRecipientRequest$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipientRequest$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsRecipientRequest$Outbound;
}

export function recipientUpdateTemplateRecipientsRecipientRequestToJSON(
  recipientUpdateTemplateRecipientsRecipientRequest:
    RecipientUpdateTemplateRecipientsRecipientRequest,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsRecipientRequest$outboundSchema.parse(
      recipientUpdateTemplateRecipientsRecipientRequest,
    ),
  );
}

export function recipientUpdateTemplateRecipientsRecipientRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsRecipientRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsRecipientRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsRecipientRequest' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsRequest$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  templateId: z.number(),
  recipients: z.array(
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsRecipientRequest$inboundSchema
    ),
  ),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsRequest$Outbound = {
  templateId: number;
  recipients: Array<RecipientUpdateTemplateRecipientsRecipientRequest$Outbound>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRequest$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsRequest$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientsRequest
> = z.object({
  templateId: z.number(),
  recipients: z.array(
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsRecipientRequest$outboundSchema
    ),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRequest$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRequest$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRequest$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRequest$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsRequest$Outbound;
}

export function recipientUpdateTemplateRecipientsRequestToJSON(
  recipientUpdateTemplateRecipientsRequest:
    RecipientUpdateTemplateRecipientsRequest,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsRequest$outboundSchema.parse(
      recipientUpdateTemplateRecipientsRequest,
    ),
  );
}

export function recipientUpdateTemplateRecipientsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsRequest' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsRoleResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsRoleResponse> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsRoleResponse);

/** @internal */
export const RecipientUpdateTemplateRecipientsRoleResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsRoleResponse> =
    RecipientUpdateTemplateRecipientsRoleResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRoleResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRoleResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRoleResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRoleResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRoleResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsReadStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsReadStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientsReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsReadStatus> =
    RecipientUpdateTemplateRecipientsReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsReadStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSigningStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsSigningStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSigningStatus> =
    RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsSigningStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSendStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsSendStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientsSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSendStatus> =
    RecipientUpdateTemplateRecipientsSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsSendStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsAccessAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsAccessAuthResponse> =
    z.nativeEnum(RecipientUpdateTemplateRecipientsAccessAuthResponse);

/** @internal */
export const RecipientUpdateTemplateRecipientsAccessAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsAccessAuthResponse> =
    RecipientUpdateTemplateRecipientsAccessAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsAccessAuthResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsAccessAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsAccessAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAccessAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsAccessAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsActionAuthResponse$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsActionAuthResponse> =
    z.nativeEnum(RecipientUpdateTemplateRecipientsActionAuthResponse);

/** @internal */
export const RecipientUpdateTemplateRecipientsActionAuthResponse$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsActionAuthResponse> =
    RecipientUpdateTemplateRecipientsActionAuthResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsActionAuthResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsActionAuthResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsActionAuthResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsActionAuthResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsActionAuthResponse$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientsAccessAuthResponse$inboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientsActionAuthResponse$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsAuthOptions$Outbound = {
  accessAuth: Array<string>;
  actionAuth: Array<string>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsAuthOptions
  > = z.object({
    accessAuth: z.array(
      RecipientUpdateTemplateRecipientsAccessAuthResponse$outboundSchema,
    ),
    actionAuth: z.array(
      RecipientUpdateTemplateRecipientsActionAuthResponse$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsAuthOptions$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsAuthOptions$Outbound;
}

export function recipientUpdateTemplateRecipientsAuthOptionsToJSON(
  recipientUpdateTemplateRecipientsAuthOptions:
    RecipientUpdateTemplateRecipientsAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema.parse(
      recipientUpdateTemplateRecipientsAuthOptions,
    ),
  );
}

export function recipientUpdateTemplateRecipientsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsType> = z.nativeEnum(
    RecipientUpdateTemplateRecipientsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsType> =
    RecipientUpdateTemplateRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeDropdown> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeDropdown);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeDropdown> =
    RecipientUpdateTemplateRecipientsTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeDropdown$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeDropdown$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsValue3$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsValue3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsValue3$Outbound = {
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsValue3$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsValue3$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientsValue3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsValue3$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsValue3$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsValue3$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue3$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsValue3$Outbound;
}

export function recipientUpdateTemplateRecipientsValue3ToJSON(
  recipientUpdateTemplateRecipientsValue3:
    RecipientUpdateTemplateRecipientsValue3,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsValue3$outboundSchema.parse(
      recipientUpdateTemplateRecipientsValue3,
    ),
  );
}

export function recipientUpdateTemplateRecipientsValue3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsValue3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsValue3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsValue3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaDropdown$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaDropdown,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsValue3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaDropdown$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateTemplateRecipientsValue3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaDropdown$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaDropdown$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaDropdown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsValue3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaDropdown$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaDropdown$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaDropdown$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaDropdown$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaDropdown$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaDropdown$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaDropdown$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaDropdownToJSON(
  recipientUpdateTemplateRecipientsFieldMetaDropdown:
    RecipientUpdateTemplateRecipientsFieldMetaDropdown,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaDropdown$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaDropdown,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaDropdownFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaDropdown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaDropdown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaDropdown' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeCheckbox> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeCheckbox);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeCheckbox> =
    RecipientUpdateTemplateRecipientsTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeCheckbox$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeCheckbox$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsValue2$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsValue2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsValue2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsValue2$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsValue2$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientsValue2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsValue2$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsValue2$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsValue2$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue2$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsValue2$Outbound;
}

export function recipientUpdateTemplateRecipientsValue2ToJSON(
  recipientUpdateTemplateRecipientsValue2:
    RecipientUpdateTemplateRecipientsValue2,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsValue2$outboundSchema.parse(
      recipientUpdateTemplateRecipientsValue2,
    ),
  );
}

export function recipientUpdateTemplateRecipientsValue2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsValue2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsValue2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsValue2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaCheckbox$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsValue2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaCheckbox$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateTemplateRecipientsValue2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaCheckbox$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsValue2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaCheckbox$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaCheckbox$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaCheckboxToJSON(
  recipientUpdateTemplateRecipientsFieldMetaCheckbox:
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaCheckbox$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaCheckbox,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaCheckbox,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaCheckbox$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaCheckbox' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeRadio> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeRadio);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeRadio> =
    RecipientUpdateTemplateRecipientsTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeRadio$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeRadio$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsValue1$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsValue1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsValue1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsValue1$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsValue1$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientsValue1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsValue1$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsValue1$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsValue1$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsValue1$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsValue1$Outbound;
}

export function recipientUpdateTemplateRecipientsValue1ToJSON(
  recipientUpdateTemplateRecipientsValue1:
    RecipientUpdateTemplateRecipientsValue1,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsValue1$outboundSchema.parse(
      recipientUpdateTemplateRecipientsValue1,
    ),
  );
}

export function recipientUpdateTemplateRecipientsValue1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsValue1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsValue1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsValue1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaRadio$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaRadio,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsValue1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaRadio$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<RecipientUpdateTemplateRecipientsValue1$Outbound> | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaRadio$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaRadio$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaRadio
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsValue1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaRadio$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaRadio$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaRadio$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaRadio$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaRadio$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaRadio$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaRadio$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaRadioToJSON(
  recipientUpdateTemplateRecipientsFieldMetaRadio:
    RecipientUpdateTemplateRecipientsFieldMetaRadio,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaRadio$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaRadio,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaRadioFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaRadio,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaRadio$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaRadio' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeNumber> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeNumber);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeNumber> =
    RecipientUpdateTemplateRecipientsTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeNumber$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeNumber$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign6$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign6> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTextAlign6);

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign6$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign6> =
    RecipientUpdateTemplateRecipientsTextAlign6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTextAlign6$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign6$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign6$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaNumber$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign6$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaNumber$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaNumber$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaNumber$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaNumber
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaNumber$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaNumber$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaNumber$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaNumber$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaNumber$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaNumber$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaNumber$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaNumberToJSON(
  recipientUpdateTemplateRecipientsFieldMetaNumber:
    RecipientUpdateTemplateRecipientsFieldMetaNumber,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaNumber$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaNumber,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaNumber' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeText$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeText> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeText);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeText$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeText> =
    RecipientUpdateTemplateRecipientsTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeText$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeText$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeText$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign5$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign5> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTextAlign5);

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign5$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign5> =
    RecipientUpdateTemplateRecipientsTextAlign5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTextAlign5$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign5$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign5$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaText$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaText,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign5$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaText$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaText$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaText$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaText
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaText$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaText$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaText$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaText$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaText$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaText$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaText$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaTextToJSON(
  recipientUpdateTemplateRecipientsFieldMetaText:
    RecipientUpdateTemplateRecipientsFieldMetaText,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaText$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaText,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaTextFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaText,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaText$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaText' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeDate> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeDate);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeDate> =
    RecipientUpdateTemplateRecipientsTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeDate$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeDate$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeDate$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign4$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign4> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTextAlign4);

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign4$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign4> =
    RecipientUpdateTemplateRecipientsTextAlign4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTextAlign4$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign4$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign4$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaDate$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaDate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign4$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaDate$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaDate$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaDate$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaDate
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaDate$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaDate$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaDate$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaDate$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaDate$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaDate$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaDate$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaDateToJSON(
  recipientUpdateTemplateRecipientsFieldMetaDate:
    RecipientUpdateTemplateRecipientsFieldMetaDate,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaDate$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaDate,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaDateFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaDate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaDate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaDate' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeEmail> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeEmail);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeEmail> =
    RecipientUpdateTemplateRecipientsTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeEmail$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeEmail$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign3$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign3> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTextAlign3);

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign3$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign3> =
    RecipientUpdateTemplateRecipientsTextAlign3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTextAlign3$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign3$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign3$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaEmail$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaEmail,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign3$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaEmail$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaEmail$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaEmail$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaEmail
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaEmail$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaEmail$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaEmail$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaEmail$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaEmail$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaEmail$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaEmail$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaEmailToJSON(
  recipientUpdateTemplateRecipientsFieldMetaEmail:
    RecipientUpdateTemplateRecipientsFieldMetaEmail,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaEmail$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaEmail,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaEmailFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaEmail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaEmail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaEmail' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeName$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeName> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeName);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeName$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeName> =
    RecipientUpdateTemplateRecipientsTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeName$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeName$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeName$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign2$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign2> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTextAlign2);

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign2$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign2> =
    RecipientUpdateTemplateRecipientsTextAlign2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTextAlign2$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign2$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign2$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaName$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaName,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign2$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaName$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaName$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaName$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaName
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaName$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaName$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaName$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaName$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaName$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaName$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaName$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaNameToJSON(
  recipientUpdateTemplateRecipientsFieldMetaName:
    RecipientUpdateTemplateRecipientsFieldMetaName,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaName$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaName,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaNameFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaName,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaName$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaName' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeInitials> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTypeInitials);

/** @internal */
export const RecipientUpdateTemplateRecipientsTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTypeInitials> =
    RecipientUpdateTemplateRecipientsTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTypeInitials$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTypeInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTypeInitials$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign1$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign1> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsTextAlign1);

/** @internal */
export const RecipientUpdateTemplateRecipientsTextAlign1$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsTextAlign1> =
    RecipientUpdateTemplateRecipientsTextAlign1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTextAlign1$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign1$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTextAlign1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTextAlign1$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaInitials$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaInitials,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign1$inboundSchema
      .optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaInitials$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaInitials$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaInitials$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaInitials
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: RecipientUpdateTemplateRecipientsTextAlign1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaInitials$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaInitials$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaInitials$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaInitials$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaInitials$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaInitials$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaInitials$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaInitialsToJSON(
  recipientUpdateTemplateRecipientsFieldMetaInitials:
    RecipientUpdateTemplateRecipientsFieldMetaInitials,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaInitials$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaInitials,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaInitialsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaInitials,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaInitials$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaInitials' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaUnion$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaUnion,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaInitials$inboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaName$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaEmail$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaDate$inboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaText$inboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaNumber$inboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaRadio$inboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaCheckbox$inboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaDropdown$inboundSchema
    ),
  ]);

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaUnion$Outbound =
  | RecipientUpdateTemplateRecipientsFieldMetaInitials$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaName$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaEmail$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaDate$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaText$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaNumber$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaRadio$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaCheckbox$Outbound
  | RecipientUpdateTemplateRecipientsFieldMetaDropdown$Outbound;

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaUnion$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaUnion$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaUnion
  > = z.union([
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaInitials$outboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaName$outboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaEmail$outboundSchema
    ),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaDate$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMetaText$outboundSchema),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaNumber$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaRadio$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaCheckbox$outboundSchema
    ),
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsFieldMetaDropdown$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaUnion$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaUnion$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaUnion$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaUnion$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaUnion$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaUnionToJSON(
  recipientUpdateTemplateRecipientsFieldMetaUnion:
    RecipientUpdateTemplateRecipientsFieldMetaUnion,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaUnion$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaUnion,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaUnion,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaUnion$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsField$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsField,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientUpdateTemplateRecipientsType$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaInitials$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaName$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaEmail$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaDate$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaText$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaNumber$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaRadio$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaCheckbox$inboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaDropdown$inboundSchema
      ),
    ]),
  ),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsField$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientsFieldMetaInitials$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaName$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaEmail$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaDate$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaText$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaNumber$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaRadio$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaCheckbox$Outbound
    | RecipientUpdateTemplateRecipientsFieldMetaDropdown$Outbound
    | null;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsField$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsField$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientsField
> = z.object({
  type: RecipientUpdateTemplateRecipientsType$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaInitials$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaName$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaEmail$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaDate$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaText$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaNumber$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaRadio$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaCheckbox$outboundSchema
      ),
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaDropdown$outboundSchema
      ),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsField$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsField$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsField$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsField$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsField$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsField$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsField$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldToJSON(
  recipientUpdateTemplateRecipientsField:
    RecipientUpdateTemplateRecipientsField,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsField$outboundSchema.parse(
      recipientUpdateTemplateRecipientsField,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldFromJSON(
  jsonString: string,
): SafeParseResult<RecipientUpdateTemplateRecipientsField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientsField' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsRecipientResponse$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRecipientResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: RecipientUpdateTemplateRecipientsRoleResponse$inboundSchema,
    readStatus: RecipientUpdateTemplateRecipientsReadStatus$inboundSchema,
    signingStatus: RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema,
    sendStatus: RecipientUpdateTemplateRecipientsSendStatus$inboundSchema,
    id: z.number(),
    documentId: z.nullable(z.number()),
    templateId: z.nullable(z.number()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsField$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsRecipientResponse$Outbound = {
  role: string;
  readStatus: string;
  signingStatus: string;
  sendStatus: string;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientsAuthOptions$Outbound | null;
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientsField$Outbound>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRecipientResponse$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRecipientResponse$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsRecipientResponse
  > = z.object({
    role: RecipientUpdateTemplateRecipientsRoleResponse$outboundSchema,
    readStatus: RecipientUpdateTemplateRecipientsReadStatus$outboundSchema,
    signingStatus:
      RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema,
    sendStatus: RecipientUpdateTemplateRecipientsSendStatus$outboundSchema,
    id: z.number(),
    documentId: z.nullable(z.number()),
    templateId: z.nullable(z.number()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsField$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRecipientResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipientResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRecipientResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipientResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRecipientResponse$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipientResponse$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsRecipientResponse$Outbound;
}

export function recipientUpdateTemplateRecipientsRecipientResponseToJSON(
  recipientUpdateTemplateRecipientsRecipientResponse:
    RecipientUpdateTemplateRecipientsRecipientResponse,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsRecipientResponse$outboundSchema.parse(
      recipientUpdateTemplateRecipientsRecipientResponse,
    ),
  );
}

export function recipientUpdateTemplateRecipientsRecipientResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsRecipientResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsRecipientResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsRecipientResponse' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsResponse$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  recipients: z.array(
    z.lazy(() =>
      RecipientUpdateTemplateRecipientsRecipientResponse$inboundSchema
    ),
  ),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsResponse$Outbound = {
  recipients: Array<
    RecipientUpdateTemplateRecipientsRecipientResponse$Outbound
  >;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsResponse$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsResponse$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsResponse
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsRecipientResponse$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsResponse$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsResponse$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsResponse$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsResponse$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsResponse$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsResponse$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsResponse$Outbound;
}

export function recipientUpdateTemplateRecipientsResponseToJSON(
  recipientUpdateTemplateRecipientsResponse:
    RecipientUpdateTemplateRecipientsResponse,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsResponse$outboundSchema.parse(
      recipientUpdateTemplateRecipientsResponse,
    ),
  );
}

export function recipientUpdateTemplateRecipientsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsResponse' from JSON`,
  );
}
