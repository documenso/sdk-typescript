/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RecipientUpdateTemplateRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateTemplateRecipientsRole = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsRole
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientsAccessAuth = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsAccessAuth
>;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientsActionAuth = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsActionAuth
>;

export type RecipientUpdateTemplateRecipientsRecipients = {
  /**
   * The ID of the recipient to update.
   */
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: RecipientUpdateTemplateRecipientsRole | undefined;
  signingOrder?: number | undefined;
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth?: RecipientUpdateTemplateRecipientsAccessAuth | null | undefined;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth?: RecipientUpdateTemplateRecipientsActionAuth | null | undefined;
};

export type RecipientUpdateTemplateRecipientsRequestBody = {
  templateId: number;
  recipients: Array<RecipientUpdateTemplateRecipientsRecipients>;
};

export const RecipientUpdateTemplateRecipientsTemplatesRecipientsRole = {
  Cc: "CC",
  Signer: "SIGNER",
  Viewer: "VIEWER",
  Approver: "APPROVER",
} as const;
export type RecipientUpdateTemplateRecipientsTemplatesRecipientsRole =
  ClosedEnum<typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsRole>;

export const RecipientUpdateTemplateRecipientsReadStatus = {
  NotOpened: "NOT_OPENED",
  Opened: "OPENED",
} as const;
export type RecipientUpdateTemplateRecipientsReadStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsReadStatus
>;

export const RecipientUpdateTemplateRecipientsSigningStatus = {
  NotSigned: "NOT_SIGNED",
  Signed: "SIGNED",
  Rejected: "REJECTED",
} as const;
export type RecipientUpdateTemplateRecipientsSigningStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsSigningStatus
>;

export const RecipientUpdateTemplateRecipientsSendStatus = {
  NotSent: "NOT_SENT",
  Sent: "SENT",
} as const;
export type RecipientUpdateTemplateRecipientsSendStatus = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsSendStatus
>;

/**
 * The type of authentication required for the recipient to access the document.
 */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth = {
  Account: "ACCOUNT",
} as const;
/**
 * The type of authentication required for the recipient to access the document.
 */
export type RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth
  >;

/**
 * The type of authentication required for the recipient to sign the document.
 */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth = {
  Account: "ACCOUNT",
  Passkey: "PASSKEY",
  TwoFactorAuth: "TWO_FACTOR_AUTH",
  ExplicitNone: "EXPLICIT_NONE",
} as const;
/**
 * The type of authentication required for the recipient to sign the document.
 */
export type RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth
  >;

export type RecipientUpdateTemplateRecipientsAuthOptions = {
  /**
   * The type of authentication required for the recipient to access the document.
   */
  accessAuth:
    | RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth
    | null;
  /**
   * The type of authentication required for the recipient to sign the document.
   */
  actionAuth:
    | RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth
    | null;
};

export const RecipientUpdateTemplateRecipientsType = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type RecipientUpdateTemplateRecipientsType = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsType
>;

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type =
  {
    Dropdown: "dropdown",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type
  >;

export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues =
  {
    value: string;
  };

export type RecipientUpdateTemplateRecipientsFieldMeta9 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type;
  values?:
    | Array<
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues
    >
    | undefined;
  defaultValue?: string | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType =
  {
    Checkbox: "checkbox",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType
  >;

export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues =
  {
    id: number;
    checked: boolean;
    value: string;
  };

export type RecipientUpdateTemplateRecipientsFieldMeta8 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType;
  values?:
    | Array<RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues>
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType =
  {
    Radio: "radio",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType
  >;

export type RecipientUpdateTemplateRecipientsFieldMetaValues = {
  id: number;
  checked: boolean;
  value: string;
};

export type RecipientUpdateTemplateRecipientsFieldMeta7 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType;
  values?: Array<RecipientUpdateTemplateRecipientsFieldMetaValues> | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  >;

export type RecipientUpdateTemplateRecipientsFieldMeta6 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  >;

export type RecipientUpdateTemplateRecipientsFieldMeta5 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type =
  {
    Date: "date",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type
  >;

export type RecipientUpdateTemplateRecipientsFieldMeta4 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType =
  {
    Email: "email",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType
  >;

export type RecipientUpdateTemplateRecipientsFieldMeta3 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType =
  {
    Name: "name",
  } as const;
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType =
  ClosedEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType
  >;

export type RecipientUpdateTemplateRecipientsFieldMeta2 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType;
  fontSize?: number | undefined;
};

export const RecipientUpdateTemplateRecipientsFieldMetaType = {
  Initials: "initials",
} as const;
export type RecipientUpdateTemplateRecipientsFieldMetaType = ClosedEnum<
  typeof RecipientUpdateTemplateRecipientsFieldMetaType
>;

export type RecipientUpdateTemplateRecipientsFieldMeta1 = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: RecipientUpdateTemplateRecipientsFieldMetaType;
  fontSize?: number | undefined;
};

export type RecipientUpdateTemplateRecipientsFieldMeta =
  | RecipientUpdateTemplateRecipientsFieldMeta1
  | RecipientUpdateTemplateRecipientsFieldMeta2
  | RecipientUpdateTemplateRecipientsFieldMeta3
  | RecipientUpdateTemplateRecipientsFieldMeta4
  | RecipientUpdateTemplateRecipientsFieldMeta7
  | RecipientUpdateTemplateRecipientsFieldMeta9
  | RecipientUpdateTemplateRecipientsFieldMeta5
  | RecipientUpdateTemplateRecipientsFieldMeta8
  | RecipientUpdateTemplateRecipientsFieldMeta6;

export type RecipientUpdateTemplateRecipientsFields = {
  type: RecipientUpdateTemplateRecipientsType;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientsFieldMeta1
    | RecipientUpdateTemplateRecipientsFieldMeta2
    | RecipientUpdateTemplateRecipientsFieldMeta3
    | RecipientUpdateTemplateRecipientsFieldMeta4
    | RecipientUpdateTemplateRecipientsFieldMeta7
    | RecipientUpdateTemplateRecipientsFieldMeta9
    | RecipientUpdateTemplateRecipientsFieldMeta5
    | RecipientUpdateTemplateRecipientsFieldMeta8
    | RecipientUpdateTemplateRecipientsFieldMeta6
    | null;
};

export type RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients = {
  role: RecipientUpdateTemplateRecipientsTemplatesRecipientsRole;
  readStatus: RecipientUpdateTemplateRecipientsReadStatus;
  signingStatus: RecipientUpdateTemplateRecipientsSigningStatus;
  sendStatus: RecipientUpdateTemplateRecipientsSendStatus;
  id: number;
  documentId: number | null;
  templateId: number | null;
  email: string;
  name: string;
  token: string;
  documentDeletedAt: string | null;
  expired: string | null;
  signedAt: string | null;
  authOptions: RecipientUpdateTemplateRecipientsAuthOptions | null;
  /**
   * The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
   */
  signingOrder: number | null;
  rejectionReason: string | null;
  fields: Array<RecipientUpdateTemplateRecipientsFields>;
};

/**
 * Successful response
 */
export type RecipientUpdateTemplateRecipientsResponseBody = {
  recipients: Array<
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients
  >;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRole$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsRole> = z.nativeEnum(
    RecipientUpdateTemplateRecipientsRole,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsRole$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsRole> =
    RecipientUpdateTemplateRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRole$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsAccessAuth> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsAccessAuth);

/** @internal */
export const RecipientUpdateTemplateRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsAccessAuth> =
    RecipientUpdateTemplateRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsAccessAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsActionAuth> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsActionAuth);

/** @internal */
export const RecipientUpdateTemplateRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsActionAuth> =
    RecipientUpdateTemplateRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsActionAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsRecipients$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateTemplateRecipientsRole$inboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientsAccessAuth$inboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientsActionAuth$inboundSchema,
    ).optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsRecipients$Outbound = {
  id: number;
  email?: string | undefined;
  name?: string | undefined;
  role?: string | undefined;
  signingOrder?: number | undefined;
  accessAuth?: string | null | undefined;
  actionAuth?: string | null | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRecipients$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRecipients$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsRecipients
  > = z.object({
    id: z.number(),
    email: z.string().optional(),
    name: z.string().optional(),
    role: RecipientUpdateTemplateRecipientsRole$outboundSchema.optional(),
    signingOrder: z.number().optional(),
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientsAccessAuth$outboundSchema,
    ).optional(),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientsActionAuth$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRecipients$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipients$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRecipients$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipients$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRecipients$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRecipients$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsRecipients$Outbound;
}

export function recipientUpdateTemplateRecipientsRecipientsToJSON(
  recipientUpdateTemplateRecipientsRecipients:
    RecipientUpdateTemplateRecipientsRecipients,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsRecipients$outboundSchema.parse(
      recipientUpdateTemplateRecipientsRecipients,
    ),
  );
}

export function recipientUpdateTemplateRecipientsRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsRecipients$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsRecipients' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsRequestBody$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    templateId: z.number(),
    recipients: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsRecipients$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsRequestBody$Outbound = {
  templateId: number;
  recipients: Array<RecipientUpdateTemplateRecipientsRecipients$Outbound>;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsRequestBody$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsRequestBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsRequestBody
  > = z.object({
    templateId: z.number(),
    recipients: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsRecipients$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsRequestBody$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsRequestBody$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsRequestBody$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsRequestBody$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsRequestBody$Outbound;
}

export function recipientUpdateTemplateRecipientsRequestBodyToJSON(
  recipientUpdateTemplateRecipientsRequestBody:
    RecipientUpdateTemplateRecipientsRequestBody,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsRequestBody$outboundSchema.parse(
      recipientUpdateTemplateRecipientsRequestBody,
    ),
  );
}

export function recipientUpdateTemplateRecipientsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsRequestBody' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsRole
  > = z.nativeEnum(RecipientUpdateTemplateRecipientsTemplatesRecipientsRole);

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsRole
  > = RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsReadStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsReadStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsReadStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientsReadStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsReadStatus> =
    RecipientUpdateTemplateRecipientsReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsReadStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsReadStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsReadStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsReadStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsReadStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSigningStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsSigningStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSigningStatus> =
    RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsSigningStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsSendStatus$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSendStatus> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsSendStatus);

/** @internal */
export const RecipientUpdateTemplateRecipientsSendStatus$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsSendStatus> =
    RecipientUpdateTemplateRecipientsSendStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsSendStatus$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsSendStatus$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsSendStatus$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsSendStatus$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsSendStatus$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth
  > =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth
  > =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsAuthOptions,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$inboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$inboundSchema,
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsAuthOptions$Outbound = {
  accessAuth: string | null;
  actionAuth: string | null;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsAuthOptions$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsAuthOptions
  > = z.object({
    accessAuth: z.nullable(
      RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth$outboundSchema,
    ),
    actionAuth: z.nullable(
      RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsAuthOptions$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsAuthOptions$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsAuthOptions$Outbound;
}

export function recipientUpdateTemplateRecipientsAuthOptionsToJSON(
  recipientUpdateTemplateRecipientsAuthOptions:
    RecipientUpdateTemplateRecipientsAuthOptions,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema.parse(
      recipientUpdateTemplateRecipientsAuthOptions,
    ),
  );
}

export function recipientUpdateTemplateRecipientsAuthOptionsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsAuthOptions,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsAuthOptions' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsType> = z.nativeEnum(
    RecipientUpdateTemplateRecipientsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsType> =
    RecipientUpdateTemplateRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$Outbound =
  {
    value: string;
  };

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues
  > = z.object({
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValuesToJSON(
  recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$outboundSchema
      .parse(
        recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues,
      ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta9$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta9,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$inboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$inboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta9$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$Outbound
    >
    | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta9$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta9$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta9
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues$outboundSchema
      ),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta9$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta9$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta9$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta9$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta9$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta9$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta9$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta9ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta9:
    RecipientUpdateTemplateRecipientsFieldMeta9,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta9$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta9,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta9FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta9' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$Outbound =
  {
    id: number;
    checked: boolean;
    value: string;
  };

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValuesToJSON(
  recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues:
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$outboundSchema
      .parse(
        recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues,
      ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta8$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta8,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$inboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta8$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$Outbound
    >
    | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta8$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta8$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta8
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues$outboundSchema
      ),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta8$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta8$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta8$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta8$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta8$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta8$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta8$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta8ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta8:
    RecipientUpdateTemplateRecipientsFieldMeta8,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta8$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta8,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta8FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta8' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaValues$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaValues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMetaValues$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaValues$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMetaValues$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMetaValues
  > = z.object({
    id: z.number(),
    checked: z.boolean(),
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaValues$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaValues$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaValues$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaValues$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaValues$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaValues$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsFieldMetaValues$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaValuesToJSON(
  recipientUpdateTemplateRecipientsFieldMetaValues:
    RecipientUpdateTemplateRecipientsFieldMetaValues,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMetaValues$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMetaValues,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMetaValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMetaValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMetaValues' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta7$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta7,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$inboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaValues$inboundSchema
      ),
    ).optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta7$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?:
    | Array<RecipientUpdateTemplateRecipientsFieldMetaValues$Outbound>
    | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta7$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta7$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta7
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType$outboundSchema,
    values: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsFieldMetaValues$outboundSchema
      ),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta7$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta7$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta7$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta7$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta7$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta7$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta7$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta7ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta7:
    RecipientUpdateTemplateRecipientsFieldMeta7,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta7$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta7,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta7FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta7' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta6$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta6,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta6$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta6$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta6$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta6
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta6$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta6$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta6$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta6$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta6$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta6$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta6$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta6ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta6:
    RecipientUpdateTemplateRecipientsFieldMeta6,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta6$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta6,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta6FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta6' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta5$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta5,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta5$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta5$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta5$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta5
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta5$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta5$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta5$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta5$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta5$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta5$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta5$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta5ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta5:
    RecipientUpdateTemplateRecipientsFieldMeta5,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta5$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta5,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta5FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta5' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta4$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta4$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta4$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta4$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta4
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta4$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta4$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta4$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta4$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta4$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta4$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta4$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta4ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta4:
    RecipientUpdateTemplateRecipientsFieldMeta4,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta4$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta4,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta4FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta4' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta3$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta3$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta3$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta3$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta3
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta3$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta3$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta3$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta3$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta3$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta3$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta3$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta3ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta3:
    RecipientUpdateTemplateRecipientsFieldMeta3,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta3$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta3,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta3FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta3' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$inboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType
  > = z.nativeEnum(
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType,
  );

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$outboundSchema:
  z.ZodNativeEnum<
    typeof RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType
  > =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta2$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta2$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta2$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta2$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta2
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type:
      RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta2$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta2$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta2$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta2$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta2$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta2$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta2$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta2ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta2:
    RecipientUpdateTemplateRecipientsFieldMeta2,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta2$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta2,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta2FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta2' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaType$inboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsFieldMetaType> = z
    .nativeEnum(RecipientUpdateTemplateRecipientsFieldMetaType);

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMetaType$outboundSchema:
  z.ZodNativeEnum<typeof RecipientUpdateTemplateRecipientsFieldMetaType> =
    RecipientUpdateTemplateRecipientsFieldMetaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMetaType$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaType$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaType$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMetaType$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMetaType$outboundSchema;
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta1$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsFieldMetaType$inboundSchema,
    fontSize: z.number().optional(),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta1$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta1$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta1$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta1
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: RecipientUpdateTemplateRecipientsFieldMetaType$outboundSchema,
    fontSize: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta1$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta1$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta1$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta1$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta1$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta1$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta1$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMeta1ToJSON(
  recipientUpdateTemplateRecipientsFieldMeta1:
    RecipientUpdateTemplateRecipientsFieldMeta1,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta1$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta1,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMeta1FromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta1' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta$inboundSchema:
  z.ZodType<RecipientUpdateTemplateRecipientsFieldMeta, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta1$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta2$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta3$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta4$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta7$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta9$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta5$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta8$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta6$inboundSchema),
    ]);

/** @internal */
export type RecipientUpdateTemplateRecipientsFieldMeta$Outbound =
  | RecipientUpdateTemplateRecipientsFieldMeta1$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta2$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta3$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta4$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta7$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta9$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta5$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta8$Outbound
  | RecipientUpdateTemplateRecipientsFieldMeta6$Outbound;

/** @internal */
export const RecipientUpdateTemplateRecipientsFieldMeta$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsFieldMeta$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsFieldMeta
  > = z.union([
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta1$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta2$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta3$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta4$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta7$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta9$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta5$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta8$outboundSchema),
    z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta6$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFieldMeta$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFieldMeta$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFieldMeta$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFieldMeta$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldMetaToJSON(
  recipientUpdateTemplateRecipientsFieldMeta:
    RecipientUpdateTemplateRecipientsFieldMeta,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFieldMeta$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFieldMeta,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldMetaFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFieldMeta,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFieldMeta$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFieldMeta' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsFields$inboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsFields,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RecipientUpdateTemplateRecipientsType$inboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta1$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta2$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta3$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta4$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta7$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta9$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta5$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta8$inboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta6$inboundSchema),
    ]),
  ),
});

/** @internal */
export type RecipientUpdateTemplateRecipientsFields$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | RecipientUpdateTemplateRecipientsFieldMeta1$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta2$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta3$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta4$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta7$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta9$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta5$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta8$Outbound
    | RecipientUpdateTemplateRecipientsFieldMeta6$Outbound
    | null;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsFields$outboundSchema: z.ZodType<
  RecipientUpdateTemplateRecipientsFields$Outbound,
  z.ZodTypeDef,
  RecipientUpdateTemplateRecipientsFields
> = z.object({
  type: RecipientUpdateTemplateRecipientsType$outboundSchema,
  id: z.number().int(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number().int()),
  templateId: z.nullable(z.number().int()),
  recipientId: z.number().int(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta1$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta2$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta3$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta4$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta7$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta9$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta5$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta8$outboundSchema),
      z.lazy(() => RecipientUpdateTemplateRecipientsFieldMeta6$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsFields$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsFields$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsFields$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFields$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsFields$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsFields$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsFields$Outbound;
}

export function recipientUpdateTemplateRecipientsFieldsToJSON(
  recipientUpdateTemplateRecipientsFields:
    RecipientUpdateTemplateRecipientsFields,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsFields$outboundSchema.parse(
      recipientUpdateTemplateRecipientsFields,
    ),
  );
}

export function recipientUpdateTemplateRecipientsFieldsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsFields,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsFields$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsFields' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$inboundSchema,
    readStatus: RecipientUpdateTemplateRecipientsReadStatus$inboundSchema,
    signingStatus: RecipientUpdateTemplateRecipientsSigningStatus$inboundSchema,
    sendStatus: RecipientUpdateTemplateRecipientsSendStatus$inboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateTemplateRecipientsAuthOptions$inboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsFields$inboundSchema),
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$Outbound =
  {
    role: string;
    readStatus: string;
    signingStatus: string;
    sendStatus: string;
    id: number;
    documentId: number | null;
    templateId: number | null;
    email: string;
    name: string;
    token: string;
    documentDeletedAt: string | null;
    expired: string | null;
    signedAt: string | null;
    authOptions: RecipientUpdateTemplateRecipientsAuthOptions$Outbound | null;
    signingOrder: number | null;
    rejectionReason: string | null;
    fields: Array<RecipientUpdateTemplateRecipientsFields$Outbound>;
  };

/** @internal */
export const RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients
  > = z.object({
    role:
      RecipientUpdateTemplateRecipientsTemplatesRecipientsRole$outboundSchema,
    readStatus: RecipientUpdateTemplateRecipientsReadStatus$outboundSchema,
    signingStatus:
      RecipientUpdateTemplateRecipientsSigningStatus$outboundSchema,
    sendStatus: RecipientUpdateTemplateRecipientsSendStatus$outboundSchema,
    id: z.number().int(),
    documentId: z.nullable(z.number().int()),
    templateId: z.nullable(z.number().int()),
    email: z.string(),
    name: z.string(),
    token: z.string(),
    documentDeletedAt: z.nullable(z.string()),
    expired: z.nullable(z.string()),
    signedAt: z.nullable(z.string()),
    authOptions: z.nullable(
      z.lazy(() => RecipientUpdateTemplateRecipientsAuthOptions$outboundSchema),
    ),
    signingOrder: z.nullable(z.number()),
    rejectionReason: z.nullable(z.string()),
    fields: z.array(
      z.lazy(() => RecipientUpdateTemplateRecipientsFields$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$Outbound` instead. */
  export type Outbound =
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$Outbound;
}

export function recipientUpdateTemplateRecipientsTemplatesRecipientsRecipientsToJSON(
  recipientUpdateTemplateRecipientsTemplatesRecipientsRecipients:
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$outboundSchema
      .parse(recipientUpdateTemplateRecipientsTemplatesRecipientsRecipients),
  );
}

export function recipientUpdateTemplateRecipientsTemplatesRecipientsRecipientsFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients' from JSON`,
  );
}

/** @internal */
export const RecipientUpdateTemplateRecipientsResponseBody$inboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$inboundSchema
      ),
    ),
  });

/** @internal */
export type RecipientUpdateTemplateRecipientsResponseBody$Outbound = {
  recipients: Array<
    RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$Outbound
  >;
};

/** @internal */
export const RecipientUpdateTemplateRecipientsResponseBody$outboundSchema:
  z.ZodType<
    RecipientUpdateTemplateRecipientsResponseBody$Outbound,
    z.ZodTypeDef,
    RecipientUpdateTemplateRecipientsResponseBody
  > = z.object({
    recipients: z.array(
      z.lazy(() =>
        RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients$outboundSchema
      ),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientUpdateTemplateRecipientsResponseBody$ {
  /** @deprecated use `RecipientUpdateTemplateRecipientsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RecipientUpdateTemplateRecipientsResponseBody$inboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RecipientUpdateTemplateRecipientsResponseBody$outboundSchema;
  /** @deprecated use `RecipientUpdateTemplateRecipientsResponseBody$Outbound` instead. */
  export type Outbound = RecipientUpdateTemplateRecipientsResponseBody$Outbound;
}

export function recipientUpdateTemplateRecipientsResponseBodyToJSON(
  recipientUpdateTemplateRecipientsResponseBody:
    RecipientUpdateTemplateRecipientsResponseBody,
): string {
  return JSON.stringify(
    RecipientUpdateTemplateRecipientsResponseBody$outboundSchema.parse(
      recipientUpdateTemplateRecipientsResponseBody,
    ),
  );
}

export function recipientUpdateTemplateRecipientsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RecipientUpdateTemplateRecipientsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RecipientUpdateTemplateRecipientsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RecipientUpdateTemplateRecipientsResponseBody' from JSON`,
  );
}
