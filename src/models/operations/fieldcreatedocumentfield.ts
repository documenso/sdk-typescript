/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const FieldCreateDocumentFieldTypeDropdownRequestBody1 = {
  Dropdown: "DROPDOWN",
} as const;
export type FieldCreateDocumentFieldTypeDropdownRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeDropdownRequestBody1
>;

export const FieldCreateDocumentFieldTypeDropdownRequestBody2 = {
  Dropdown: "dropdown",
} as const;
export type FieldCreateDocumentFieldTypeDropdownRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeDropdownRequestBody2
>;

export type FieldCreateDocumentFieldValueDropdown = {
  value: string;
};

export type FieldCreateDocumentFieldFieldMetaDropdownRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeDropdownRequestBody2;
  values?: Array<FieldCreateDocumentFieldValueDropdown> | undefined;
  defaultValue?: string | undefined;
};

export type FieldCreateDocumentFieldFieldDropdown = {
  type: FieldCreateDocumentFieldTypeDropdownRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaDropdownRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeCheckboxRequestBody1 = {
  Checkbox: "CHECKBOX",
} as const;
export type FieldCreateDocumentFieldTypeCheckboxRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeCheckboxRequestBody1
>;

export const FieldCreateDocumentFieldTypeCheckboxRequestBody2 = {
  Checkbox: "checkbox",
} as const;
export type FieldCreateDocumentFieldTypeCheckboxRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeCheckboxRequestBody2
>;

export type FieldCreateDocumentFieldValueCheckbox = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldCreateDocumentFieldFieldMetaCheckboxRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeCheckboxRequestBody2;
  values?: Array<FieldCreateDocumentFieldValueCheckbox> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export type FieldCreateDocumentFieldFieldCheckbox = {
  type: FieldCreateDocumentFieldTypeCheckboxRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaCheckboxRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeRadioRequestBody1 = {
  Radio: "RADIO",
} as const;
export type FieldCreateDocumentFieldTypeRadioRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeRadioRequestBody1
>;

export const FieldCreateDocumentFieldTypeRadioRequestBody2 = {
  Radio: "radio",
} as const;
export type FieldCreateDocumentFieldTypeRadioRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeRadioRequestBody2
>;

export type FieldCreateDocumentFieldValueRadio = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldCreateDocumentFieldFieldMetaRadioRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeRadioRequestBody2;
  values?: Array<FieldCreateDocumentFieldValueRadio> | undefined;
};

export type FieldCreateDocumentFieldFieldRadio = {
  type: FieldCreateDocumentFieldTypeRadioRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaRadioRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeNumberRequestBody1 = {
  Number: "NUMBER",
} as const;
export type FieldCreateDocumentFieldTypeNumberRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeNumberRequestBody1
>;

export const FieldCreateDocumentFieldTypeNumberRequestBody2 = {
  Number: "number",
} as const;
export type FieldCreateDocumentFieldTypeNumberRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeNumberRequestBody2
>;

export const FieldCreateDocumentFieldTextAlignNumber = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignNumber = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignNumber
>;

export type FieldCreateDocumentFieldFieldMetaNumberRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeNumberRequestBody2;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignNumber | undefined;
};

export type FieldCreateDocumentFieldFieldNumber = {
  type: FieldCreateDocumentFieldTypeNumberRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaNumberRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeTextRequestBody1 = {
  Text: "TEXT",
} as const;
export type FieldCreateDocumentFieldTypeTextRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeTextRequestBody1
>;

export const FieldCreateDocumentFieldTypeTextRequestBody2 = {
  Text: "text",
} as const;
export type FieldCreateDocumentFieldTypeTextRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeTextRequestBody2
>;

export const FieldCreateDocumentFieldTextAlignText = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignText = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignText
>;

export type FieldCreateDocumentFieldFieldMetaTextRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeTextRequestBody2;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignText | undefined;
};

export type FieldCreateDocumentFieldFieldText = {
  type: FieldCreateDocumentFieldTypeTextRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaTextRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeDateRequestBody1 = {
  Date: "DATE",
} as const;
export type FieldCreateDocumentFieldTypeDateRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeDateRequestBody1
>;

export const FieldCreateDocumentFieldTypeDateRequestBody2 = {
  Date: "date",
} as const;
export type FieldCreateDocumentFieldTypeDateRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeDateRequestBody2
>;

export const FieldCreateDocumentFieldTextAlignDate = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignDate = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignDate
>;

export type FieldCreateDocumentFieldFieldMetaDateRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeDateRequestBody2;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignDate | undefined;
};

export type FieldCreateDocumentFieldFieldDate = {
  type: FieldCreateDocumentFieldTypeDateRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaDateRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeEmailRequestBody1 = {
  Email: "EMAIL",
} as const;
export type FieldCreateDocumentFieldTypeEmailRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeEmailRequestBody1
>;

export const FieldCreateDocumentFieldTypeEmailRequestBody2 = {
  Email: "email",
} as const;
export type FieldCreateDocumentFieldTypeEmailRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeEmailRequestBody2
>;

export const FieldCreateDocumentFieldTextAlignEmail = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignEmail = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignEmail
>;

export type FieldCreateDocumentFieldFieldMetaEmailRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeEmailRequestBody2;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignEmail | undefined;
};

export type FieldCreateDocumentFieldFieldEmail = {
  type: FieldCreateDocumentFieldTypeEmailRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaEmailRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeNameRequestBody1 = {
  Name: "NAME",
} as const;
export type FieldCreateDocumentFieldTypeNameRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeNameRequestBody1
>;

export const FieldCreateDocumentFieldTypeNameRequestBody2 = {
  Name: "name",
} as const;
export type FieldCreateDocumentFieldTypeNameRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeNameRequestBody2
>;

export const FieldCreateDocumentFieldTextAlignName = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignName = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignName
>;

export type FieldCreateDocumentFieldFieldMetaNameRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeNameRequestBody2;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignName | undefined;
};

export type FieldCreateDocumentFieldFieldName = {
  type: FieldCreateDocumentFieldTypeNameRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaNameRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeInitialsRequestBody1 = {
  Initials: "INITIALS",
} as const;
export type FieldCreateDocumentFieldTypeInitialsRequestBody1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeInitialsRequestBody1
>;

export const FieldCreateDocumentFieldTypeInitialsRequestBody2 = {
  Initials: "initials",
} as const;
export type FieldCreateDocumentFieldTypeInitialsRequestBody2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeInitialsRequestBody2
>;

export const FieldCreateDocumentFieldTextAlignInitials = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignInitials = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignInitials
>;

export type FieldCreateDocumentFieldFieldMetaInitialsRequestBody = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldTypeInitialsRequestBody2;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignInitials | undefined;
};

export type FieldCreateDocumentFieldFieldInitials = {
  type: FieldCreateDocumentFieldTypeInitialsRequestBody1;
  fieldMeta?: FieldCreateDocumentFieldFieldMetaInitialsRequestBody | undefined;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeFreeSignature = {
  FreeSignature: "FREE_SIGNATURE",
} as const;
export type FieldCreateDocumentFieldTypeFreeSignature = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeFreeSignature
>;

export type FieldCreateDocumentFieldFieldFreeSignature = {
  type: FieldCreateDocumentFieldTypeFreeSignature;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export const FieldCreateDocumentFieldTypeSignature = {
  Signature: "SIGNATURE",
} as const;
export type FieldCreateDocumentFieldTypeSignature = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeSignature
>;

export type FieldCreateDocumentFieldFieldSignature = {
  type: FieldCreateDocumentFieldTypeSignature;
  /**
   * The ID of the recipient to create the field for.
   */
  recipientId: number;
  /**
   * The page number the field will be on.
   */
  pageNumber: number;
  /**
   * The X coordinate of where the field will be placed.
   */
  pageX: number;
  /**
   * The Y coordinate of where the field will be placed.
   */
  pageY: number;
  /**
   * The width of the field.
   */
  width: number;
  /**
   * The height of the field.
   */
  height: number;
};

export type FieldCreateDocumentFieldFieldUnion =
  | FieldCreateDocumentFieldFieldSignature
  | FieldCreateDocumentFieldFieldFreeSignature
  | FieldCreateDocumentFieldFieldInitials
  | FieldCreateDocumentFieldFieldName
  | FieldCreateDocumentFieldFieldEmail
  | FieldCreateDocumentFieldFieldDate
  | FieldCreateDocumentFieldFieldText
  | FieldCreateDocumentFieldFieldNumber
  | FieldCreateDocumentFieldFieldRadio
  | FieldCreateDocumentFieldFieldCheckbox
  | FieldCreateDocumentFieldFieldDropdown;

export type FieldCreateDocumentFieldRequest = {
  documentId: number;
  field:
    | FieldCreateDocumentFieldFieldSignature
    | FieldCreateDocumentFieldFieldFreeSignature
    | FieldCreateDocumentFieldFieldInitials
    | FieldCreateDocumentFieldFieldName
    | FieldCreateDocumentFieldFieldEmail
    | FieldCreateDocumentFieldFieldDate
    | FieldCreateDocumentFieldFieldText
    | FieldCreateDocumentFieldFieldNumber
    | FieldCreateDocumentFieldFieldRadio
    | FieldCreateDocumentFieldFieldCheckbox
    | FieldCreateDocumentFieldFieldDropdown;
};

export const FieldCreateDocumentFieldTypeResponse = {
  Signature: "SIGNATURE",
  FreeSignature: "FREE_SIGNATURE",
  Initials: "INITIALS",
  Name: "NAME",
  Email: "EMAIL",
  Date: "DATE",
  Text: "TEXT",
  Number: "NUMBER",
  Radio: "RADIO",
  Checkbox: "CHECKBOX",
  Dropdown: "DROPDOWN",
} as const;
export type FieldCreateDocumentFieldTypeResponse = ClosedEnum<
  typeof FieldCreateDocumentFieldTypeResponse
>;

export const FieldCreateDocumentFieldFieldMetaTypeDropdown = {
  Dropdown: "dropdown",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeDropdown = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeDropdown
>;

export type FieldCreateDocumentFieldValueResponse3 = {
  value: string;
};

export type FieldCreateDocumentFieldFieldMetaDropdownResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeDropdown;
  values?: Array<FieldCreateDocumentFieldValueResponse3> | undefined;
  defaultValue?: string | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeCheckbox = {
  Checkbox: "checkbox",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeCheckbox = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeCheckbox
>;

export type FieldCreateDocumentFieldValueResponse2 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldCreateDocumentFieldFieldMetaCheckboxResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeCheckbox;
  values?: Array<FieldCreateDocumentFieldValueResponse2> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeRadio = {
  Radio: "radio",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeRadio = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeRadio
>;

export type FieldCreateDocumentFieldValueResponse1 = {
  id: number;
  checked: boolean;
  value: string;
};

export type FieldCreateDocumentFieldFieldMetaRadioResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeRadio;
  values?: Array<FieldCreateDocumentFieldValueResponse1> | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeNumber = {
  Number: "number",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeNumber = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeNumber
>;

export const FieldCreateDocumentFieldTextAlignResponse6 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignResponse6 = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignResponse6
>;

export type FieldCreateDocumentFieldFieldMetaNumberResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeNumber;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignResponse6 | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeText = {
  Text: "text",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeText = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeText
>;

export const FieldCreateDocumentFieldTextAlignResponse5 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignResponse5 = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignResponse5
>;

export type FieldCreateDocumentFieldFieldMetaTextResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeText;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignResponse5 | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeDate = {
  Date: "date",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeDate = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeDate
>;

export const FieldCreateDocumentFieldTextAlignResponse4 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignResponse4 = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignResponse4
>;

export type FieldCreateDocumentFieldFieldMetaDateResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeDate;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignResponse4 | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeEmail = {
  Email: "email",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeEmail = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeEmail
>;

export const FieldCreateDocumentFieldTextAlignResponse3 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignResponse3 = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignResponse3
>;

export type FieldCreateDocumentFieldFieldMetaEmailResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeEmail;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignResponse3 | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeName = {
  Name: "name",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeName = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeName
>;

export const FieldCreateDocumentFieldTextAlignResponse2 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignResponse2 = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignResponse2
>;

export type FieldCreateDocumentFieldFieldMetaNameResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeName;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignResponse2 | undefined;
};

export const FieldCreateDocumentFieldFieldMetaTypeInitials = {
  Initials: "initials",
} as const;
export type FieldCreateDocumentFieldFieldMetaTypeInitials = ClosedEnum<
  typeof FieldCreateDocumentFieldFieldMetaTypeInitials
>;

export const FieldCreateDocumentFieldTextAlignResponse1 = {
  Left: "left",
  Center: "center",
  Right: "right",
} as const;
export type FieldCreateDocumentFieldTextAlignResponse1 = ClosedEnum<
  typeof FieldCreateDocumentFieldTextAlignResponse1
>;

export type FieldCreateDocumentFieldFieldMetaInitialsResponse = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: FieldCreateDocumentFieldFieldMetaTypeInitials;
  fontSize?: number | undefined;
  textAlign?: FieldCreateDocumentFieldTextAlignResponse1 | undefined;
};

export type FieldCreateDocumentFieldFieldMetaUnion =
  | FieldCreateDocumentFieldFieldMetaRadioResponse
  | FieldCreateDocumentFieldFieldMetaInitialsResponse
  | FieldCreateDocumentFieldFieldMetaNameResponse
  | FieldCreateDocumentFieldFieldMetaEmailResponse
  | FieldCreateDocumentFieldFieldMetaDateResponse
  | FieldCreateDocumentFieldFieldMetaDropdownResponse
  | FieldCreateDocumentFieldFieldMetaCheckboxResponse
  | FieldCreateDocumentFieldFieldMetaTextResponse
  | FieldCreateDocumentFieldFieldMetaNumberResponse;

/**
 * Successful response
 */
export type FieldCreateDocumentFieldResponse = {
  type: FieldCreateDocumentFieldTypeResponse;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  /**
   * The page number of the field on the document. Starts from 1.
   */
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldCreateDocumentFieldFieldMetaRadioResponse
    | FieldCreateDocumentFieldFieldMetaInitialsResponse
    | FieldCreateDocumentFieldFieldMetaNameResponse
    | FieldCreateDocumentFieldFieldMetaEmailResponse
    | FieldCreateDocumentFieldFieldMetaDateResponse
    | FieldCreateDocumentFieldFieldMetaDropdownResponse
    | FieldCreateDocumentFieldFieldMetaCheckboxResponse
    | FieldCreateDocumentFieldFieldMetaTextResponse
    | FieldCreateDocumentFieldFieldMetaNumberResponse
    | null;
};

/** @internal */
export const FieldCreateDocumentFieldTypeDropdownRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDropdownRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeDropdownRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeDropdownRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDropdownRequestBody1> =
    FieldCreateDocumentFieldTypeDropdownRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeDropdownRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeDropdownRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeDropdownRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeDropdownRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeDropdownRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeDropdownRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDropdownRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeDropdownRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeDropdownRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDropdownRequestBody2> =
    FieldCreateDocumentFieldTypeDropdownRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeDropdownRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeDropdownRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeDropdownRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeDropdownRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeDropdownRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldValueDropdown$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldValueDropdown$Outbound = {
  value: string;
};

/** @internal */
export const FieldCreateDocumentFieldValueDropdown$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueDropdown$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldValueDropdown
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldValueDropdown$ {
  /** @deprecated use `FieldCreateDocumentFieldValueDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldValueDropdown$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldValueDropdown$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueDropdown$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldValueDropdown$Outbound;
}

export function fieldCreateDocumentFieldValueDropdownToJSON(
  fieldCreateDocumentFieldValueDropdown: FieldCreateDocumentFieldValueDropdown,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldValueDropdown$outboundSchema.parse(
      fieldCreateDocumentFieldValueDropdown,
    ),
  );
}

export function fieldCreateDocumentFieldValueDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldValueDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldValueDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldValueDropdown' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDropdownRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeDropdownRequestBody2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueDropdown$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaDropdownRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldCreateDocumentFieldValueDropdown$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDropdownRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeDropdownRequestBody2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueDropdown$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaDropdownRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDropdownRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDropdownRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDropdownRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaDropdownRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaDropdownRequestBody:
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaDropdownRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaDropdownRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaDropdownRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaDropdownRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaDropdownRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldDropdown$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldDropdown,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeDropdownRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldDropdown$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaDropdownRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldDropdown$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldDropdown$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldDropdown
> = z.object({
  type: FieldCreateDocumentFieldTypeDropdownRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaDropdownRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldDropdown$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldDropdown$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldDropdown$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldDropdown$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldDropdown$Outbound;
}

export function fieldCreateDocumentFieldFieldDropdownToJSON(
  fieldCreateDocumentFieldFieldDropdown: FieldCreateDocumentFieldFieldDropdown,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldDropdown$outboundSchema.parse(
      fieldCreateDocumentFieldFieldDropdown,
    ),
  );
}

export function fieldCreateDocumentFieldFieldDropdownFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldDropdown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldDropdown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldDropdown' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeCheckboxRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeCheckboxRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeCheckboxRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeCheckboxRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeCheckboxRequestBody1> =
    FieldCreateDocumentFieldTypeCheckboxRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeCheckboxRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeCheckboxRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeCheckboxRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeCheckboxRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeCheckboxRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeCheckboxRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeCheckboxRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeCheckboxRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeCheckboxRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeCheckboxRequestBody2> =
    FieldCreateDocumentFieldTypeCheckboxRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeCheckboxRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeCheckboxRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeCheckboxRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeCheckboxRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeCheckboxRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldValueCheckbox$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldValueCheckbox$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldCreateDocumentFieldValueCheckbox$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueCheckbox$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldValueCheckbox
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldValueCheckbox$ {
  /** @deprecated use `FieldCreateDocumentFieldValueCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldValueCheckbox$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldValueCheckbox$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueCheckbox$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldValueCheckbox$Outbound;
}

export function fieldCreateDocumentFieldValueCheckboxToJSON(
  fieldCreateDocumentFieldValueCheckbox: FieldCreateDocumentFieldValueCheckbox,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldValueCheckbox$outboundSchema.parse(
      fieldCreateDocumentFieldValueCheckbox,
    ),
  );
}

export function fieldCreateDocumentFieldValueCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldValueCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldValueCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldValueCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeCheckboxRequestBody2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueCheckbox$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldCreateDocumentFieldValueCheckbox$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeCheckboxRequestBody2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueCheckbox$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaCheckboxRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaCheckboxRequestBody:
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaCheckboxRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaCheckboxRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaCheckboxRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaCheckboxRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldCheckbox$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeCheckboxRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldCheckbox$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldCheckbox$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldCheckbox$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldCheckbox
> = z.object({
  type: FieldCreateDocumentFieldTypeCheckboxRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaCheckboxRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldCheckbox$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldCheckbox$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldCheckbox$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldCheckbox$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldCheckbox$Outbound;
}

export function fieldCreateDocumentFieldFieldCheckboxToJSON(
  fieldCreateDocumentFieldFieldCheckbox: FieldCreateDocumentFieldFieldCheckbox,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldCheckbox$outboundSchema.parse(
      fieldCreateDocumentFieldFieldCheckbox,
    ),
  );
}

export function fieldCreateDocumentFieldFieldCheckboxFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldCheckbox, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldCheckbox$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldCheckbox' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeRadioRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeRadioRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeRadioRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeRadioRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeRadioRequestBody1> =
    FieldCreateDocumentFieldTypeRadioRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeRadioRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeRadioRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeRadioRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeRadioRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeRadioRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeRadioRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeRadioRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeRadioRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeRadioRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeRadioRequestBody2> =
    FieldCreateDocumentFieldTypeRadioRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeRadioRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeRadioRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeRadioRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeRadioRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeRadioRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldValueRadio$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldValueRadio$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldCreateDocumentFieldValueRadio$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueRadio$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldValueRadio
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldValueRadio$ {
  /** @deprecated use `FieldCreateDocumentFieldValueRadio$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldValueRadio$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldValueRadio$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueRadio$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldValueRadio$Outbound;
}

export function fieldCreateDocumentFieldValueRadioToJSON(
  fieldCreateDocumentFieldValueRadio: FieldCreateDocumentFieldValueRadio,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldValueRadio$outboundSchema.parse(
      fieldCreateDocumentFieldValueRadio,
    ),
  );
}

export function fieldCreateDocumentFieldValueRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldValueRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldValueRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldValueRadio' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaRadioRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaRadioRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeRadioRequestBody2$inboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueRadio$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaRadioRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldCreateDocumentFieldValueRadio$Outbound> | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaRadioRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaRadioRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeRadioRequestBody2$outboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueRadio$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaRadioRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaRadioRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaRadioRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaRadioRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaRadioRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaRadioRequestBody:
    FieldCreateDocumentFieldFieldMetaRadioRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaRadioRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaRadioRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaRadioRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaRadioRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaRadioRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldRadio$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldRadio,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeRadioRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldRadio$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaRadioRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldRadio$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldRadio$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldRadio
> = z.object({
  type: FieldCreateDocumentFieldTypeRadioRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaRadioRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldRadio$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldRadio$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldFieldRadio$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldRadio$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldRadio$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldRadio$Outbound;
}

export function fieldCreateDocumentFieldFieldRadioToJSON(
  fieldCreateDocumentFieldFieldRadio: FieldCreateDocumentFieldFieldRadio,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldRadio$outboundSchema.parse(
      fieldCreateDocumentFieldFieldRadio,
    ),
  );
}

export function fieldCreateDocumentFieldFieldRadioFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldRadio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldRadio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldRadio' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeNumberRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNumberRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeNumberRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeNumberRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNumberRequestBody1> =
    FieldCreateDocumentFieldTypeNumberRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeNumberRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeNumberRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeNumberRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeNumberRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeNumberRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeNumberRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNumberRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeNumberRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeNumberRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNumberRequestBody2> =
    FieldCreateDocumentFieldTypeNumberRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeNumberRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeNumberRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeNumberRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeNumberRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeNumberRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignNumber$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignNumber> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignNumber);

/** @internal */
export const FieldCreateDocumentFieldTextAlignNumber$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignNumber> =
    FieldCreateDocumentFieldTextAlignNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignNumber$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignNumber$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignNumber$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNumberRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNumberRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeNumberRequestBody2$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignNumber$inboundSchema.optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaNumberRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNumberRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaNumberRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeNumberRequestBody2$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignNumber$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaNumberRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNumberRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNumberRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNumberRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaNumberRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaNumberRequestBody:
    FieldCreateDocumentFieldFieldMetaNumberRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaNumberRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaNumberRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaNumberRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaNumberRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaNumberRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldNumber$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeNumberRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldNumber$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaNumberRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldNumber$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldNumber$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldNumber
> = z.object({
  type: FieldCreateDocumentFieldTypeNumberRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaNumberRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldNumber$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldNumber$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldNumber$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldNumber$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldNumber$Outbound;
}

export function fieldCreateDocumentFieldFieldNumberToJSON(
  fieldCreateDocumentFieldFieldNumber: FieldCreateDocumentFieldFieldNumber,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldNumber$outboundSchema.parse(
      fieldCreateDocumentFieldFieldNumber,
    ),
  );
}

export function fieldCreateDocumentFieldFieldNumberFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldNumber' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeTextRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeTextRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeTextRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeTextRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeTextRequestBody1> =
    FieldCreateDocumentFieldTypeTextRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeTextRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeTextRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeTextRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeTextRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeTextRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeTextRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeTextRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeTextRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeTextRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeTextRequestBody2> =
    FieldCreateDocumentFieldTypeTextRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeTextRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeTextRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeTextRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeTextRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeTextRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignText$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignText> = z.nativeEnum(
    FieldCreateDocumentFieldTextAlignText,
  );

/** @internal */
export const FieldCreateDocumentFieldTextAlignText$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignText> =
    FieldCreateDocumentFieldTextAlignText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignText$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignText$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignText$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignText$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignText$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTextRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaTextRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeTextRequestBody2$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignText$inboundSchema.optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaTextRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTextRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaTextRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaTextRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeTextRequestBody2$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignText$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTextRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTextRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTextRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTextRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTextRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTextRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaTextRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaTextRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaTextRequestBody:
    FieldCreateDocumentFieldFieldMetaTextRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaTextRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaTextRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaTextRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaTextRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaTextRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaTextRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldText$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldText,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeTextRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaTextRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldText$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaTextRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldText$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldText$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldText
> = z.object({
  type: FieldCreateDocumentFieldTypeTextRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaTextRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldText$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldText$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldFieldText$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldText$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldText$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldText$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldText$Outbound;
}

export function fieldCreateDocumentFieldFieldTextToJSON(
  fieldCreateDocumentFieldFieldText: FieldCreateDocumentFieldFieldText,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldText$outboundSchema.parse(
      fieldCreateDocumentFieldFieldText,
    ),
  );
}

export function fieldCreateDocumentFieldFieldTextFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldFieldText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldText' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeDateRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDateRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeDateRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeDateRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDateRequestBody1> =
    FieldCreateDocumentFieldTypeDateRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeDateRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeDateRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeDateRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeDateRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeDateRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeDateRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDateRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeDateRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeDateRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeDateRequestBody2> =
    FieldCreateDocumentFieldTypeDateRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeDateRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeDateRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeDateRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeDateRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeDateRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignDate$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignDate> = z.nativeEnum(
    FieldCreateDocumentFieldTextAlignDate,
  );

/** @internal */
export const FieldCreateDocumentFieldTextAlignDate$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignDate> =
    FieldCreateDocumentFieldTextAlignDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignDate$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignDate$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignDate$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignDate$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDateRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDateRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeDateRequestBody2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignDate$inboundSchema.optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaDateRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDateRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDateRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaDateRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeDateRequestBody2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignDate$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaDateRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDateRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaDateRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDateRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaDateRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDateRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaDateRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaDateRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaDateRequestBody:
    FieldCreateDocumentFieldFieldMetaDateRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaDateRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaDateRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaDateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaDateRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaDateRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaDateRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldDate$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldDate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeDateRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaDateRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldDate$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaDateRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldDate$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldDate$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldDate
> = z.object({
  type: FieldCreateDocumentFieldTypeDateRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaDateRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldDate$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldDate$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldFieldDate$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldDate$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldDate$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldDate$Outbound;
}

export function fieldCreateDocumentFieldFieldDateToJSON(
  fieldCreateDocumentFieldFieldDate: FieldCreateDocumentFieldFieldDate,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldDate$outboundSchema.parse(
      fieldCreateDocumentFieldFieldDate,
    ),
  );
}

export function fieldCreateDocumentFieldFieldDateFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldDate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldFieldDate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldDate' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeEmailRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeEmailRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeEmailRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeEmailRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeEmailRequestBody1> =
    FieldCreateDocumentFieldTypeEmailRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeEmailRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeEmailRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeEmailRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeEmailRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeEmailRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeEmailRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeEmailRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeEmailRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeEmailRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeEmailRequestBody2> =
    FieldCreateDocumentFieldTypeEmailRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeEmailRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeEmailRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeEmailRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeEmailRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeEmailRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignEmail$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignEmail> = z.nativeEnum(
    FieldCreateDocumentFieldTextAlignEmail,
  );

/** @internal */
export const FieldCreateDocumentFieldTextAlignEmail$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignEmail> =
    FieldCreateDocumentFieldTextAlignEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignEmail$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignEmail$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignEmail$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaEmailRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaEmailRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeEmailRequestBody2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignEmail$inboundSchema.optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaEmailRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaEmailRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaEmailRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeEmailRequestBody2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignEmail$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaEmailRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaEmailRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaEmailRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaEmailRequestBody:
    FieldCreateDocumentFieldFieldMetaEmailRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaEmailRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaEmailRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaEmailRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaEmailRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaEmailRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldEmail$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldEmail,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeEmailRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldEmail$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaEmailRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldEmail$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldEmail$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldEmail
> = z.object({
  type: FieldCreateDocumentFieldTypeEmailRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaEmailRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldEmail$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldEmail$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldFieldEmail$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldEmail$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldEmail$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldEmail$Outbound;
}

export function fieldCreateDocumentFieldFieldEmailToJSON(
  fieldCreateDocumentFieldFieldEmail: FieldCreateDocumentFieldFieldEmail,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldEmail$outboundSchema.parse(
      fieldCreateDocumentFieldFieldEmail,
    ),
  );
}

export function fieldCreateDocumentFieldFieldEmailFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldEmail' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeNameRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNameRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeNameRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeNameRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNameRequestBody1> =
    FieldCreateDocumentFieldTypeNameRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeNameRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeNameRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeNameRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeNameRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeNameRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeNameRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNameRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeNameRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeNameRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeNameRequestBody2> =
    FieldCreateDocumentFieldTypeNameRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeNameRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeNameRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeNameRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeNameRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeNameRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignName$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignName> = z.nativeEnum(
    FieldCreateDocumentFieldTextAlignName,
  );

/** @internal */
export const FieldCreateDocumentFieldTextAlignName$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignName> =
    FieldCreateDocumentFieldTextAlignName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignName$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignName$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignName$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignName$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignName$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNameRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNameRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeNameRequestBody2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignName$inboundSchema.optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaNameRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNameRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNameRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaNameRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeNameRequestBody2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignName$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaNameRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNameRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaNameRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNameRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaNameRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNameRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaNameRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaNameRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaNameRequestBody:
    FieldCreateDocumentFieldFieldMetaNameRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaNameRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaNameRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaNameRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaNameRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaNameRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaNameRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldName$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldName,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeNameRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaNameRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldName$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaNameRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldName$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldName$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldName
> = z.object({
  type: FieldCreateDocumentFieldTypeNameRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaNameRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldName$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldName$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldFieldName$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldName$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldName$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldName$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldName$Outbound;
}

export function fieldCreateDocumentFieldFieldNameToJSON(
  fieldCreateDocumentFieldFieldName: FieldCreateDocumentFieldFieldName,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldName$outboundSchema.parse(
      fieldCreateDocumentFieldFieldName,
    ),
  );
}

export function fieldCreateDocumentFieldFieldNameFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldName, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldFieldName$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldName' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeInitialsRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeInitialsRequestBody1> = z
    .nativeEnum(FieldCreateDocumentFieldTypeInitialsRequestBody1);

/** @internal */
export const FieldCreateDocumentFieldTypeInitialsRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeInitialsRequestBody1> =
    FieldCreateDocumentFieldTypeInitialsRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeInitialsRequestBody1$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeInitialsRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeInitialsRequestBody1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeInitialsRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeInitialsRequestBody1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTypeInitialsRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeInitialsRequestBody2> = z
    .nativeEnum(FieldCreateDocumentFieldTypeInitialsRequestBody2);

/** @internal */
export const FieldCreateDocumentFieldTypeInitialsRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeInitialsRequestBody2> =
    FieldCreateDocumentFieldTypeInitialsRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeInitialsRequestBody2$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeInitialsRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeInitialsRequestBody2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeInitialsRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeInitialsRequestBody2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignInitials$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignInitials> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignInitials);

/** @internal */
export const FieldCreateDocumentFieldTextAlignInitials$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignInitials> =
    FieldCreateDocumentFieldTextAlignInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignInitials$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignInitials$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignInitials$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaInitialsRequestBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeInitialsRequestBody2$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignInitials$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaInitialsRequestBody$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaInitialsRequestBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldTypeInitialsRequestBody2$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignInitials$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaInitialsRequestBody$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaInitialsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaInitialsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaInitialsRequestBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaInitialsRequestBodyToJSON(
  fieldCreateDocumentFieldFieldMetaInitialsRequestBody:
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaInitialsRequestBody,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaInitialsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaInitialsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaInitialsRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaInitialsRequestBody' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldInitials$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldInitials,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeInitialsRequestBody1$inboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$inboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldInitials$Outbound = {
  type: string;
  fieldMeta?:
    | FieldCreateDocumentFieldFieldMetaInitialsRequestBody$Outbound
    | undefined;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldInitials$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldInitials$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldInitials
> = z.object({
  type: FieldCreateDocumentFieldTypeInitialsRequestBody1$outboundSchema,
  fieldMeta: z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaInitialsRequestBody$outboundSchema
  ).optional(),
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldInitials$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldInitials$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldInitials$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldInitials$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldInitials$Outbound;
}

export function fieldCreateDocumentFieldFieldInitialsToJSON(
  fieldCreateDocumentFieldFieldInitials: FieldCreateDocumentFieldFieldInitials,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldInitials$outboundSchema.parse(
      fieldCreateDocumentFieldFieldInitials,
    ),
  );
}

export function fieldCreateDocumentFieldFieldInitialsFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldInitials, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldInitials$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldInitials' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeFreeSignature$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeFreeSignature> = z
    .nativeEnum(FieldCreateDocumentFieldTypeFreeSignature);

/** @internal */
export const FieldCreateDocumentFieldTypeFreeSignature$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeFreeSignature> =
    FieldCreateDocumentFieldTypeFreeSignature$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeFreeSignature$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeFreeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeFreeSignature$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeFreeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeFreeSignature$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldFreeSignature$inboundSchema:
  z.ZodType<FieldCreateDocumentFieldFieldFreeSignature, z.ZodTypeDef, unknown> =
    z.object({
      type: FieldCreateDocumentFieldTypeFreeSignature$inboundSchema,
      recipientId: z.number(),
      pageNumber: z.number(),
      pageX: z.number(),
      pageY: z.number(),
      width: z.number(),
      height: z.number(),
    });

/** @internal */
export type FieldCreateDocumentFieldFieldFreeSignature$Outbound = {
  type: string;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldFreeSignature$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldFreeSignature$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldFreeSignature
  > = z.object({
    type: FieldCreateDocumentFieldTypeFreeSignature$outboundSchema,
    recipientId: z.number(),
    pageNumber: z.number(),
    pageX: z.number(),
    pageY: z.number(),
    width: z.number(),
    height: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldFreeSignature$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldFreeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldFreeSignature$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldFreeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldFreeSignature$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldFreeSignature$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldFreeSignature$Outbound;
}

export function fieldCreateDocumentFieldFieldFreeSignatureToJSON(
  fieldCreateDocumentFieldFieldFreeSignature:
    FieldCreateDocumentFieldFieldFreeSignature,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldFreeSignature$outboundSchema.parse(
      fieldCreateDocumentFieldFieldFreeSignature,
    ),
  );
}

export function fieldCreateDocumentFieldFieldFreeSignatureFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldFreeSignature,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldFreeSignature$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldFreeSignature' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeSignature$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeSignature> = z.nativeEnum(
    FieldCreateDocumentFieldTypeSignature,
  );

/** @internal */
export const FieldCreateDocumentFieldTypeSignature$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeSignature> =
    FieldCreateDocumentFieldTypeSignature$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeSignature$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeSignature$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeSignature$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldSignature$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldSignature,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeSignature$inboundSchema,
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/** @internal */
export type FieldCreateDocumentFieldFieldSignature$Outbound = {
  type: string;
  recipientId: number;
  pageNumber: number;
  pageX: number;
  pageY: number;
  width: number;
  height: number;
};

/** @internal */
export const FieldCreateDocumentFieldFieldSignature$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldSignature$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldSignature
> = z.object({
  type: FieldCreateDocumentFieldTypeSignature$outboundSchema,
  recipientId: z.number(),
  pageNumber: z.number(),
  pageX: z.number(),
  pageY: z.number(),
  width: z.number(),
  height: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldSignature$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldSignature$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldSignature$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldSignature$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldSignature$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldSignature$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldSignature$Outbound;
}

export function fieldCreateDocumentFieldFieldSignatureToJSON(
  fieldCreateDocumentFieldFieldSignature:
    FieldCreateDocumentFieldFieldSignature,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldSignature$outboundSchema.parse(
      fieldCreateDocumentFieldFieldSignature,
    ),
  );
}

export function fieldCreateDocumentFieldFieldSignatureFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldSignature, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldSignature$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldSignature' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldUnion$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldCreateDocumentFieldFieldSignature$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldFreeSignature$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldInitials$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldName$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldEmail$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldDate$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldText$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldNumber$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldRadio$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldCheckbox$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldDropdown$inboundSchema),
]);

/** @internal */
export type FieldCreateDocumentFieldFieldUnion$Outbound =
  | FieldCreateDocumentFieldFieldSignature$Outbound
  | FieldCreateDocumentFieldFieldFreeSignature$Outbound
  | FieldCreateDocumentFieldFieldInitials$Outbound
  | FieldCreateDocumentFieldFieldName$Outbound
  | FieldCreateDocumentFieldFieldEmail$Outbound
  | FieldCreateDocumentFieldFieldDate$Outbound
  | FieldCreateDocumentFieldFieldText$Outbound
  | FieldCreateDocumentFieldFieldNumber$Outbound
  | FieldCreateDocumentFieldFieldRadio$Outbound
  | FieldCreateDocumentFieldFieldCheckbox$Outbound
  | FieldCreateDocumentFieldFieldDropdown$Outbound;

/** @internal */
export const FieldCreateDocumentFieldFieldUnion$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldUnion$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldUnion
> = z.union([
  z.lazy(() => FieldCreateDocumentFieldFieldSignature$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldFreeSignature$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldInitials$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldName$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldEmail$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldDate$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldText$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldNumber$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldRadio$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldCheckbox$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldDropdown$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldUnion$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldUnion$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldFieldUnion$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldUnion$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldUnion$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldUnion$Outbound;
}

export function fieldCreateDocumentFieldFieldUnionToJSON(
  fieldCreateDocumentFieldFieldUnion: FieldCreateDocumentFieldFieldUnion,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldUnion$outboundSchema.parse(
      fieldCreateDocumentFieldFieldUnion,
    ),
  );
}

export function fieldCreateDocumentFieldFieldUnionFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldUnion' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldRequest$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentId: z.number(),
  field: z.union([
    z.lazy(() => FieldCreateDocumentFieldFieldSignature$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldFreeSignature$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldInitials$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldName$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldEmail$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldDate$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldText$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldNumber$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldRadio$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldCheckbox$inboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldDropdown$inboundSchema),
  ]),
});

/** @internal */
export type FieldCreateDocumentFieldRequest$Outbound = {
  documentId: number;
  field:
    | FieldCreateDocumentFieldFieldSignature$Outbound
    | FieldCreateDocumentFieldFieldFreeSignature$Outbound
    | FieldCreateDocumentFieldFieldInitials$Outbound
    | FieldCreateDocumentFieldFieldName$Outbound
    | FieldCreateDocumentFieldFieldEmail$Outbound
    | FieldCreateDocumentFieldFieldDate$Outbound
    | FieldCreateDocumentFieldFieldText$Outbound
    | FieldCreateDocumentFieldFieldNumber$Outbound
    | FieldCreateDocumentFieldFieldRadio$Outbound
    | FieldCreateDocumentFieldFieldCheckbox$Outbound
    | FieldCreateDocumentFieldFieldDropdown$Outbound;
};

/** @internal */
export const FieldCreateDocumentFieldRequest$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldRequest$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldRequest
> = z.object({
  documentId: z.number(),
  field: z.union([
    z.lazy(() => FieldCreateDocumentFieldFieldSignature$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldFreeSignature$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldInitials$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldName$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldEmail$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldDate$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldText$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldNumber$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldRadio$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldCheckbox$outboundSchema),
    z.lazy(() => FieldCreateDocumentFieldFieldDropdown$outboundSchema),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldRequest$ {
  /** @deprecated use `FieldCreateDocumentFieldRequest$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldRequest$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldRequest$outboundSchema` instead. */
  export const outboundSchema = FieldCreateDocumentFieldRequest$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldRequest$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldRequest$Outbound;
}

export function fieldCreateDocumentFieldRequestToJSON(
  fieldCreateDocumentFieldRequest: FieldCreateDocumentFieldRequest,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldRequest$outboundSchema.parse(
      fieldCreateDocumentFieldRequest,
    ),
  );
}

export function fieldCreateDocumentFieldRequestFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldRequest' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldTypeResponse$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeResponse> = z.nativeEnum(
    FieldCreateDocumentFieldTypeResponse,
  );

/** @internal */
export const FieldCreateDocumentFieldTypeResponse$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTypeResponse> =
    FieldCreateDocumentFieldTypeResponse$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTypeResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldTypeResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTypeResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTypeResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTypeResponse$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeDropdown$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeDropdown> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeDropdown);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeDropdown$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeDropdown> =
    FieldCreateDocumentFieldFieldMetaTypeDropdown$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeDropdown$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeDropdown$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeDropdown$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeDropdown$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeDropdown$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldValueResponse3$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldValueResponse3$Outbound = {
  value: string;
};

/** @internal */
export const FieldCreateDocumentFieldValueResponse3$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueResponse3$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldValueResponse3
> = z.object({
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldValueResponse3$ {
  /** @deprecated use `FieldCreateDocumentFieldValueResponse3$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldValueResponse3$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueResponse3$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldValueResponse3$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueResponse3$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldValueResponse3$Outbound;
}

export function fieldCreateDocumentFieldValueResponse3ToJSON(
  fieldCreateDocumentFieldValueResponse3:
    FieldCreateDocumentFieldValueResponse3,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldValueResponse3$outboundSchema.parse(
      fieldCreateDocumentFieldValueResponse3,
    ),
  );
}

export function fieldCreateDocumentFieldValueResponse3FromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldValueResponse3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldValueResponse3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldValueResponse3' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDropdownResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDropdownResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeDropdown$inboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueResponse3$inboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaDropdownResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldCreateDocumentFieldValueResponse3$Outbound> | undefined;
  defaultValue?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDropdownResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDropdownResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaDropdownResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeDropdown$outboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueResponse3$outboundSchema),
    ).optional(),
    defaultValue: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaDropdownResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDropdownResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaDropdownResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDropdownResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaDropdownResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDropdownResponse$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaDropdownResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaDropdownResponseToJSON(
  fieldCreateDocumentFieldFieldMetaDropdownResponse:
    FieldCreateDocumentFieldFieldMetaDropdownResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaDropdownResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaDropdownResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaDropdownResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaDropdownResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaDropdownResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaDropdownResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeCheckbox$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeCheckbox> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeCheckbox);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeCheckbox$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeCheckbox> =
    FieldCreateDocumentFieldFieldMetaTypeCheckbox$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeCheckbox$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeCheckbox$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeCheckbox$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeCheckbox$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeCheckbox$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldValueResponse2$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldValueResponse2$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldCreateDocumentFieldValueResponse2$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueResponse2$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldValueResponse2
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldValueResponse2$ {
  /** @deprecated use `FieldCreateDocumentFieldValueResponse2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldValueResponse2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueResponse2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldValueResponse2$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueResponse2$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldValueResponse2$Outbound;
}

export function fieldCreateDocumentFieldValueResponse2ToJSON(
  fieldCreateDocumentFieldValueResponse2:
    FieldCreateDocumentFieldValueResponse2,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldValueResponse2$outboundSchema.parse(
      fieldCreateDocumentFieldValueResponse2,
    ),
  );
}

export function fieldCreateDocumentFieldValueResponse2FromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldValueResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldValueResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldValueResponse2' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaCheckboxResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaCheckboxResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeCheckbox$inboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueResponse2$inboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaCheckboxResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldCreateDocumentFieldValueResponse2$Outbound> | undefined;
  validationRule?: string | undefined;
  validationLength?: number | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaCheckboxResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaCheckboxResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaCheckboxResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeCheckbox$outboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueResponse2$outboundSchema),
    ).optional(),
    validationRule: z.string().optional(),
    validationLength: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaCheckboxResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaCheckboxResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaCheckboxResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaCheckboxResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaCheckboxResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaCheckboxResponse$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaCheckboxResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaCheckboxResponseToJSON(
  fieldCreateDocumentFieldFieldMetaCheckboxResponse:
    FieldCreateDocumentFieldFieldMetaCheckboxResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaCheckboxResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaCheckboxResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaCheckboxResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaCheckboxResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaCheckboxResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaCheckboxResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeRadio$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeRadio> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeRadio);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeRadio$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeRadio> =
    FieldCreateDocumentFieldFieldMetaTypeRadio$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeRadio$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeRadio$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeRadio$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeRadio$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeRadio$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldValueResponse1$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldValueResponse1$Outbound = {
  id: number;
  checked: boolean;
  value: string;
};

/** @internal */
export const FieldCreateDocumentFieldValueResponse1$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldValueResponse1$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldValueResponse1
> = z.object({
  id: z.number(),
  checked: z.boolean(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldValueResponse1$ {
  /** @deprecated use `FieldCreateDocumentFieldValueResponse1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldValueResponse1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueResponse1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldValueResponse1$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldValueResponse1$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldValueResponse1$Outbound;
}

export function fieldCreateDocumentFieldValueResponse1ToJSON(
  fieldCreateDocumentFieldValueResponse1:
    FieldCreateDocumentFieldValueResponse1,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldValueResponse1$outboundSchema.parse(
      fieldCreateDocumentFieldValueResponse1,
    ),
  );
}

export function fieldCreateDocumentFieldValueResponse1FromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldValueResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldValueResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldValueResponse1' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaRadioResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaRadioResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeRadio$inboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueResponse1$inboundSchema),
    ).optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaRadioResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  values?: Array<FieldCreateDocumentFieldValueResponse1$Outbound> | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaRadioResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaRadioResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaRadioResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeRadio$outboundSchema,
    values: z.array(
      z.lazy(() => FieldCreateDocumentFieldValueResponse1$outboundSchema),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaRadioResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaRadioResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaRadioResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaRadioResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaRadioResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaRadioResponse$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaRadioResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaRadioResponseToJSON(
  fieldCreateDocumentFieldFieldMetaRadioResponse:
    FieldCreateDocumentFieldFieldMetaRadioResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaRadioResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaRadioResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaRadioResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaRadioResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaRadioResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaRadioResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeNumber$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeNumber> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeNumber);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeNumber$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeNumber> =
    FieldCreateDocumentFieldFieldMetaTypeNumber$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeNumber$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeNumber$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeNumber$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeNumber$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeNumber$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse6$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse6> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignResponse6);

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse6$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse6> =
    FieldCreateDocumentFieldTextAlignResponse6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignResponse6$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse6$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignResponse6$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse6$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignResponse6$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNumberResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNumberResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeNumber$inboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse6$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaNumberResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  numberFormat?: string | undefined;
  value?: string | undefined;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNumberResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNumberResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaNumberResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeNumber$outboundSchema,
    numberFormat: z.string().optional(),
    value: z.string().optional(),
    minValue: z.number().optional(),
    maxValue: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse6$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaNumberResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNumberResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaNumberResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNumberResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaNumberResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNumberResponse$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaNumberResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaNumberResponseToJSON(
  fieldCreateDocumentFieldFieldMetaNumberResponse:
    FieldCreateDocumentFieldFieldMetaNumberResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaNumberResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaNumberResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaNumberResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaNumberResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaNumberResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaNumberResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeText$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeText> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeText);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeText$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeText> =
    FieldCreateDocumentFieldFieldMetaTypeText$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeText$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeText$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeText$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeText$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeText$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse5$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse5> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignResponse5);

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse5$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse5> =
    FieldCreateDocumentFieldTextAlignResponse5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignResponse5$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse5$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignResponse5$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse5$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignResponse5$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTextResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaTextResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeText$inboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse5$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaTextResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  text?: string | undefined;
  characterLimit?: number | undefined;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTextResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaTextResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaTextResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeText$outboundSchema,
    text: z.string().optional(),
    characterLimit: z.number().optional(),
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse5$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTextResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTextResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTextResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTextResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTextResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTextResponse$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldMetaTextResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaTextResponseToJSON(
  fieldCreateDocumentFieldFieldMetaTextResponse:
    FieldCreateDocumentFieldFieldMetaTextResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaTextResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaTextResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaTextResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaTextResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaTextResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaTextResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeDate$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeDate> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeDate);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeDate$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeDate> =
    FieldCreateDocumentFieldFieldMetaTypeDate$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeDate$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeDate$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeDate$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeDate$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeDate$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse4$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse4> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignResponse4);

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse4$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse4> =
    FieldCreateDocumentFieldTextAlignResponse4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignResponse4$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse4$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignResponse4$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse4$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignResponse4$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDateResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDateResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeDate$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse4$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaDateResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaDateResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaDateResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaDateResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeDate$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse4$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaDateResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDateResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaDateResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDateResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaDateResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaDateResponse$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldMetaDateResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaDateResponseToJSON(
  fieldCreateDocumentFieldFieldMetaDateResponse:
    FieldCreateDocumentFieldFieldMetaDateResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaDateResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaDateResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaDateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaDateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaDateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaDateResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeEmail$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeEmail> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeEmail);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeEmail$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeEmail> =
    FieldCreateDocumentFieldFieldMetaTypeEmail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeEmail$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeEmail$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeEmail$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeEmail$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeEmail$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse3$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse3> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignResponse3);

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse3$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse3> =
    FieldCreateDocumentFieldTextAlignResponse3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignResponse3$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse3$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignResponse3$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse3$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignResponse3$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaEmailResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaEmailResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeEmail$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse3$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaEmailResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaEmailResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaEmailResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaEmailResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeEmail$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse3$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaEmailResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaEmailResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaEmailResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaEmailResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaEmailResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaEmailResponse$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaEmailResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaEmailResponseToJSON(
  fieldCreateDocumentFieldFieldMetaEmailResponse:
    FieldCreateDocumentFieldFieldMetaEmailResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaEmailResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaEmailResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaEmailResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaEmailResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaEmailResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaEmailResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeName$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeName> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeName);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeName$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeName> =
    FieldCreateDocumentFieldFieldMetaTypeName$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeName$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeName$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeName$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeName$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeName$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse2$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse2> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignResponse2);

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse2$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse2> =
    FieldCreateDocumentFieldTextAlignResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignResponse2$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse2$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignResponse2$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse2$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignResponse2$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNameResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNameResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeName$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse2$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaNameResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaNameResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaNameResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaNameResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeName$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse2$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaNameResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNameResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaNameResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNameResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaNameResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaNameResponse$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldMetaNameResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaNameResponseToJSON(
  fieldCreateDocumentFieldFieldMetaNameResponse:
    FieldCreateDocumentFieldFieldMetaNameResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaNameResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaNameResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaNameResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaNameResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaNameResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaNameResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeInitials$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeInitials> = z
    .nativeEnum(FieldCreateDocumentFieldFieldMetaTypeInitials);

/** @internal */
export const FieldCreateDocumentFieldFieldMetaTypeInitials$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldFieldMetaTypeInitials> =
    FieldCreateDocumentFieldFieldMetaTypeInitials$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaTypeInitials$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeInitials$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeInitials$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaTypeInitials$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaTypeInitials$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse1$inboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse1> = z
    .nativeEnum(FieldCreateDocumentFieldTextAlignResponse1);

/** @internal */
export const FieldCreateDocumentFieldTextAlignResponse1$outboundSchema:
  z.ZodNativeEnum<typeof FieldCreateDocumentFieldTextAlignResponse1> =
    FieldCreateDocumentFieldTextAlignResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldTextAlignResponse1$ {
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse1$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldTextAlignResponse1$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldTextAlignResponse1$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldTextAlignResponse1$outboundSchema;
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaInitialsResponse$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaInitialsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeInitials$inboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse1$inboundSchema
      .optional(),
  });

/** @internal */
export type FieldCreateDocumentFieldFieldMetaInitialsResponse$Outbound = {
  label?: string | undefined;
  placeholder?: string | undefined;
  required?: boolean | undefined;
  readOnly?: boolean | undefined;
  type: string;
  fontSize?: number | undefined;
  textAlign?: string | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldFieldMetaInitialsResponse$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldFieldMetaInitialsResponse$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldFieldMetaInitialsResponse
  > = z.object({
    label: z.string().optional(),
    placeholder: z.string().optional(),
    required: z.boolean().optional(),
    readOnly: z.boolean().optional(),
    type: FieldCreateDocumentFieldFieldMetaTypeInitials$outboundSchema,
    fontSize: z.number().optional(),
    textAlign: FieldCreateDocumentFieldTextAlignResponse1$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaInitialsResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaInitialsResponse$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaInitialsResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaInitialsResponse$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaInitialsResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaInitialsResponse$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldFieldMetaInitialsResponse$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaInitialsResponseToJSON(
  fieldCreateDocumentFieldFieldMetaInitialsResponse:
    FieldCreateDocumentFieldFieldMetaInitialsResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaInitialsResponse$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaInitialsResponse,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaInitialsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldFieldMetaInitialsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaInitialsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaInitialsResponse' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldFieldMetaUnion$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldMetaUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FieldCreateDocumentFieldFieldMetaRadioResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaInitialsResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaNameResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaEmailResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaDateResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaDropdownResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaCheckboxResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaTextResponse$inboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaNumberResponse$inboundSchema),
]);

/** @internal */
export type FieldCreateDocumentFieldFieldMetaUnion$Outbound =
  | FieldCreateDocumentFieldFieldMetaRadioResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaInitialsResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaNameResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaEmailResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaDateResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaDropdownResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaCheckboxResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaTextResponse$Outbound
  | FieldCreateDocumentFieldFieldMetaNumberResponse$Outbound;

/** @internal */
export const FieldCreateDocumentFieldFieldMetaUnion$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldFieldMetaUnion$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldFieldMetaUnion
> = z.union([
  z.lazy(() => FieldCreateDocumentFieldFieldMetaRadioResponse$outboundSchema),
  z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaInitialsResponse$outboundSchema
  ),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaNameResponse$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaEmailResponse$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaDateResponse$outboundSchema),
  z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaDropdownResponse$outboundSchema
  ),
  z.lazy(() =>
    FieldCreateDocumentFieldFieldMetaCheckboxResponse$outboundSchema
  ),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaTextResponse$outboundSchema),
  z.lazy(() => FieldCreateDocumentFieldFieldMetaNumberResponse$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldFieldMetaUnion$ {
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaUnion$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldFieldMetaUnion$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaUnion$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldFieldMetaUnion$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldFieldMetaUnion$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldFieldMetaUnion$Outbound;
}

export function fieldCreateDocumentFieldFieldMetaUnionToJSON(
  fieldCreateDocumentFieldFieldMetaUnion:
    FieldCreateDocumentFieldFieldMetaUnion,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldFieldMetaUnion$outboundSchema.parse(
      fieldCreateDocumentFieldFieldMetaUnion,
    ),
  );
}

export function fieldCreateDocumentFieldFieldMetaUnionFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldFieldMetaUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldFieldMetaUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldFieldMetaUnion' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldResponse$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FieldCreateDocumentFieldTypeResponse$inboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaRadioResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaInitialsResponse$inboundSchema
      ),
      z.lazy(() => FieldCreateDocumentFieldFieldMetaNameResponse$inboundSchema),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaEmailResponse$inboundSchema
      ),
      z.lazy(() => FieldCreateDocumentFieldFieldMetaDateResponse$inboundSchema),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaDropdownResponse$inboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaCheckboxResponse$inboundSchema
      ),
      z.lazy(() => FieldCreateDocumentFieldFieldMetaTextResponse$inboundSchema),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaNumberResponse$inboundSchema
      ),
    ]),
  ),
});

/** @internal */
export type FieldCreateDocumentFieldResponse$Outbound = {
  type: string;
  id: number;
  secondaryId: string;
  documentId: number | null;
  templateId: number | null;
  recipientId: number;
  page: number;
  positionX?: any | undefined;
  positionY?: any | undefined;
  width?: any | undefined;
  height?: any | undefined;
  customText: string;
  inserted: boolean;
  fieldMeta:
    | FieldCreateDocumentFieldFieldMetaRadioResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaInitialsResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaNameResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaEmailResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaDateResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaDropdownResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaCheckboxResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaTextResponse$Outbound
    | FieldCreateDocumentFieldFieldMetaNumberResponse$Outbound
    | null;
};

/** @internal */
export const FieldCreateDocumentFieldResponse$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldResponse$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldResponse
> = z.object({
  type: FieldCreateDocumentFieldTypeResponse$outboundSchema,
  id: z.number(),
  secondaryId: z.string(),
  documentId: z.nullable(z.number()),
  templateId: z.nullable(z.number()),
  recipientId: z.number(),
  page: z.number(),
  positionX: z.any().optional(),
  positionY: z.any().optional(),
  width: z.any().optional(),
  height: z.any().optional(),
  customText: z.string(),
  inserted: z.boolean(),
  fieldMeta: z.nullable(
    z.union([
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaRadioResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaInitialsResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaNameResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaEmailResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaDateResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaDropdownResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaCheckboxResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaTextResponse$outboundSchema
      ),
      z.lazy(() =>
        FieldCreateDocumentFieldFieldMetaNumberResponse$outboundSchema
      ),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldResponse$ {
  /** @deprecated use `FieldCreateDocumentFieldResponse$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldResponse$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldResponse$outboundSchema` instead. */
  export const outboundSchema = FieldCreateDocumentFieldResponse$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldResponse$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldResponse$Outbound;
}

export function fieldCreateDocumentFieldResponseToJSON(
  fieldCreateDocumentFieldResponse: FieldCreateDocumentFieldResponse,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldResponse$outboundSchema.parse(
      fieldCreateDocumentFieldResponse,
    ),
  );
}

export function fieldCreateDocumentFieldResponseFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldResponse' from JSON`,
  );
}
