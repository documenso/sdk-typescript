/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type FieldCreateDocumentFieldsDocumentsFieldsIssues = {
  message: string;
};

/**
 * Internal server error
 */
export type FieldCreateDocumentFieldsDocumentsFieldsResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldsDocumentsFieldsIssues> | undefined;
};

/**
 * Internal server error
 */
export class FieldCreateDocumentFieldsDocumentsFieldsResponseBody
  extends Error
{
  code: string;
  issues?: Array<FieldCreateDocumentFieldsDocumentsFieldsIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldsDocumentsFieldsResponseBodyData;

  constructor(err: FieldCreateDocumentFieldsDocumentsFieldsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldsDocumentsFieldsResponseBody";
  }
}

export type FieldCreateDocumentFieldsIssues = {
  message: string;
};

/**
 * Invalid input data
 */
export type FieldCreateDocumentFieldsResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldsIssues> | undefined;
};

/**
 * Invalid input data
 */
export class FieldCreateDocumentFieldsResponseBody extends Error {
  code: string;
  issues?: Array<FieldCreateDocumentFieldsIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldsResponseBodyData;

  constructor(err: FieldCreateDocumentFieldsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldsResponseBody";
  }
}

/** @internal */
export const FieldCreateDocumentFieldsDocumentsFieldsIssues$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsDocumentsFieldsIssues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type FieldCreateDocumentFieldsDocumentsFieldsIssues$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldsDocumentsFieldsIssues$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsDocumentsFieldsIssues$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldsDocumentsFieldsIssues
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsDocumentsFieldsIssues$ {
  /** @deprecated use `FieldCreateDocumentFieldsDocumentsFieldsIssues$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsDocumentsFieldsIssues$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsDocumentsFieldsIssues$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsDocumentsFieldsIssues$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsDocumentsFieldsIssues$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldsDocumentsFieldsIssues$Outbound;
}

export function fieldCreateDocumentFieldsDocumentsFieldsIssuesToJSON(
  fieldCreateDocumentFieldsDocumentsFieldsIssues:
    FieldCreateDocumentFieldsDocumentsFieldsIssues,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldsDocumentsFieldsIssues$outboundSchema.parse(
      fieldCreateDocumentFieldsDocumentsFieldsIssues,
    ),
  );
}

export function fieldCreateDocumentFieldsDocumentsFieldsIssuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldsDocumentsFieldsIssues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldsDocumentsFieldsIssues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldsDocumentsFieldsIssues' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldsDocumentsFieldsResponseBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsDocumentsFieldsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() =>
        FieldCreateDocumentFieldsDocumentsFieldsIssues$inboundSchema
      ),
    ).optional(),
  })
    .transform((v) => {
      return new FieldCreateDocumentFieldsDocumentsFieldsResponseBody(v);
    });

/** @internal */
export type FieldCreateDocumentFieldsDocumentsFieldsResponseBody$Outbound = {
  message: string;
  code: string;
  issues?:
    | Array<FieldCreateDocumentFieldsDocumentsFieldsIssues$Outbound>
    | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldsDocumentsFieldsResponseBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsDocumentsFieldsResponseBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldsDocumentsFieldsResponseBody
  > = z.instanceof(FieldCreateDocumentFieldsDocumentsFieldsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          FieldCreateDocumentFieldsDocumentsFieldsIssues$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsDocumentsFieldsResponseBody$ {
  /** @deprecated use `FieldCreateDocumentFieldsDocumentsFieldsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsDocumentsFieldsResponseBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsDocumentsFieldsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsDocumentsFieldsResponseBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsDocumentsFieldsResponseBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldsDocumentsFieldsResponseBody$Outbound;
}

/** @internal */
export const FieldCreateDocumentFieldsIssues$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldsIssues,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldsIssues$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldsIssues$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldsIssues$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldsIssues
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsIssues$ {
  /** @deprecated use `FieldCreateDocumentFieldsIssues$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldsIssues$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsIssues$outboundSchema` instead. */
  export const outboundSchema = FieldCreateDocumentFieldsIssues$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsIssues$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldsIssues$Outbound;
}

export function fieldCreateDocumentFieldsIssuesToJSON(
  fieldCreateDocumentFieldsIssues: FieldCreateDocumentFieldsIssues,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldsIssues$outboundSchema.parse(
      fieldCreateDocumentFieldsIssues,
    ),
  );
}

export function fieldCreateDocumentFieldsIssuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldsIssues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldsIssues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldsIssues' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldsResponseBody$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  code: z.string(),
  issues: z.array(z.lazy(() => FieldCreateDocumentFieldsIssues$inboundSchema))
    .optional(),
})
  .transform((v) => {
    return new FieldCreateDocumentFieldsResponseBody(v);
  });

/** @internal */
export type FieldCreateDocumentFieldsResponseBody$Outbound = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldsIssues$Outbound> | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldsResponseBody$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldsResponseBody$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldsResponseBody
> = z.instanceof(FieldCreateDocumentFieldsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => FieldCreateDocumentFieldsIssues$outboundSchema),
    ).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsResponseBody$ {
  /** @deprecated use `FieldCreateDocumentFieldsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsResponseBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsResponseBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsResponseBody$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldsResponseBody$Outbound;
}
