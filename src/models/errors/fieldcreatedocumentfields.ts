/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { DocumensoError } from "./documensoerror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type FieldCreateDocumentFieldsInternalServerErrorIssue = {
  message: string;
};

/**
 * Internal server error
 */
export type FieldCreateDocumentFieldsInternalServerErrorData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldsInternalServerErrorIssue> | undefined;
};

/**
 * Internal server error
 */
export class FieldCreateDocumentFieldsInternalServerError
  extends DocumensoError
{
  code: string;
  issues?: Array<FieldCreateDocumentFieldsInternalServerErrorIssue> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldsInternalServerErrorData;

  constructor(
    err: FieldCreateDocumentFieldsInternalServerErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldsInternalServerError";
  }
}

export type FieldCreateDocumentFieldsBadRequestIssue = {
  message: string;
};

/**
 * Invalid input data
 */
export type FieldCreateDocumentFieldsBadRequestErrorData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldsBadRequestIssue> | undefined;
};

/**
 * Invalid input data
 */
export class FieldCreateDocumentFieldsBadRequestError extends DocumensoError {
  code: string;
  issues?: Array<FieldCreateDocumentFieldsBadRequestIssue> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldsBadRequestErrorData;

  constructor(
    err: FieldCreateDocumentFieldsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldsBadRequestError";
  }
}

/** @internal */
export const FieldCreateDocumentFieldsInternalServerErrorIssue$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsInternalServerErrorIssue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type FieldCreateDocumentFieldsInternalServerErrorIssue$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldsInternalServerErrorIssue$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsInternalServerErrorIssue$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldsInternalServerErrorIssue
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsInternalServerErrorIssue$ {
  /** @deprecated use `FieldCreateDocumentFieldsInternalServerErrorIssue$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsInternalServerErrorIssue$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsInternalServerErrorIssue$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsInternalServerErrorIssue$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsInternalServerErrorIssue$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldsInternalServerErrorIssue$Outbound;
}

export function fieldCreateDocumentFieldsInternalServerErrorIssueToJSON(
  fieldCreateDocumentFieldsInternalServerErrorIssue:
    FieldCreateDocumentFieldsInternalServerErrorIssue,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldsInternalServerErrorIssue$outboundSchema.parse(
      fieldCreateDocumentFieldsInternalServerErrorIssue,
    ),
  );
}

export function fieldCreateDocumentFieldsInternalServerErrorIssueFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldsInternalServerErrorIssue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldsInternalServerErrorIssue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldsInternalServerErrorIssue' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldsInternalServerError$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsInternalServerError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() =>
        FieldCreateDocumentFieldsInternalServerErrorIssue$inboundSchema
      ),
    ).optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new FieldCreateDocumentFieldsInternalServerError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type FieldCreateDocumentFieldsInternalServerError$Outbound = {
  message: string;
  code: string;
  issues?:
    | Array<FieldCreateDocumentFieldsInternalServerErrorIssue$Outbound>
    | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldsInternalServerError$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldsInternalServerError$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldsInternalServerError
  > = z.instanceof(FieldCreateDocumentFieldsInternalServerError)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          FieldCreateDocumentFieldsInternalServerErrorIssue$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsInternalServerError$ {
  /** @deprecated use `FieldCreateDocumentFieldsInternalServerError$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsInternalServerError$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsInternalServerError$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsInternalServerError$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsInternalServerError$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldsInternalServerError$Outbound;
}

/** @internal */
export const FieldCreateDocumentFieldsBadRequestIssue$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldsBadRequestIssue,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldsBadRequestIssue$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldsBadRequestIssue$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldsBadRequestIssue$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldsBadRequestIssue
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsBadRequestIssue$ {
  /** @deprecated use `FieldCreateDocumentFieldsBadRequestIssue$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsBadRequestIssue$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsBadRequestIssue$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsBadRequestIssue$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsBadRequestIssue$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldsBadRequestIssue$Outbound;
}

export function fieldCreateDocumentFieldsBadRequestIssueToJSON(
  fieldCreateDocumentFieldsBadRequestIssue:
    FieldCreateDocumentFieldsBadRequestIssue,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldsBadRequestIssue$outboundSchema.parse(
      fieldCreateDocumentFieldsBadRequestIssue,
    ),
  );
}

export function fieldCreateDocumentFieldsBadRequestIssueFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldsBadRequestIssue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldsBadRequestIssue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldsBadRequestIssue' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldsBadRequestError$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  code: z.string(),
  issues: z.array(
    z.lazy(() => FieldCreateDocumentFieldsBadRequestIssue$inboundSchema),
  ).optional(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new FieldCreateDocumentFieldsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type FieldCreateDocumentFieldsBadRequestError$Outbound = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldsBadRequestIssue$Outbound> | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldsBadRequestError$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldsBadRequestError$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldsBadRequestError
> = z.instanceof(FieldCreateDocumentFieldsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => FieldCreateDocumentFieldsBadRequestIssue$outboundSchema),
    ).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldsBadRequestError$ {
  /** @deprecated use `FieldCreateDocumentFieldsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldsBadRequestError$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldsBadRequestError$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldsBadRequestError$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldsBadRequestError$Outbound;
}
