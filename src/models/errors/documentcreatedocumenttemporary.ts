/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type DocumentCreateDocumentTemporaryDocumentsIssues = {
  message: string;
};

/**
 * Internal server error
 */
export type DocumentCreateDocumentTemporaryDocumentsResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<DocumentCreateDocumentTemporaryDocumentsIssues> | undefined;
};

/**
 * Internal server error
 */
export class DocumentCreateDocumentTemporaryDocumentsResponseBody
  extends Error
{
  code: string;
  issues?: Array<DocumentCreateDocumentTemporaryDocumentsIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: DocumentCreateDocumentTemporaryDocumentsResponseBodyData;

  constructor(err: DocumentCreateDocumentTemporaryDocumentsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "DocumentCreateDocumentTemporaryDocumentsResponseBody";
  }
}

export type DocumentCreateDocumentTemporaryIssues = {
  message: string;
};

/**
 * Invalid input data
 */
export type DocumentCreateDocumentTemporaryResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<DocumentCreateDocumentTemporaryIssues> | undefined;
};

/**
 * Invalid input data
 */
export class DocumentCreateDocumentTemporaryResponseBody extends Error {
  code: string;
  issues?: Array<DocumentCreateDocumentTemporaryIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: DocumentCreateDocumentTemporaryResponseBodyData;

  constructor(err: DocumentCreateDocumentTemporaryResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "DocumentCreateDocumentTemporaryResponseBody";
  }
}

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsIssues$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentsIssues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type DocumentCreateDocumentTemporaryDocumentsIssues$Outbound = {
  message: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsIssues$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentsIssues$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryDocumentsIssues
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDocumentsIssues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsIssues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDocumentsIssues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsIssues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDocumentsIssues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsIssues$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryDocumentsIssues$Outbound;
}

export function documentCreateDocumentTemporaryDocumentsIssuesToJSON(
  documentCreateDocumentTemporaryDocumentsIssues:
    DocumentCreateDocumentTemporaryDocumentsIssues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryDocumentsIssues$outboundSchema.parse(
      documentCreateDocumentTemporaryDocumentsIssues,
    ),
  );
}

export function documentCreateDocumentTemporaryDocumentsIssuesFromJSON(
  jsonString: string,
): SafeParseResult<
  DocumentCreateDocumentTemporaryDocumentsIssues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryDocumentsIssues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DocumentCreateDocumentTemporaryDocumentsIssues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsResponseBody$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() =>
        DocumentCreateDocumentTemporaryDocumentsIssues$inboundSchema
      ),
    ).optional(),
  })
    .transform((v) => {
      return new DocumentCreateDocumentTemporaryDocumentsResponseBody(v);
    });

/** @internal */
export type DocumentCreateDocumentTemporaryDocumentsResponseBody$Outbound = {
  message: string;
  code: string;
  issues?:
    | Array<DocumentCreateDocumentTemporaryDocumentsIssues$Outbound>
    | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryDocumentsResponseBody$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryDocumentsResponseBody$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryDocumentsResponseBody
  > = z.instanceof(DocumentCreateDocumentTemporaryDocumentsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          DocumentCreateDocumentTemporaryDocumentsIssues$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryDocumentsResponseBody$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryDocumentsResponseBody$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryDocumentsResponseBody$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryDocumentsResponseBody$Outbound` instead. */
  export type Outbound =
    DocumentCreateDocumentTemporaryDocumentsResponseBody$Outbound;
}

/** @internal */
export const DocumentCreateDocumentTemporaryIssues$inboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryIssues,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type DocumentCreateDocumentTemporaryIssues$Outbound = {
  message: string;
};

/** @internal */
export const DocumentCreateDocumentTemporaryIssues$outboundSchema: z.ZodType<
  DocumentCreateDocumentTemporaryIssues$Outbound,
  z.ZodTypeDef,
  DocumentCreateDocumentTemporaryIssues
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryIssues$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryIssues$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryIssues$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryIssues$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryIssues$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryIssues$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryIssues$Outbound;
}

export function documentCreateDocumentTemporaryIssuesToJSON(
  documentCreateDocumentTemporaryIssues: DocumentCreateDocumentTemporaryIssues,
): string {
  return JSON.stringify(
    DocumentCreateDocumentTemporaryIssues$outboundSchema.parse(
      documentCreateDocumentTemporaryIssues,
    ),
  );
}

export function documentCreateDocumentTemporaryIssuesFromJSON(
  jsonString: string,
): SafeParseResult<DocumentCreateDocumentTemporaryIssues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DocumentCreateDocumentTemporaryIssues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentCreateDocumentTemporaryIssues' from JSON`,
  );
}

/** @internal */
export const DocumentCreateDocumentTemporaryResponseBody$inboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => DocumentCreateDocumentTemporaryIssues$inboundSchema),
    ).optional(),
  })
    .transform((v) => {
      return new DocumentCreateDocumentTemporaryResponseBody(v);
    });

/** @internal */
export type DocumentCreateDocumentTemporaryResponseBody$Outbound = {
  message: string;
  code: string;
  issues?: Array<DocumentCreateDocumentTemporaryIssues$Outbound> | undefined;
};

/** @internal */
export const DocumentCreateDocumentTemporaryResponseBody$outboundSchema:
  z.ZodType<
    DocumentCreateDocumentTemporaryResponseBody$Outbound,
    z.ZodTypeDef,
    DocumentCreateDocumentTemporaryResponseBody
  > = z.instanceof(DocumentCreateDocumentTemporaryResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() => DocumentCreateDocumentTemporaryIssues$outboundSchema),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentCreateDocumentTemporaryResponseBody$ {
  /** @deprecated use `DocumentCreateDocumentTemporaryResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DocumentCreateDocumentTemporaryResponseBody$inboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DocumentCreateDocumentTemporaryResponseBody$outboundSchema;
  /** @deprecated use `DocumentCreateDocumentTemporaryResponseBody$Outbound` instead. */
  export type Outbound = DocumentCreateDocumentTemporaryResponseBody$Outbound;
}
