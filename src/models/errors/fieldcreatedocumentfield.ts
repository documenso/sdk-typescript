/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type FieldCreateDocumentFieldDocumentsFieldsIssues = {
  message: string;
};

/**
 * Internal server error
 */
export type FieldCreateDocumentFieldDocumentsFieldsResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldDocumentsFieldsIssues> | undefined;
};

/**
 * Internal server error
 */
export class FieldCreateDocumentFieldDocumentsFieldsResponseBody extends Error {
  code: string;
  issues?: Array<FieldCreateDocumentFieldDocumentsFieldsIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldDocumentsFieldsResponseBodyData;

  constructor(err: FieldCreateDocumentFieldDocumentsFieldsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldDocumentsFieldsResponseBody";
  }
}

export type FieldCreateDocumentFieldIssues = {
  message: string;
};

/**
 * Invalid input data
 */
export type FieldCreateDocumentFieldResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldIssues> | undefined;
};

/**
 * Invalid input data
 */
export class FieldCreateDocumentFieldResponseBody extends Error {
  code: string;
  issues?: Array<FieldCreateDocumentFieldIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldResponseBodyData;

  constructor(err: FieldCreateDocumentFieldResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldResponseBody";
  }
}

/** @internal */
export const FieldCreateDocumentFieldDocumentsFieldsIssues$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldDocumentsFieldsIssues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type FieldCreateDocumentFieldDocumentsFieldsIssues$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldDocumentsFieldsIssues$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldDocumentsFieldsIssues$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldDocumentsFieldsIssues
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldDocumentsFieldsIssues$ {
  /** @deprecated use `FieldCreateDocumentFieldDocumentsFieldsIssues$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldDocumentsFieldsIssues$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldDocumentsFieldsIssues$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldDocumentsFieldsIssues$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldDocumentsFieldsIssues$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldDocumentsFieldsIssues$Outbound;
}

export function fieldCreateDocumentFieldDocumentsFieldsIssuesToJSON(
  fieldCreateDocumentFieldDocumentsFieldsIssues:
    FieldCreateDocumentFieldDocumentsFieldsIssues,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldDocumentsFieldsIssues$outboundSchema.parse(
      fieldCreateDocumentFieldDocumentsFieldsIssues,
    ),
  );
}

export function fieldCreateDocumentFieldDocumentsFieldsIssuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldDocumentsFieldsIssues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldDocumentsFieldsIssues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldDocumentsFieldsIssues' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldDocumentsFieldsResponseBody$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldDocumentsFieldsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => FieldCreateDocumentFieldDocumentsFieldsIssues$inboundSchema),
    ).optional(),
  })
    .transform((v) => {
      return new FieldCreateDocumentFieldDocumentsFieldsResponseBody(v);
    });

/** @internal */
export type FieldCreateDocumentFieldDocumentsFieldsResponseBody$Outbound = {
  message: string;
  code: string;
  issues?:
    | Array<FieldCreateDocumentFieldDocumentsFieldsIssues$Outbound>
    | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldDocumentsFieldsResponseBody$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldDocumentsFieldsResponseBody$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldDocumentsFieldsResponseBody
  > = z.instanceof(FieldCreateDocumentFieldDocumentsFieldsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          FieldCreateDocumentFieldDocumentsFieldsIssues$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldDocumentsFieldsResponseBody$ {
  /** @deprecated use `FieldCreateDocumentFieldDocumentsFieldsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldDocumentsFieldsResponseBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldDocumentsFieldsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldDocumentsFieldsResponseBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldDocumentsFieldsResponseBody$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldDocumentsFieldsResponseBody$Outbound;
}

/** @internal */
export const FieldCreateDocumentFieldIssues$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldIssues,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldIssues$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldIssues$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldIssues$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldIssues
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldIssues$ {
  /** @deprecated use `FieldCreateDocumentFieldIssues$inboundSchema` instead. */
  export const inboundSchema = FieldCreateDocumentFieldIssues$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldIssues$outboundSchema` instead. */
  export const outboundSchema = FieldCreateDocumentFieldIssues$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldIssues$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldIssues$Outbound;
}

export function fieldCreateDocumentFieldIssuesToJSON(
  fieldCreateDocumentFieldIssues: FieldCreateDocumentFieldIssues,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldIssues$outboundSchema.parse(
      fieldCreateDocumentFieldIssues,
    ),
  );
}

export function fieldCreateDocumentFieldIssuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldCreateDocumentFieldIssues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldCreateDocumentFieldIssues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldCreateDocumentFieldIssues' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldResponseBody$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  code: z.string(),
  issues: z.array(z.lazy(() => FieldCreateDocumentFieldIssues$inboundSchema))
    .optional(),
})
  .transform((v) => {
    return new FieldCreateDocumentFieldResponseBody(v);
  });

/** @internal */
export type FieldCreateDocumentFieldResponseBody$Outbound = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldIssues$Outbound> | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldResponseBody$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldResponseBody$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldResponseBody
> = z.instanceof(FieldCreateDocumentFieldResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(z.lazy(() => FieldCreateDocumentFieldIssues$outboundSchema))
      .optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldResponseBody$ {
  /** @deprecated use `FieldCreateDocumentFieldResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldResponseBody$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldResponseBody$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldResponseBody$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldResponseBody$Outbound;
}
