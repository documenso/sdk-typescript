/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type FieldCreateDocumentFieldInternalServerErrorIssue = {
  message: string;
};

/**
 * Internal server error
 */
export type FieldCreateDocumentFieldInternalServerErrorData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldInternalServerErrorIssue> | undefined;
};

/**
 * Internal server error
 */
export class FieldCreateDocumentFieldInternalServerError extends Error {
  code: string;
  issues?: Array<FieldCreateDocumentFieldInternalServerErrorIssue> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldInternalServerErrorData;

  constructor(err: FieldCreateDocumentFieldInternalServerErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldInternalServerError";
  }
}

export type FieldCreateDocumentFieldBadRequestIssue = {
  message: string;
};

/**
 * Invalid input data
 */
export type FieldCreateDocumentFieldBadRequestErrorData = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldBadRequestIssue> | undefined;
};

/**
 * Invalid input data
 */
export class FieldCreateDocumentFieldBadRequestError extends Error {
  code: string;
  issues?: Array<FieldCreateDocumentFieldBadRequestIssue> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldCreateDocumentFieldBadRequestErrorData;

  constructor(err: FieldCreateDocumentFieldBadRequestErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldCreateDocumentFieldBadRequestError";
  }
}

/** @internal */
export const FieldCreateDocumentFieldInternalServerErrorIssue$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldInternalServerErrorIssue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type FieldCreateDocumentFieldInternalServerErrorIssue$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldInternalServerErrorIssue$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldInternalServerErrorIssue$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldInternalServerErrorIssue
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldInternalServerErrorIssue$ {
  /** @deprecated use `FieldCreateDocumentFieldInternalServerErrorIssue$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldInternalServerErrorIssue$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldInternalServerErrorIssue$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldInternalServerErrorIssue$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldInternalServerErrorIssue$Outbound` instead. */
  export type Outbound =
    FieldCreateDocumentFieldInternalServerErrorIssue$Outbound;
}

export function fieldCreateDocumentFieldInternalServerErrorIssueToJSON(
  fieldCreateDocumentFieldInternalServerErrorIssue:
    FieldCreateDocumentFieldInternalServerErrorIssue,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldInternalServerErrorIssue$outboundSchema.parse(
      fieldCreateDocumentFieldInternalServerErrorIssue,
    ),
  );
}

export function fieldCreateDocumentFieldInternalServerErrorIssueFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldInternalServerErrorIssue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldInternalServerErrorIssue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldInternalServerErrorIssue' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldInternalServerError$inboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldInternalServerError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() =>
        FieldCreateDocumentFieldInternalServerErrorIssue$inboundSchema
      ),
    ).optional(),
  })
    .transform((v) => {
      return new FieldCreateDocumentFieldInternalServerError(v);
    });

/** @internal */
export type FieldCreateDocumentFieldInternalServerError$Outbound = {
  message: string;
  code: string;
  issues?:
    | Array<FieldCreateDocumentFieldInternalServerErrorIssue$Outbound>
    | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldInternalServerError$outboundSchema:
  z.ZodType<
    FieldCreateDocumentFieldInternalServerError$Outbound,
    z.ZodTypeDef,
    FieldCreateDocumentFieldInternalServerError
  > = z.instanceof(FieldCreateDocumentFieldInternalServerError)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          FieldCreateDocumentFieldInternalServerErrorIssue$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldInternalServerError$ {
  /** @deprecated use `FieldCreateDocumentFieldInternalServerError$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldInternalServerError$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldInternalServerError$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldInternalServerError$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldInternalServerError$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldInternalServerError$Outbound;
}

/** @internal */
export const FieldCreateDocumentFieldBadRequestIssue$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldBadRequestIssue,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type FieldCreateDocumentFieldBadRequestIssue$Outbound = {
  message: string;
};

/** @internal */
export const FieldCreateDocumentFieldBadRequestIssue$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldBadRequestIssue$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldBadRequestIssue
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldBadRequestIssue$ {
  /** @deprecated use `FieldCreateDocumentFieldBadRequestIssue$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldBadRequestIssue$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldBadRequestIssue$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldBadRequestIssue$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldBadRequestIssue$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldBadRequestIssue$Outbound;
}

export function fieldCreateDocumentFieldBadRequestIssueToJSON(
  fieldCreateDocumentFieldBadRequestIssue:
    FieldCreateDocumentFieldBadRequestIssue,
): string {
  return JSON.stringify(
    FieldCreateDocumentFieldBadRequestIssue$outboundSchema.parse(
      fieldCreateDocumentFieldBadRequestIssue,
    ),
  );
}

export function fieldCreateDocumentFieldBadRequestIssueFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldCreateDocumentFieldBadRequestIssue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldCreateDocumentFieldBadRequestIssue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldCreateDocumentFieldBadRequestIssue' from JSON`,
  );
}

/** @internal */
export const FieldCreateDocumentFieldBadRequestError$inboundSchema: z.ZodType<
  FieldCreateDocumentFieldBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  code: z.string(),
  issues: z.array(
    z.lazy(() => FieldCreateDocumentFieldBadRequestIssue$inboundSchema),
  ).optional(),
})
  .transform((v) => {
    return new FieldCreateDocumentFieldBadRequestError(v);
  });

/** @internal */
export type FieldCreateDocumentFieldBadRequestError$Outbound = {
  message: string;
  code: string;
  issues?: Array<FieldCreateDocumentFieldBadRequestIssue$Outbound> | undefined;
};

/** @internal */
export const FieldCreateDocumentFieldBadRequestError$outboundSchema: z.ZodType<
  FieldCreateDocumentFieldBadRequestError$Outbound,
  z.ZodTypeDef,
  FieldCreateDocumentFieldBadRequestError
> = z.instanceof(FieldCreateDocumentFieldBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => FieldCreateDocumentFieldBadRequestIssue$outboundSchema),
    ).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldCreateDocumentFieldBadRequestError$ {
  /** @deprecated use `FieldCreateDocumentFieldBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    FieldCreateDocumentFieldBadRequestError$inboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    FieldCreateDocumentFieldBadRequestError$outboundSchema;
  /** @deprecated use `FieldCreateDocumentFieldBadRequestError$Outbound` instead. */
  export type Outbound = FieldCreateDocumentFieldBadRequestError$Outbound;
}
