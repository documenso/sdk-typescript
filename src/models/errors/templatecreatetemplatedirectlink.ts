/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues = {
  message: string;
};

/**
 * Internal server error
 */
export type TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBodyData =
  {
    message: string;
    code: string;
    issues?:
      | Array<TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues>
      | undefined;
  };

/**
 * Internal server error
 */
export class TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody
  extends Error
{
  code: string;
  issues?:
    | Array<TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues>
    | undefined;

  /** The original data that was passed to this error instance. */
  data$: TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBodyData;

  constructor(
    err: TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name =
      "TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody";
  }
}

export type TemplateCreateTemplateDirectLinkIssues = {
  message: string;
};

/**
 * Invalid input data
 */
export type TemplateCreateTemplateDirectLinkResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<TemplateCreateTemplateDirectLinkIssues> | undefined;
};

/**
 * Invalid input data
 */
export class TemplateCreateTemplateDirectLinkResponseBody extends Error {
  code: string;
  issues?: Array<TemplateCreateTemplateDirectLinkIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: TemplateCreateTemplateDirectLinkResponseBodyData;

  constructor(err: TemplateCreateTemplateDirectLinkResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "TemplateCreateTemplateDirectLinkResponseBody";
  }
}

/** @internal */
export const TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$inboundSchema:
  z.ZodType<
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$Outbound =
  {
    message: string;
  };

/** @internal */
export const TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$outboundSchema:
  z.ZodType<
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$Outbound,
    z.ZodTypeDef,
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$ {
  /** @deprecated use `TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$inboundSchema` instead. */
  export const inboundSchema =
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$inboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$outboundSchema` instead. */
  export const outboundSchema =
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$outboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$Outbound` instead. */
  export type Outbound =
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$Outbound;
}

export function templateCreateTemplateDirectLinkTemplatesDirectLinkIssuesToJSON(
  templateCreateTemplateDirectLinkTemplatesDirectLinkIssues:
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues,
): string {
  return JSON.stringify(
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$outboundSchema
      .parse(templateCreateTemplateDirectLinkTemplatesDirectLinkIssues),
  );
}

export function templateCreateTemplateDirectLinkTemplatesDirectLinkIssuesFromJSON(
  jsonString: string,
): SafeParseResult<
  TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues' from JSON`,
  );
}

/** @internal */
export const TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$inboundSchema:
  z.ZodType<
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() =>
        TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$inboundSchema
      ),
    ).optional(),
  })
    .transform((v) => {
      return new TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody(
        v,
      );
    });

/** @internal */
export type TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$Outbound =
  {
    message: string;
    code: string;
    issues?:
      | Array<
        TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$Outbound
      >
      | undefined;
  };

/** @internal */
export const TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$outboundSchema:
  z.ZodType<
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$Outbound,
    z.ZodTypeDef,
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody
  > = z.instanceof(
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          TemplateCreateTemplateDirectLinkTemplatesDirectLinkIssues$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$ {
  /** @deprecated use `TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$inboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$outboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$Outbound` instead. */
  export type Outbound =
    TemplateCreateTemplateDirectLinkTemplatesDirectLinkResponseBody$Outbound;
}

/** @internal */
export const TemplateCreateTemplateDirectLinkIssues$inboundSchema: z.ZodType<
  TemplateCreateTemplateDirectLinkIssues,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type TemplateCreateTemplateDirectLinkIssues$Outbound = {
  message: string;
};

/** @internal */
export const TemplateCreateTemplateDirectLinkIssues$outboundSchema: z.ZodType<
  TemplateCreateTemplateDirectLinkIssues$Outbound,
  z.ZodTypeDef,
  TemplateCreateTemplateDirectLinkIssues
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TemplateCreateTemplateDirectLinkIssues$ {
  /** @deprecated use `TemplateCreateTemplateDirectLinkIssues$inboundSchema` instead. */
  export const inboundSchema =
    TemplateCreateTemplateDirectLinkIssues$inboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkIssues$outboundSchema` instead. */
  export const outboundSchema =
    TemplateCreateTemplateDirectLinkIssues$outboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkIssues$Outbound` instead. */
  export type Outbound = TemplateCreateTemplateDirectLinkIssues$Outbound;
}

export function templateCreateTemplateDirectLinkIssuesToJSON(
  templateCreateTemplateDirectLinkIssues:
    TemplateCreateTemplateDirectLinkIssues,
): string {
  return JSON.stringify(
    TemplateCreateTemplateDirectLinkIssues$outboundSchema.parse(
      templateCreateTemplateDirectLinkIssues,
    ),
  );
}

export function templateCreateTemplateDirectLinkIssuesFromJSON(
  jsonString: string,
): SafeParseResult<TemplateCreateTemplateDirectLinkIssues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TemplateCreateTemplateDirectLinkIssues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TemplateCreateTemplateDirectLinkIssues' from JSON`,
  );
}

/** @internal */
export const TemplateCreateTemplateDirectLinkResponseBody$inboundSchema:
  z.ZodType<
    TemplateCreateTemplateDirectLinkResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => TemplateCreateTemplateDirectLinkIssues$inboundSchema),
    ).optional(),
  })
    .transform((v) => {
      return new TemplateCreateTemplateDirectLinkResponseBody(v);
    });

/** @internal */
export type TemplateCreateTemplateDirectLinkResponseBody$Outbound = {
  message: string;
  code: string;
  issues?: Array<TemplateCreateTemplateDirectLinkIssues$Outbound> | undefined;
};

/** @internal */
export const TemplateCreateTemplateDirectLinkResponseBody$outboundSchema:
  z.ZodType<
    TemplateCreateTemplateDirectLinkResponseBody$Outbound,
    z.ZodTypeDef,
    TemplateCreateTemplateDirectLinkResponseBody
  > = z.instanceof(TemplateCreateTemplateDirectLinkResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() => TemplateCreateTemplateDirectLinkIssues$outboundSchema),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TemplateCreateTemplateDirectLinkResponseBody$ {
  /** @deprecated use `TemplateCreateTemplateDirectLinkResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    TemplateCreateTemplateDirectLinkResponseBody$inboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    TemplateCreateTemplateDirectLinkResponseBody$outboundSchema;
  /** @deprecated use `TemplateCreateTemplateDirectLinkResponseBody$Outbound` instead. */
  export type Outbound = TemplateCreateTemplateDirectLinkResponseBody$Outbound;
}
