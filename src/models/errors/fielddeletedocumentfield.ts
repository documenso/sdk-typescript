/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type FieldDeleteDocumentFieldDocumentsFieldsIssues = {
  message: string;
};

/**
 * Internal server error
 */
export type FieldDeleteDocumentFieldDocumentsFieldsResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<FieldDeleteDocumentFieldDocumentsFieldsIssues> | undefined;
};

/**
 * Internal server error
 */
export class FieldDeleteDocumentFieldDocumentsFieldsResponseBody extends Error {
  code: string;
  issues?: Array<FieldDeleteDocumentFieldDocumentsFieldsIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldDeleteDocumentFieldDocumentsFieldsResponseBodyData;

  constructor(err: FieldDeleteDocumentFieldDocumentsFieldsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldDeleteDocumentFieldDocumentsFieldsResponseBody";
  }
}

export type FieldDeleteDocumentFieldIssues = {
  message: string;
};

/**
 * Invalid input data
 */
export type FieldDeleteDocumentFieldResponseBodyData = {
  message: string;
  code: string;
  issues?: Array<FieldDeleteDocumentFieldIssues> | undefined;
};

/**
 * Invalid input data
 */
export class FieldDeleteDocumentFieldResponseBody extends Error {
  code: string;
  issues?: Array<FieldDeleteDocumentFieldIssues> | undefined;

  /** The original data that was passed to this error instance. */
  data$: FieldDeleteDocumentFieldResponseBodyData;

  constructor(err: FieldDeleteDocumentFieldResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.issues != null) this.issues = err.issues;

    this.name = "FieldDeleteDocumentFieldResponseBody";
  }
}

/** @internal */
export const FieldDeleteDocumentFieldDocumentsFieldsIssues$inboundSchema:
  z.ZodType<
    FieldDeleteDocumentFieldDocumentsFieldsIssues,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
  });

/** @internal */
export type FieldDeleteDocumentFieldDocumentsFieldsIssues$Outbound = {
  message: string;
};

/** @internal */
export const FieldDeleteDocumentFieldDocumentsFieldsIssues$outboundSchema:
  z.ZodType<
    FieldDeleteDocumentFieldDocumentsFieldsIssues$Outbound,
    z.ZodTypeDef,
    FieldDeleteDocumentFieldDocumentsFieldsIssues
  > = z.object({
    message: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteDocumentFieldDocumentsFieldsIssues$ {
  /** @deprecated use `FieldDeleteDocumentFieldDocumentsFieldsIssues$inboundSchema` instead. */
  export const inboundSchema =
    FieldDeleteDocumentFieldDocumentsFieldsIssues$inboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldDocumentsFieldsIssues$outboundSchema` instead. */
  export const outboundSchema =
    FieldDeleteDocumentFieldDocumentsFieldsIssues$outboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldDocumentsFieldsIssues$Outbound` instead. */
  export type Outbound = FieldDeleteDocumentFieldDocumentsFieldsIssues$Outbound;
}

export function fieldDeleteDocumentFieldDocumentsFieldsIssuesToJSON(
  fieldDeleteDocumentFieldDocumentsFieldsIssues:
    FieldDeleteDocumentFieldDocumentsFieldsIssues,
): string {
  return JSON.stringify(
    FieldDeleteDocumentFieldDocumentsFieldsIssues$outboundSchema.parse(
      fieldDeleteDocumentFieldDocumentsFieldsIssues,
    ),
  );
}

export function fieldDeleteDocumentFieldDocumentsFieldsIssuesFromJSON(
  jsonString: string,
): SafeParseResult<
  FieldDeleteDocumentFieldDocumentsFieldsIssues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FieldDeleteDocumentFieldDocumentsFieldsIssues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FieldDeleteDocumentFieldDocumentsFieldsIssues' from JSON`,
  );
}

/** @internal */
export const FieldDeleteDocumentFieldDocumentsFieldsResponseBody$inboundSchema:
  z.ZodType<
    FieldDeleteDocumentFieldDocumentsFieldsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(
      z.lazy(() => FieldDeleteDocumentFieldDocumentsFieldsIssues$inboundSchema),
    ).optional(),
  })
    .transform((v) => {
      return new FieldDeleteDocumentFieldDocumentsFieldsResponseBody(v);
    });

/** @internal */
export type FieldDeleteDocumentFieldDocumentsFieldsResponseBody$Outbound = {
  message: string;
  code: string;
  issues?:
    | Array<FieldDeleteDocumentFieldDocumentsFieldsIssues$Outbound>
    | undefined;
};

/** @internal */
export const FieldDeleteDocumentFieldDocumentsFieldsResponseBody$outboundSchema:
  z.ZodType<
    FieldDeleteDocumentFieldDocumentsFieldsResponseBody$Outbound,
    z.ZodTypeDef,
    FieldDeleteDocumentFieldDocumentsFieldsResponseBody
  > = z.instanceof(FieldDeleteDocumentFieldDocumentsFieldsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
      code: z.string(),
      issues: z.array(
        z.lazy(() =>
          FieldDeleteDocumentFieldDocumentsFieldsIssues$outboundSchema
        ),
      ).optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteDocumentFieldDocumentsFieldsResponseBody$ {
  /** @deprecated use `FieldDeleteDocumentFieldDocumentsFieldsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldDeleteDocumentFieldDocumentsFieldsResponseBody$inboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldDocumentsFieldsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldDeleteDocumentFieldDocumentsFieldsResponseBody$outboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldDocumentsFieldsResponseBody$Outbound` instead. */
  export type Outbound =
    FieldDeleteDocumentFieldDocumentsFieldsResponseBody$Outbound;
}

/** @internal */
export const FieldDeleteDocumentFieldIssues$inboundSchema: z.ZodType<
  FieldDeleteDocumentFieldIssues,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type FieldDeleteDocumentFieldIssues$Outbound = {
  message: string;
};

/** @internal */
export const FieldDeleteDocumentFieldIssues$outboundSchema: z.ZodType<
  FieldDeleteDocumentFieldIssues$Outbound,
  z.ZodTypeDef,
  FieldDeleteDocumentFieldIssues
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteDocumentFieldIssues$ {
  /** @deprecated use `FieldDeleteDocumentFieldIssues$inboundSchema` instead. */
  export const inboundSchema = FieldDeleteDocumentFieldIssues$inboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldIssues$outboundSchema` instead. */
  export const outboundSchema = FieldDeleteDocumentFieldIssues$outboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldIssues$Outbound` instead. */
  export type Outbound = FieldDeleteDocumentFieldIssues$Outbound;
}

export function fieldDeleteDocumentFieldIssuesToJSON(
  fieldDeleteDocumentFieldIssues: FieldDeleteDocumentFieldIssues,
): string {
  return JSON.stringify(
    FieldDeleteDocumentFieldIssues$outboundSchema.parse(
      fieldDeleteDocumentFieldIssues,
    ),
  );
}

export function fieldDeleteDocumentFieldIssuesFromJSON(
  jsonString: string,
): SafeParseResult<FieldDeleteDocumentFieldIssues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FieldDeleteDocumentFieldIssues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FieldDeleteDocumentFieldIssues' from JSON`,
  );
}

/** @internal */
export const FieldDeleteDocumentFieldResponseBody$inboundSchema: z.ZodType<
  FieldDeleteDocumentFieldResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  code: z.string(),
  issues: z.array(z.lazy(() => FieldDeleteDocumentFieldIssues$inboundSchema))
    .optional(),
})
  .transform((v) => {
    return new FieldDeleteDocumentFieldResponseBody(v);
  });

/** @internal */
export type FieldDeleteDocumentFieldResponseBody$Outbound = {
  message: string;
  code: string;
  issues?: Array<FieldDeleteDocumentFieldIssues$Outbound> | undefined;
};

/** @internal */
export const FieldDeleteDocumentFieldResponseBody$outboundSchema: z.ZodType<
  FieldDeleteDocumentFieldResponseBody$Outbound,
  z.ZodTypeDef,
  FieldDeleteDocumentFieldResponseBody
> = z.instanceof(FieldDeleteDocumentFieldResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
    code: z.string(),
    issues: z.array(z.lazy(() => FieldDeleteDocumentFieldIssues$outboundSchema))
      .optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FieldDeleteDocumentFieldResponseBody$ {
  /** @deprecated use `FieldDeleteDocumentFieldResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FieldDeleteDocumentFieldResponseBody$inboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FieldDeleteDocumentFieldResponseBody$outboundSchema;
  /** @deprecated use `FieldDeleteDocumentFieldResponseBody$Outbound` instead. */
  export type Outbound = FieldDeleteDocumentFieldResponseBody$Outbound;
}
