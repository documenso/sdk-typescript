/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { envelopeEnvelopeAttachmentCreate } from "../funcs/envelopeEnvelopeAttachmentCreate.js";
import { envelopeEnvelopeAttachmentDelete } from "../funcs/envelopeEnvelopeAttachmentDelete.js";
import { envelopeEnvelopeAttachmentFind } from "../funcs/envelopeEnvelopeAttachmentFind.js";
import { envelopeEnvelopeAttachmentUpdate } from "../funcs/envelopeEnvelopeAttachmentUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Envelope extends ClientSDK {
  /**
   * Find attachments
   *
   * @remarks
   * Find all attachments for an envelope
   */
  async envelopeAttachmentFind(
    request: operations.EnvelopeAttachmentFindRequest,
    options?: RequestOptions,
  ): Promise<operations.EnvelopeAttachmentFindResponse> {
    return unwrapAsync(envelopeEnvelopeAttachmentFind(
      this,
      request,
      options,
    ));
  }

  /**
   * Create attachment
   *
   * @remarks
   * Create a new attachment for an envelope
   */
  async envelopeAttachmentCreate(
    request: operations.EnvelopeAttachmentCreateRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(envelopeEnvelopeAttachmentCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update attachment
   *
   * @remarks
   * Update an existing attachment
   */
  async envelopeAttachmentUpdate(
    request: operations.EnvelopeAttachmentUpdateRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(envelopeEnvelopeAttachmentUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete attachment
   *
   * @remarks
   * Delete an attachment from an envelope
   */
  async envelopeAttachmentDelete(
    request: operations.EnvelopeAttachmentDeleteRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(envelopeEnvelopeAttachmentDelete(
      this,
      request,
      options,
    ));
  }
}
