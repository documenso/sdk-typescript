/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { folderFolderCreateFolder } from "../funcs/folderFolderCreateFolder.js";
import { folderFolderDeleteFolder } from "../funcs/folderFolderDeleteFolder.js";
import { folderFolderFindFolders } from "../funcs/folderFolderFindFolders.js";
import { folderFolderUpdateFolder } from "../funcs/folderFolderUpdateFolder.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Folder extends ClientSDK {
  /**
   * Find folders
   *
   * @remarks
   * Find folders based on a search criteria
   */
  async folderFindFolders(
    request: operations.FolderFindFoldersRequest,
    options?: RequestOptions,
  ): Promise<operations.FolderFindFoldersResponse> {
    return unwrapAsync(folderFolderFindFolders(
      this,
      request,
      options,
    ));
  }

  /**
   * Create new folder
   *
   * @remarks
   * Creates a new folder in your team
   */
  async folderCreateFolder(
    request: operations.FolderCreateFolderRequest,
    options?: RequestOptions,
  ): Promise<operations.FolderCreateFolderResponse> {
    return unwrapAsync(folderFolderCreateFolder(
      this,
      request,
      options,
    ));
  }

  /**
   * Update folder
   *
   * @remarks
   * Updates an existing folder
   */
  async folderUpdateFolder(
    request: operations.FolderUpdateFolderRequest,
    options?: RequestOptions,
  ): Promise<operations.FolderUpdateFolderResponse> {
    return unwrapAsync(folderFolderUpdateFolder(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete folder
   *
   * @remarks
   * Deletes an existing folder
   */
  async folderDeleteFolder(
    request: operations.FolderDeleteFolderRequest,
    options?: RequestOptions,
  ): Promise<operations.FolderDeleteFolderResponse> {
    return unwrapAsync(folderFolderDeleteFolder(
      this,
      request,
      options,
    ));
  }
}
