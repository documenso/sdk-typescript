/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { embeddingEmbeddingPresignCreateEmbeddingPresignToken } from "../funcs/embeddingEmbeddingPresignCreateEmbeddingPresignToken.js";
import { embeddingEmbeddingPresignVerifyEmbeddingPresignToken } from "../funcs/embeddingEmbeddingPresignVerifyEmbeddingPresignToken.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Embedding extends ClientSDK {
  /**
   * Create embedding presign token
   *
   * @remarks
   * Creates a presign token for embedding operations with configurable expiration time
   */
  async embeddingPresignCreateEmbeddingPresignToken(
    request: operations.EmbeddingPresignCreateEmbeddingPresignTokenRequest,
    options?: RequestOptions,
  ): Promise<operations.EmbeddingPresignCreateEmbeddingPresignTokenResponse> {
    return unwrapAsync(embeddingEmbeddingPresignCreateEmbeddingPresignToken(
      this,
      request,
      options,
    ));
  }

  /**
   * Verify embedding presign token
   *
   * @remarks
   * Verifies a presign token for embedding operations and returns the associated API token
   */
  async embeddingPresignVerifyEmbeddingPresignToken(
    request: operations.EmbeddingPresignVerifyEmbeddingPresignTokenRequest,
    options?: RequestOptions,
  ): Promise<operations.EmbeddingPresignVerifyEmbeddingPresignTokenResponse> {
    return unwrapAsync(embeddingEmbeddingPresignVerifyEmbeddingPresignToken(
      this,
      request,
      options,
    ));
  }
}
