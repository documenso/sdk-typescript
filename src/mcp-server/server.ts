/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { DocumensoCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$documentsCreateV0 } from "./tools/documentsCreateV0.js";
import { tool$documentsDelete } from "./tools/documentsDelete.js";
import { tool$documentsDistribute } from "./tools/documentsDistribute.js";
import { tool$documentsDuplicate } from "./tools/documentsDuplicate.js";
import { tool$documentsFieldsCreate } from "./tools/documentsFieldsCreate.js";
import { tool$documentsFieldsCreateMany } from "./tools/documentsFieldsCreateMany.js";
import { tool$documentsFieldsDelete } from "./tools/documentsFieldsDelete.js";
import { tool$documentsFieldsGet } from "./tools/documentsFieldsGet.js";
import { tool$documentsFieldsUpdate } from "./tools/documentsFieldsUpdate.js";
import { tool$documentsFieldsUpdateMany } from "./tools/documentsFieldsUpdateMany.js";
import { tool$documentsFind } from "./tools/documentsFind.js";
import { tool$documentsGet } from "./tools/documentsGet.js";
import { tool$documentsMoveToTeam } from "./tools/documentsMoveToTeam.js";
import { tool$documentsRecipientsCreate } from "./tools/documentsRecipientsCreate.js";
import { tool$documentsRecipientsCreateMany } from "./tools/documentsRecipientsCreateMany.js";
import { tool$documentsRecipientsDelete } from "./tools/documentsRecipientsDelete.js";
import { tool$documentsRecipientsGet } from "./tools/documentsRecipientsGet.js";
import { tool$documentsRecipientsUpdate } from "./tools/documentsRecipientsUpdate.js";
import { tool$documentsRecipientsUpdateMany } from "./tools/documentsRecipientsUpdateMany.js";
import { tool$documentsRedistribute } from "./tools/documentsRedistribute.js";
import { tool$documentsUpdate } from "./tools/documentsUpdate.js";
import { tool$templatesDelete } from "./tools/templatesDelete.js";
import { tool$templatesDirectLinkCreate } from "./tools/templatesDirectLinkCreate.js";
import { tool$templatesDirectLinkDelete } from "./tools/templatesDirectLinkDelete.js";
import { tool$templatesDirectLinkToggle } from "./tools/templatesDirectLinkToggle.js";
import { tool$templatesDuplicate } from "./tools/templatesDuplicate.js";
import { tool$templatesFieldsCreate } from "./tools/templatesFieldsCreate.js";
import { tool$templatesFieldsCreateMany } from "./tools/templatesFieldsCreateMany.js";
import { tool$templatesFieldsDelete } from "./tools/templatesFieldsDelete.js";
import { tool$templatesFieldsGet } from "./tools/templatesFieldsGet.js";
import { tool$templatesFieldsUpdate } from "./tools/templatesFieldsUpdate.js";
import { tool$templatesFieldsUpdateMany } from "./tools/templatesFieldsUpdateMany.js";
import { tool$templatesFind } from "./tools/templatesFind.js";
import { tool$templatesGet } from "./tools/templatesGet.js";
import { tool$templatesMoveToTeam } from "./tools/templatesMoveToTeam.js";
import { tool$templatesRecipientsCreate } from "./tools/templatesRecipientsCreate.js";
import { tool$templatesRecipientsCreateMany } from "./tools/templatesRecipientsCreateMany.js";
import { tool$templatesRecipientsDelete } from "./tools/templatesRecipientsDelete.js";
import { tool$templatesRecipientsGet } from "./tools/templatesRecipientsGet.js";
import { tool$templatesRecipientsUpdate } from "./tools/templatesRecipientsUpdate.js";
import { tool$templatesRecipientsUpdateMany } from "./tools/templatesRecipientsUpdateMany.js";
import { tool$templatesUpdate } from "./tools/templatesUpdate.js";
import { tool$templatesUse } from "./tools/templatesUse.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  apiKey?: SDKOptions["apiKey"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "Documenso",
    version: "0.2.0",
  });

  const client = new DocumensoCore({
    apiKey: deps.apiKey,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$documentsFind);
  tool(tool$documentsGet);
  tool(tool$documentsCreateV0);
  tool(tool$documentsUpdate);
  tool(tool$documentsDelete);
  tool(tool$documentsMoveToTeam);
  tool(tool$documentsDistribute);
  tool(tool$documentsRedistribute);
  tool(tool$documentsDuplicate);
  tool(tool$templatesFind);
  tool(tool$templatesGet);
  tool(tool$templatesUpdate);
  tool(tool$templatesDuplicate);
  tool(tool$templatesDelete);
  tool(tool$templatesUse);
  tool(tool$templatesMoveToTeam);
  tool(tool$documentsFieldsGet);
  tool(tool$documentsFieldsCreate);
  tool(tool$documentsFieldsCreateMany);
  tool(tool$documentsFieldsUpdate);
  tool(tool$documentsFieldsUpdateMany);
  tool(tool$documentsFieldsDelete);
  tool(tool$documentsRecipientsGet);
  tool(tool$documentsRecipientsCreate);
  tool(tool$documentsRecipientsCreateMany);
  tool(tool$documentsRecipientsUpdate);
  tool(tool$documentsRecipientsUpdateMany);
  tool(tool$documentsRecipientsDelete);
  tool(tool$templatesFieldsCreate);
  tool(tool$templatesFieldsGet);
  tool(tool$templatesFieldsCreateMany);
  tool(tool$templatesFieldsUpdate);
  tool(tool$templatesFieldsUpdateMany);
  tool(tool$templatesFieldsDelete);
  tool(tool$templatesRecipientsGet);
  tool(tool$templatesRecipientsCreate);
  tool(tool$templatesRecipientsCreateMany);
  tool(tool$templatesRecipientsUpdate);
  tool(tool$templatesRecipientsUpdateMany);
  tool(tool$templatesRecipientsDelete);
  tool(tool$templatesDirectLinkCreate);
  tool(tool$templatesDirectLinkDelete);
  tool(tool$templatesDirectLinkToggle);

  return server;
}
